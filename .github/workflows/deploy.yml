name: Deploy

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - ".github/**"
  pull_request:
    branches-ignore:
      - "deploy"
    paths-ignore:
      - ".github/**"
  workflow_dispatch:
    branches-ignore:
      - "deploy"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: 切换到当前分支
        uses: actions/checkout@v3
      - name: 编译结果缓存
        uses: actions/cache@v3
        id: build-cache
        with:
          path: ./public
          key: ${{ runner.os }}-public-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-public-
      - name: yarn 缓存路径
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        id: yarn-cache-dir-path
        run: |
          echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: yarn 目录缓存
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: node_modules 目录缓存
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache@v3
        id: yarn-lock-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-yarn-lock-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-lock-
      - name: 安装 hexo
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' && steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn global add hexo-cli
      - name: 安装依赖
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' && steps.yarn-lock-cache.outputs.cache-hit != 'true' }}
        run: yarn install --frozen-lockfile --registry=https://registry.npmjs.org/
  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: 切换到当前分支
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 恢复文件修改时间
        run: |
          git ls-files -z | while read -d '' path; do touch -d "$(git log -1 --format="@%ct" "$path")" "$path"; done
      - name: 编译结果缓存
        uses: actions/cache@v3
        id: build-cache
        with:
          path: ./public
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: yarn 缓存路径
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        id: yarn-cache-dir-path
        run: |
          echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: yarn 目录缓存
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: node_modules 目录缓存
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache@v3
        id: yarn-lock-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-yarn-lock-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-lock-
      # - name: Restore hexo 🔧
      #   run: ln -s /usr/local/lib/node_modules/hexo-cli/bin/hexo /usr/local/bin/hexo
      - name: 拉取最新主题
        run: git clone --depth=1 https://github.com/zvonimirsun/hexo-theme-next themes/next
      - name: 编译博客
        run: hexo g
        env:
          ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_ADMIN_API_KEY }}
      - name: 生成 algolia 数据
        run: hexo algolia
        env:
          ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_ADMIN_API_KEY }}
  deploy:
    if: ${{ github.ref_name == 'main' }}
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: 切换到当前分支
        uses: actions/checkout@v3
      - name: 编译结果缓存
        uses: actions/cache@v3
        id: build-cache
        with:
          path: ./public
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: 部署结果缓存
        if: ${{ steps.build-cache.outputs.cache-hit == 'true' }}
        uses: actions/cache@v3
        id: deploy-cache
        with:
          path: ./public
          key: ${{ runner.os }}-deploy-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-deploy-
      - name: 部署到 deploy 分支
        if: ${{ steps.build-cache.outputs.cache-hit == 'true' && steps.deploy-cache.outputs.cache-hit != 'true' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: public
          branch: deploy
          force: false
