name: Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ./node_modules
            /usr/local/lib/node_modules/hexo-cli
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install hexo üîß
        run: npm install hexo-cli -g
      - name: Install dependencies üîß
        run: yarn install --frozen-lockfile
  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Restore file modification time üîß
        run: |
          git ls-files -z | while read -d '' path; do touch -d "$(git log -1 --format="@%ct" "$path")" "$path"; done
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ./node_modules
            /usr/local/lib/node_modules/hexo-cli
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Restore hexo üîß
        run: ln -s /usr/local/lib/node_modules/hexo-cli/bin/hexo /usr/local/bin/hexo
      - name: Build app üîß
        run: hexo g
        env:
          ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_ADMIN_API_KEY }}
      - name: Generate algolia data
        run: hexo algolia
        env:
          ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_ADMIN_API_KEY }}
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: deploy
          folder: public
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          script: |
            cd ${{ secrets.PATH }}
            git fetch -p origin;
            git pull --rebase
            ls -al
