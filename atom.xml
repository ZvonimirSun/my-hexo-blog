<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随遇而安</title>
  
  <subtitle>在自由的空气中漂浮</subtitle>
  <link href="https://www.iszy.cc/atom.xml" rel="self"/>
  
  <link href="https://www.iszy.cc/"/>
  <updated>2022-11-20T19:31:10.000Z</updated>
  <id>https://www.iszy.cc/</id>
  
  <author>
    <name>Dirge</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Unraid初体验</title>
    <link href="https://www.iszy.cc/posts/unraid-start/"/>
    <id>https://www.iszy.cc/posts/unraid-start/</id>
    <published>2022-11-20T19:55:47.000Z</published>
    <updated>2022-11-20T19:31:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近折腾 Truenas Scale 一直不是很满意，准备换个 Unraid 试一试。</p><span id="more"></span><h2 id="前期考虑">前期考虑</h2><p>可能是我比较菜吧，折腾不来这个 Truenas。虽然搞了万兆交换机，接了万兆网卡，有 32GB 内存，raidz 的速度在硬盘少的情况下仍然不尽如人意。想要加几块硬盘，发现也不是很容易，没法提升原有 raid 的性能，只能横向扩展。而且 Truenas scale 的 docker 上了 k3s 还是稍微有些门槛，对我的应用场景来说也比较重了。以及众所周知的一些网络访问问题，大部分功能我其实也不大用到，使用起来实在比较僵硬。</p><p>于是考虑再三准备上手 Unraid。</p><p>我其实早就想试试 Unraid 了，之前看 LTT 视频，对 Unraid 的印象相当不错。突出一个特点，上手简单，灵活度又高。</p><p>从 Unraid 这个名字也能看出，这个系统的磁盘阵列不搞 raid，扩展起来非常容易。</p><p>而且只需要一块校验盘，只要损失不超过一块硬盘，都可以恢复。即使超过损失超过一块盘，也只会丢失那块盘的数据，不会影响整个阵列。这个数据安全性对于我来说是够了的。看网上的速度测试，在完成奇偶校验的情况下，有没有校验盘对整个阵列的读写速度没有什么影响。</p><p>既然不搞 raid，速度就受限于你的硬盘速度了，不过可以靠添加缓存盘来提升，只要读写不超过缓存盘的存储上限，都不会掉速。像万兆内网，加个 nvme 的硬盘，基本就可以跑满了。</p><p>为啥以前没有用呢，主要是 truenas 免费，而 Unraid 要钱嘛，而且组 nas 的时候偷懒让别人帮忙把系统装好了，懒得换了。Unraid 是按照硬盘数量收费的，不包括启动闪存盘，6 块硬盘需要 59 刀，12 块硬盘需要 89 刀，129 刀则不限硬盘数量。像我现在 7 块硬盘，加一块固态，后面还要加俩 nvme 做缓存，考虑到以后的扩展，应该得买 89 刀的就好。不过 Unraid 是一次性买断的，这样看似乎价格也还行，还有 30 天试用，让你充分考虑，许可也是可以后期升级的。</p><p>这次我先试用一波，没什么问题再上许可。</p><h2 id="部署">部署</h2><p><span class="exturl" data-url="aHR0cHM6Ly91bnJhaWQubmV0L3poLyVFNCVCOCU4QiVFOCVCRCVCRA==">下载 Unraid OS<i class="fa fa-external-link-alt"></i></span></p><p>首先你需要一个 U 盘。</p><ul><li>最小 4GB，最大不超过 32GB，<strong>一定要是 USB 2.0 的，不然系统可能读不到</strong>。</li><li>格式化为 <strong>FAT32 格式</strong>，卷标必须为 <strong>UNRAID</strong> 这六个字母。</li><li>不用在意 U 盘速度，这个 U 盘只会用来装系统和一些配置，启动后整个系统都是直接放到内存里的，只会偶尔读下配置会用到 U 盘。Unraid 现在还不支持通过 sd 卡和硬盘进行启动，所以你的主板必须要支持通过 U 盘启动。</li></ul><p>Unraid 现在提供了一个创建 U 盘启动器的工具，还是比较傻瓜式的。</p><p><img data-src="https://img.iszy.xyz/1668965114372.png" alt=""></p><p>可以选择安装的分支和系统版本，设置一下访问地址、网络 ip 和启动方式。这个 server name 默认叫 Tower，后面启动好后，直接浏览器里输<span class="exturl" data-url="aHR0cDovL3Rvd2VyLmxvY2Fs">http://tower.local<i class="fa fa-external-link-alt"></i></span> 就行，这个后期也可以在设置改。</p><p><img data-src="https://img.iszy.xyz/1668965501519.png" alt=""></p><p>这边是在线下载的系统包，实测下载速度有点慢。可以选择直接在刚刚的下载页面下载 zip 包。</p><p><img data-src="https://img.iszy.xyz/1668965696359.png" alt=""></p><p>这个工具支持直接选择本地宝安装，就是不能设置了。</p><p><img data-src="https://img.iszy.xyz/1668965764119.png" alt=""></p><p>本地包写完盘后是这样的。如果要 LAGENCY 模式启动，就这样就可以了。如果要 UEFI 模式启动，就把 <code>EFI-</code> 重命名为 <code>EFI</code> 就行。这个不是名字写错了嗷，是有用的。</p><p><img data-src="https://img.iszy.xyz/1668966001368.png" alt=""></p><p>现在一块 Unraid 启动盘就做好了，接下来把这个 U 盘插到你的 Nas 主板上，在 Bios 里设置成启动盘启动就好啦。这块盘将会长期作为系统盘留在你的主板上了。需要注意的是，如果你的系统盘坏了，Unraid 是支持重写个系统盘更换的，但是<strong>一年只提供一次迁移许可</strong>，所以最好买一个质量有保证的 U 盘。</p><p>当系统启动好后，访问 <span class="exturl" data-url="aHR0cDovL3Rvd2VyLmxvY2Fs">http://tower.local<i class="fa fa-external-link-alt"></i></span> 即可进入 WebGUI 页面。第一次访问会让你设置 root 用户的密码。</p><p><img data-src="https://img.iszy.xyz/1668966459094.png" alt=""></p><h2 id="初始化配置">初始化配置</h2><h3 id="时间设置">时间设置</h3><p>转到 <code>Settings</code> 选项卡，选择 <code>Date and Time</code></p><p>将时区设置为北京时区，并设置时间同步 ntp 服务器。这里推荐下我用的。点击 Apply 应用。</p><ul><li><span class="exturl" data-url="aHR0cDovL250cC5udHNjLmFjLmNu">ntp.ntsc.ac.cn<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cDovL2NuLm50cC5vcmcuY24=">cn.ntp.org.cn<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3RpbWUucG9vbC5hbGl5dW4uY29t">time.pool.aliyun.com<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3RpbWUxLmNsb3VkLnRlbmNlbnQuY29t">time1.cloud.tencent.com<i class="fa fa-external-link-alt"></i></span></li></ul><p><img data-src="https://img.iszy.xyz/1668966634982.png" alt=""></p><h3 id="网络设置">网络设置</h3><p>如果没有设置的话，默认会通过 dhcp 动态分配 ip，虽然我们大部分时候不需要直接使用 Unraid 的 ip，但是推荐设置为一个静态 ip，也可以设置下 dns。Unraid 可以配置端口聚合，我因为只接了一个万兆网口，所以就无所谓了，我也没改。</p><p>转到 <code>Settings</code> 选项卡，选择 <code>Networks</code></p><p>我现在的配置如下。注意要在虚拟机和 docker 关闭的情况下修改。我这边万兆网卡是另外加的，默认网口没接，有个警告。</p><p><img data-src="https://img.iszy.xyz/1668967055987.png?x-oss-process=style/big" alt=""></p><p>使用万兆网卡，最好把 MTU 改为 9000，电脑的万兆网卡也改成 9000，以提升网络性能。</p><p>如何判断应用成功了呢。可以通过 ping 一个大包看看有没有返回，如果 MTU 为 1500，这个命令将无响应。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping tower.lcoal -l 8962</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1668967282997.png" alt=""></p><h3 id="安装中文插件">安装中文插件</h3><p>现在 Unraid 官方提供了中文插件包，可以对用户界面进行完整的汉化。</p><p>转到 <code>Apps</code> 选项卡，点击 install 即可自动安装 <code>Community Applications</code> 插件。在内容更新完成后，这边将展示各种社区应用，在左侧分类菜单里选择 Language，找到 简体中文语言包，点击 install 安装即可。</p><p><img data-src="https://img.iszy.xyz/1668967574818.png?x-oss-process=style/big" alt=""></p><p>接下来转到 <code>Settings</code> 选项卡，选择 <code>Display Settings</code>，此时已经可以选择中文语言了。</p><p><img data-src="https://img.iszy.xyz/1668967669343.png?x-oss-process=style/big" alt=""></p><h3 id="添加磁盘阵列">添加磁盘阵列</h3><p>当然我们做 Nas，没有磁盘阵列可不行。</p><p>可以选择一到两块盘作为校验盘，一般一块就行了，安全要求不高可以不加，要求大于等于其他任意一块的容量，然后把其他盘添加到阵列里。</p><p><img data-src="https://img.iszy.xyz/1668967785490.png?x-oss-process=style/big" alt=""></p><p>有固态可以添加到缓存池里。</p><p><img data-src="https://img.iszy.xyz/1668967990297.png?x-oss-process=style/big" alt=""></p><p>完成后点击应用，点击启动阵列，此时校验盘会开始同步，容量越大，速度越慢。同步期间阵列访问速度也会很慢，推荐等到同步完成后再访问。点击格式化，完成阵列文件系统的格式化，阵列就可以使用了，不用等到同步完成。</p><p><img data-src="https://img.iszy.xyz/1668968076515.png?x-oss-process=style/big" alt=""></p><h3 id="添加共享">添加共享</h3><p>转到 <code>共享</code> 标签页，点击添加共享。</p><p><img data-src="https://img.iszy.xyz/1668968286999.png?x-oss-process=style/big" alt=""></p><p>按需要进行配置，我这边选择开启缓存。</p><p><img data-src="https://img.iszy.xyz/1668968418876.png?x-oss-process=style/big" alt=""></p><p>然后自动开启了 SMB 共享，可以进行设置。</p><p><img data-src="https://img.iszy.xyz/1668968571494.png?x-oss-process=style/big" alt=""></p><h2 id="后记">后记</h2><p>今天先折腾到这里，Nas 的基础功能已经基本可用。后续等我加点缓存再测试测试。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近折腾 Truenas Scale 一直不是很满意，准备换个 Unraid 试一试。&lt;/p&gt;</summary>
    
    
    
    <category term="技巧" scheme="https://www.iszy.cc/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Unraid" scheme="https://www.iszy.cc/tags/Unraid/"/>
    
    <category term="Nas" scheme="https://www.iszy.cc/tags/Nas/"/>
    
  </entry>
  
  <entry>
    <title>Git实用技巧</title>
    <link href="https://www.iszy.cc/posts/git/"/>
    <id>https://www.iszy.cc/posts/git/</id>
    <published>2022-11-10T09:28:50.000Z</published>
    <updated>2022-11-10T09:28:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Git 官方文档: <span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb2Nz">https://git-scm.com/docs<i class="fa fa-external-link-alt"></i></span></p><span id="more"></span><h2 id="一、基本操作">一、基本操作</h2><h3 id="1-新建-git-仓库">1. 新建 git 仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h2 id="image-png"><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668061621638-26d0d654-1d11-476e-ad42-779213954d3a.png#averageHue=%231a180e&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=255&amp;id=uec3bb9ee&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=255&amp;originWidth=753&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=30677&amp;status=done&amp;style=none&amp;taskId=ub98bd70b-f1c4-45ec-936a-b702c9e56ac&amp;title=&amp;width=753" alt="image.png"></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init -b main</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global init.defaultBranch main</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m main</span><br></pre></td></tr></table></figure><h3 id="2-克隆远程仓库">2. 克隆远程仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone http://git.gtmap.cn/sunziyang/test.git</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone http://git.gtmap.cn/sunziyang/test.git test</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone http://git.gtmap.cn/sunziyang/test.git --depth=1 -b main</span><br></pre></td></tr></table></figure><h3 id="3-提交代码">3. 提交代码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add -a</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add -u</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;first commit&quot;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -am &quot;first commit&quot;</span><br></pre></td></tr></table></figure><h3 id="4-查看仓库状态">4. 查看仓库状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668065792022-2f10cc69-8b64-490a-873b-4490d739ac4d.png#averageHue=%23eeebe3&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=266&amp;id=ubfc4c1f9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=266&amp;originWidth=514&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17056&amp;status=done&amp;style=none&amp;taskId=ub77e1215-ae37-4a2e-bce2-52bbf5a053c&amp;title=&amp;width=514" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status -s</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668065823355-cc80fe1f-4c0d-458e-9caf-878aa6c4c539.png#averageHue=%23eceae1&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=94&amp;id=ub93edee7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=94&amp;originWidth=306&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=4934&amp;status=done&amp;style=none&amp;taskId=ue0520f5c-7c4b-4726-826f-4f956392cfa&amp;title=&amp;width=306" alt="image.png"></p><h3 id="5-查看提交历史">5. 查看提交历史</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb2NzL2dpdC1sb2c=">https://git-scm.com/docs/git-log<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668067504751-d1ca6988-90c2-4e6e-8f94-7fae64114897.png#averageHue=%23edebe2&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=284&amp;id=u3e18e9e4&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=284&amp;originWidth=460&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=18261&amp;status=done&amp;style=none&amp;taskId=ucf014180-1861-44f3-852a-6ebda6ba773&amp;title=&amp;width=460" alt="image.png"></p><h3 id="6-新建分支">6. 新建分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch test</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout test</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b test</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668067736305-2544957f-7920-4ce9-84a9-68b15ec93403.png#averageHue=%23eae8de&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=67&amp;id=u6138a8f8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=67&amp;originWidth=357&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=3886&amp;status=done&amp;style=none&amp;taskId=u72824e74-1f6b-4987-9488-a2e658aad04&amp;title=&amp;width=357" alt="image.png"></p><h3 id="7-合并分支">7. 合并分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout main</span><br><span class="line">git merge test</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668067797343-5d90568f-e122-4eb7-90ff-2ad1cfae876c.png#averageHue=%23ebe8df&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=169&amp;id=u269b62da&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=169&amp;originWidth=333&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=9114&amp;status=done&amp;style=none&amp;taskId=u90a3dc38-d1f3-4d70-acd4-1e90452beaf&amp;title=&amp;width=333" alt="image.png"></p><h3 id="8-删除分支">8. 删除分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d test-not-need</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668067838780-f1b53130-bb07-4b12-9aad-9b770b0de605.png#averageHue=%23e9e6dc&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=62&amp;id=u2370f562&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=62&amp;originWidth=380&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=4233&amp;status=done&amp;style=none&amp;taskId=ub35df9b2-5298-4a87-98aa-2e74d4bbb9b&amp;title=&amp;width=380" alt="image.png"></p><h3 id="9-合并冲突">9. 合并冲突</h3><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668067914592-6e0fddf1-9985-426d-ae5b-aed6cbe18cd7.png#averageHue=%23ece9e0&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=103&amp;id=u20f88793&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=103&amp;originWidth=499&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=7865&amp;status=done&amp;style=none&amp;taskId=ucebc667b-79bb-4312-8ee8-254cd38c9e1&amp;title=&amp;width=499" alt="image.png"><br>当两个分支都对同一行进行了修改，git 便会产生冲突，并标记为未合并<br><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668067991503-6e70f673-53ff-4128-ae69-a0bdf5bbfdf9.png#averageHue=%23edece4&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=222&amp;id=u4ee59a0c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=222&amp;originWidth=646&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=10709&amp;status=done&amp;style=none&amp;taskId=u4c7ea403-ed55-41a3-b0b1-4fc2e4c111e&amp;title=&amp;width=646" alt="image.png"><br>此时将每个文件进行修改，确认最后的内容，使用 git add 方法标记为冲突已解决</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .\A.txt</span><br></pre></td></tr></table></figure><p>在所有文件的冲突均已解决后，使用 commit 提交此次修改。<br><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668069129425-5e01c21f-729f-46a1-adfb-54124e62e2f0.png#averageHue=%23f4f0f0&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=231&amp;id=u0a104ab9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=231&amp;originWidth=217&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=5265&amp;status=done&amp;style=none&amp;taskId=uf34e2edc-1b3c-4171-a0b7-1415373ec8d&amp;title=&amp;width=217" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge --abort</span><br></pre></td></tr></table></figure><h3 id="10-远程仓库">10. 远程仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote</span><br></pre></td></tr></table></figure><p>默认应该为空</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin http://git.gtmap.cn/sunziyang/test.git</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668068523745-63687201-d938-4494-befb-57cca24fecfa.png#averageHue=%23ece9e0&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=74&amp;id=uc779cfc8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=74&amp;originWidth=615&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=6674&amp;status=done&amp;style=none&amp;taskId=u31dc2c1c-a0e6-4bc9-8ea0-1c7704aa632&amp;title=&amp;width=615" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin main</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668068742518-da3e5415-4ecf-4585-95a1-21883204aaff.png#averageHue=%23ebe8de&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=159&amp;id=ua8990786&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=159&amp;originWidth=462&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=10110&amp;status=done&amp;style=none&amp;taskId=ufe9f12fb-96ed-4a25-b4b5-e9a760df4ef&amp;title=&amp;width=462" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream-to=origin/main main</span><br><span class="line">git branch -u origin/main main</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668068938744-515203f8-4a6f-43e7-bbc0-522e22a1226e.png#averageHue=%23ebe7de&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=63&amp;id=u6c235234&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=63&amp;originWidth=425&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=4153&amp;status=done&amp;style=none&amp;taskId=uf9fe9258-ee38-49f8-b351-99cbff36d71&amp;title=&amp;width=425" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin main</span><br></pre></td></tr></table></figure><h2 id="二、常见技巧">二、常见技巧</h2><h3 id="1-临时保存成果">1. 临时保存成果</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668069378275-7d9723e8-f968-45a1-a935-2f7540fb323e.png#averageHue=%23eceae1&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=322&amp;id=ub9527e34&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=322&amp;originWidth=519&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=23325&amp;status=done&amp;style=none&amp;taskId=u0a78b019-d61d-447c-ad99-b92b7162850&amp;title=&amp;width=519" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668069487321-01f9baf6-a5e2-4229-aad7-c4239fd249be.png#averageHue=%23eceae1&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=388&amp;id=ua7cbc212&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=388&amp;originWidth=525&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=28749&amp;status=done&amp;style=none&amp;taskId=udadaa4f7-105b-41e0-b8a7-476e313c817&amp;title=&amp;width=525" alt="image.png"></p><h3 id="2-合并分支灵活选择-rebase-merge">2. 合并分支灵活选择 rebase/merge</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge test</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase test</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668070029923-03a6023a-f289-4a7f-8d97-287b5481d0d5.png#averageHue=%23f7f6f6&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=403&amp;id=u5f38a90d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=403&amp;originWidth=424&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17070&amp;status=done&amp;style=none&amp;taskId=u6606d6f5-faf6-4398-803d-abf982ae461&amp;title=&amp;width=424" alt="image.png"></p><h3 id="3-cherry-pick">3. cherry-pick</h3><p>适合 hotfix</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git cherry-pick 12d654f1d701cbf7cd9abb98ce84eeef460a24a7</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668070259530-0a9f15b2-6f04-4efc-9178-87b71593348d.png#averageHue=%23ece9e0&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=74&amp;id=u95fa0050&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=74&amp;originWidth=623&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=7688&amp;status=done&amp;style=none&amp;taskId=u55f4075a-f7f1-4101-af2e-b2c9c8e3278&amp;title=&amp;width=623" alt="image.png"><br><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668070287061-158eab00-07ce-4b3a-986b-82138a35f0d7.png#averageHue=%23f9f8f8&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=446&amp;id=u041c3d65&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=446&amp;originWidth=444&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=19422&amp;status=done&amp;style=none&amp;taskId=u66e44180-6621-42e8-bc9e-6962a82f6a8&amp;title=&amp;width=444" alt="image.png"></p><h3 id="4-修改上次提交">4. 修改上次提交</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><p>会同时提交暂存的文件</p><h3 id="5-取消文件修改">5. 取消文件修改</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout .\C.txt</span><br></pre></td></tr></table></figure><p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/25824471/1668070393228-757e4a56-6231-42dc-853d-a125b8c72cf3.png#averageHue=%23e9e6dc&amp;clientId=ub96d4c89-475b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=54&amp;id=ufb48917e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=54&amp;originWidth=364&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=3939&amp;status=done&amp;style=none&amp;taskId=u97acef27-eb9d-4b80-a14e-1e74f9c8462&amp;title=&amp;width=364" alt="image.png"></p><h3 id="6-弃用提交">6. 弃用提交</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">保留文件</span></span><br><span class="line">git reset --soft 12d654f1d701cbf7cd9abb98ce84eeef460a24a7</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">丢弃修改</span></span><br><span class="line">git reset --hard 12d654f1d701cbf7cd9abb98ce84eeef460a24a7</span><br></pre></td></tr></table></figure><h3 id="7-补丁文件">7. 补丁文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git diff [file] &gt; a.patch</span><br><span class="line">git apply a.patch</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Git 官方文档: &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXQtc2NtLmNvbS9kb2Nz&quot;&gt;https://git-scm.com/docs&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技巧" scheme="https://www.iszy.cc/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="git" scheme="https://www.iszy.cc/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>让一个元素高度随宽度按比例自适应</title>
    <link href="https://www.iszy.cc/posts/css-percentagewidth-autoheight/"/>
    <id>https://www.iszy.cc/posts/css-percentagewidth-autoheight/</id>
    <published>2022-11-05T02:04:34.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录</p><span id="more"></span><p>宽度的自适应是根据 Viewport 的 width 来调整的，高度的自适应也根据 Viewport 的 height 来调整的，理论上和 width 没有任何关系。所以需要找到一个可以关联上 Viewport 的 with 的属性还能撑起高度。</p><p>这个属性就是 padding，padding 是根据 Viewport 的 width 来调整的，padding-top 和 padding-bottom 也是如此，所以我们设置这个属性就可以和 width 保持一定比例了。</p><p>现在比如</p><p>父容器样式为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#dedede</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子容器样式为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.child</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候我们再设置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.child</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">80%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子元素就变成了一个宽度 80%，高度为 0，但有 80% 宽度 的 padding-bottom 的正方形了，效果如下图</p><p><img data-src="https://img.iszy.xyz/1667613841613.png" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="CSS" scheme="https://www.iszy.cc/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Linux 使用 du 查看文件占用空间</title>
    <link href="https://www.iszy.cc/posts/linux-du/"/>
    <id>https://www.iszy.cc/posts/linux-du/</id>
    <published>2022-11-04T01:56:06.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>du</code> 命令是一个标准的 Linux/Unix 命令，允许用户快速获得磁盘使用信息。可以用来显示目录或文件的大小，查找文件和目录的磁盘使用情况的命令。du 命令在与各种选项一起使用时能以多种格式提供结果。</p><span id="more"></span><h2 id="一、常用命令">一、常用命令</h2><h3 id="查看当前目录所占空间">查看当前目录所占空间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1667525725877.png" alt=""></p><h3 id="查看当前目录所有文件（包括内层文件）所占空间">查看当前目录所有文件（包括内层文件）所占空间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -h</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1667525880573.png" alt=""></p><h3 id="查看当前目录所有文件及目录大小">查看当前目录所有文件及目录大小</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh *</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1667525959810.png" alt=""></p><h3 id="查看当前目录所有隐藏文件及目录大小">查看当前目录所有隐藏文件及目录大小</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh .[!.]*</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1667526150032.png" alt=""></p><h3 id="查看当前目录所有文件及目录大小，包含隐藏文件夹">查看当前目录所有文件及目录大小，包含隐藏文件夹</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh * .[^.]*</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1667525678301.png" alt=""></p><h2 id="二、主要参数">二、主要参数</h2><h3 id="h-human-readable">-h , --human-readable</h3><p><code>-h</code> 标志以人类可读的格式打印大小输出。</p><p>默认 du 输出的数值都是以 Bytes 为单位的，可读性不佳。加上<code>-h</code>参数后，可以自动转换为以 KB、MB、GB 的方式展示，更加贴合习惯。</p><h3 id="s-summarize">-s, --summarize</h3><p><code>-s</code> 标志通常和 <code>-h</code> 标志一并使用。默认 du 会展示目录下的所有子级，加上 <code>-s</code> 标志后，则会显示当前目录下文件及目录大小汇总。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;du&lt;/code&gt; 命令是一个标准的 Linux/Unix 命令，允许用户快速获得磁盘使用信息。可以用来显示目录或文件的大小，查找文件和目录的磁盘使用情况的命令。du 命令在与各种选项一起使用时能以多种格式提供结果。&lt;/p&gt;</summary>
    
    
    
    <category term="技巧" scheme="https://www.iszy.cc/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Linux" scheme="https://www.iszy.cc/tags/Linux/"/>
    
    <category term="du" scheme="https://www.iszy.cc/tags/du/"/>
    
  </entry>
  
  <entry>
    <title>利用HAR文件查看和诊断网络请求</title>
    <link href="https://www.iszy.cc/posts/chrome-har-debug/"/>
    <id>https://www.iszy.cc/posts/chrome-har-debug/</id>
    <published>2022-09-14T05:00:02.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过 HAR 文件可以方便快捷的查看和诊断网络请求，定位问题。最近才学习到这个有用的知识，在此记录下</p><span id="more"></span><h2 id="一、HAR-是什么">一、HAR 是什么</h2><p>HAR（HTTP 归档）是多种 HTTP 会话工具用来导出所记录数据的 一种文件格式。这种格式基本上是 JSON 对象，并具有一组特定的字段。请注意，并非所有 HAR 格式的字段都是必填字段， 很多时候，部分信息不会保存到文件中。</p><p><strong>注意：</strong></p><p><strong>HAR 文件包含敏感数据！</strong></p><ul><li>录制过程中所下载网页中的内容。</li><li>Cookie（任何有 HAR 文件的人都可以使用这些 Cookie 冒用帐号）。</li><li>录制过程中提交的所有信息： 个人详细信息、密码、信用卡号码等。</li></ul><p>如有需要，可以在文本编辑器中编辑 HAR 文件以及对敏感信息进行 匿名处理。</p><p>以在多种浏览器中记录 HTTP 会话，包括 Google Chrome、Microsoft Edge 以及 Mozilla Firefox。</p><h2 id="二、创建和查看-HAR-文件">二、创建和查看 HAR 文件</h2><p>这边我主要以 Chrome 浏览器为例，其他浏览器可以参考。IE 浏览器不支持保存为 HAR 文件，需要通过第三方软件如 <span class="exturl" data-url="aHR0cHM6Ly93d3cudGVsZXJpay5jb20vZmlkZGxlcg==">Fiddler<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cuaHR0cHdhdGNoLmNvbS8=">HttpWatch<i class="fa fa-external-link-alt"></i></span> 等实现。</p><h3 id="创建-HAR-文件">创建 HAR 文件</h3><p>在 Network 面板中<strong>右键点击任意一条请求</strong>，点击<strong>Save As HAR With Content</strong>，即可将所有请求保存为 HAR 文件。<strong>注意，Network 面板中的过滤条件是被忽略的。</strong></p><p><img data-src="https://img.iszy.xyz/1663130958729.png" alt=""></p><p>从 71 版本开始，导入导出 HAR 文件开始包好 Initiator 和 priority 信息。</p><p>从 <strong>76 版本</strong>开始，Chrome 导出的 HAR 文件中首次开始包含 WebSocket 消息。另外 ，Chrome 在 Network 面板<strong>新增了导入和导出 HAR 文件的按钮</strong>，使用更加便捷。</p><p><img data-src="https://img.iszy.xyz/1663131014757.png" alt=""></p><h3 id="查看-HAR-文件">查看 HAR 文件</h3><p>从 <strong>62 版本</strong>开始，Chrome 增加了<strong>将 HAR 文件拖拽到 Network 面板进行导入展示</strong>的功能。</p><p><img data-src="https://img.iszy.xyz/1663130703947.png" alt=""></p><p>从 76 版本开始，可以通过 Chrome 在 Network 面板<strong>新增的导入 HAR 文件的按钮</strong>进行导入。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;通过 HAR 文件可以方便快捷的查看和诊断网络请求，定位问题。最近才学习到这个有用的知识，在此记录下&lt;/p&gt;</summary>
    
    
    
    <category term="技巧" scheme="https://www.iszy.cc/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Chrome" scheme="https://www.iszy.cc/tags/Chrome/"/>
    
    <category term="浏览器" scheme="https://www.iszy.cc/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    <category term="Har" scheme="https://www.iszy.cc/tags/Har/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 开启压缩</title>
    <link href="https://www.iszy.cc/posts/springboot-enable-compress/"/>
    <id>https://www.iszy.cc/posts/springboot-enable-compress/</id>
    <published>2022-09-14T01:38:50.000Z</published>
    <updated>2022-09-14T01:38:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>公司的部分老项目还没有用上 webpack，前后端不分离，有不少静态资源不压缩的话还是比较大的。这边记录下 Spring Boot 开启压缩的方法。</p><span id="more"></span><h2 id="开启方法">开启方法</h2><ol><li>首先需要在 <code>application.yml</code> 里启用压缩</li><li>因为默认只压缩 <code>text/html</code> 类型，需要添加上其他需要的类型，比如 <code>application/json</code></li><li>如有需要可以配置启用压缩的最小响应大小，默认为 <code>2048 byte</code></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">compression:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">mime-types:</span> <span class="string">application/json,application/xml,text/html,text/xml,text/plain</span></span><br><span class="line">    <span class="attr">min-response-size:</span> <span class="number">2048</span></span><br></pre></td></tr></table></figure><h2 id="效果对比">效果对比</h2><p>压缩前</p><p><img data-src="https://img.iszy.xyz/1663551069657.png" alt=""></p><p>压缩后</p><p><img data-src="https://img.iszy.xyz/1663551287356.png" alt=""></p><p>可以看到已经开启了 gzip 压缩</p><p><img data-src="https://img.iszy.xyz/1663551338263.png" alt=""></p><h2 id="常见其他方法">常见其他方法</h2><p>一般如果应用比较多，在每个应用里添加配置还是比较麻烦的。可以考虑使用 Nginx 进行代理，统一添加 gzip 甚至 brotli 压缩，会更加方便。brotli 和 gzip 可以同时开始，压缩效果更好。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;公司的部分老项目还没有用上 webpack，前后端不分离，有不少静态资源不压缩的话还是比较大的。这边记录下 Spring Boot 开启压缩的方法。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Spring Boot" scheme="https://www.iszy.cc/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>强制删除 Kubernetes Namespace</title>
    <link href="https://www.iszy.cc/posts/force-delete-k8s-namespace/"/>
    <id>https://www.iszy.cc/posts/force-delete-k8s-namespace/</id>
    <published>2022-08-12T08:43:41.000Z</published>
    <updated>2022-11-05T01:13:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>记一次 Kubernetes NameSpace 的强制删除。</p><span id="more"></span><h2 id="一、前情">一、前情</h2><p>我在使用 Kubernetes 时，遇到了 Kubernetes NameSpace 无法正常删除的问题。</p><p>NameSpace 状态保持在 Terminating 已经挺久了，我决定强制删除这个 NameSpace。</p><h2 id="二、步骤">二、步骤</h2><h3 id="1-查看存在的-NameSpace">1. 查看存在的 NameSpace</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl get ns</span></span><br><span class="line">NAME                   STATUS        AGE</span><br><span class="line">default                Active        5h46m</span><br><span class="line">istio-system           Terminating   11m</span><br><span class="line">kube-node-lease        Active        5h46m</span><br><span class="line">kube-public            Active        5h46m</span><br><span class="line">kube-system            Active        5h46m</span><br><span class="line">kubernetes-dashboard   Active        5h46m</span><br></pre></td></tr></table></figure><h3 id="2-尝试强制删除-NameSpace">2. 尝试强制删除 NameSpace</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl delete ns istio-system --force --grace-period=0</span></span><br><span class="line">warning: Immediate deletion does not <span class="built_in">wait</span> <span class="keyword">for</span> confirmation that the running resource has been terminated. The resource may <span class="built_in">continue</span> to run on the cluster indefinitely.</span><br></pre></td></tr></table></figure><p>卡了挺久也没有效果，看来是删不掉，得强制删了</p><h3 id="2-获取需要强制删除的-NameSpace-信息">2. 获取需要强制删除的 NameSpace 信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl get namespace istio-system -o json &gt; istio-system.json</span></span><br></pre></td></tr></table></figure><h3 id="3-删除-finalizers-相关内容">3. 删除 finalizers 相关内容</h3><p><img data-src="https://img.iszy.xyz/1660293510641.png" alt=""></p><h3 id="4-运行-kube-proxy">4. 运行 kube-proxy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl proxy</span></span><br><span class="line">Starting to serve on 127.0.0.1:8001</span><br></pre></td></tr></table></figure><h3 id="5-通过-API-强制删除-NameSpace">5. 通过 API 强制删除 NameSpace</h3><p>新运行个终端，调用 API 删除 NameSpace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># curl -k -H &quot;Content-Type: application/json&quot; -X PUT --data-binary @istio-system.json http://127.0.0.1:8001/api/v1/namespaces/istio-system/finalize</span></span><br></pre></td></tr></table></figure><h3 id="6-关闭-kube-proxy-并确认-NameSpace-已删除">6. 关闭 kube-proxy 并确认 NameSpace 已删除</h3><p>按 <code>CTRL-C</code> 关闭 kube-proxy，然后确认下现在的 NameSpace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl get ns</span></span><br><span class="line">NAME                   STATUS        AGE</span><br><span class="line">default                Active        5h48m</span><br><span class="line">kube-node-lease        Active        5h48m</span><br><span class="line">kube-public            Active        5h48m</span><br><span class="line">kube-system            Active        5h48m</span><br><span class="line">kubernetes-dashboard   Active        5h48m</span><br></pre></td></tr></table></figure><p>可以看到 NameSpace 已经被强制删除了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记一次 Kubernetes NameSpace 的强制删除。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Docker" scheme="https://www.iszy.cc/tags/Docker/"/>
    
    <category term="Kubernetes" scheme="https://www.iszy.cc/tags/Kubernetes/"/>
    
    <category term="K8s" scheme="https://www.iszy.cc/tags/K8s/"/>
    
  </entry>
  
  <entry>
    <title>下载老版本 Chromium 的正确姿势</title>
    <link href="https://www.iszy.cc/posts/old-chromium-download/"/>
    <id>https://www.iszy.cc/posts/old-chromium-download/</id>
    <published>2022-07-14T03:18:03.000Z</published>
    <updated>2022-07-14T03:47:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>网站开发中，有时候会遇到特定老版本 Chrome 才会产生的 bug，需要使用老版本的 Chrome 来解决。下面记录一下如何下载老版本的 Chromium 包。</p><span id="more"></span><h2 id="步骤">步骤</h2><h3 id="一、在更新日志中查找需要的版本">一、在更新日志中查找需要的版本</h3><p><span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWVyZWxlYXNlcy5nb29nbGVibG9nLmNvbS8yMDE5LzAzLw==">Chrome Releases<i class="fa fa-external-link-alt"></i></span></p><p>比如我需要 72 版本，我在 2019 年 3 月的更新日志中可以找到了最新的 72 版本的 Chromium 的版本号<code>72.0.3626.121</code>。</p><p><img data-src="https://img.iszy.xyz/1657769323436.png" alt=""></p><h3 id="二、通过版本号查找-commit-信息">二、通过版本号查找 commit 信息</h3><p><span class="exturl" data-url="aHR0cHM6Ly9vbWFoYXByb3h5LmFwcHNwb3QuY29tLw==">omahaproxy.appspot.com<i class="fa fa-external-link-alt"></i></span></p><p><img data-src="https://img.iszy.xyz/1657769457812.png" alt=""></p><p>我们这里看一下<code>Branch Base Position</code>这一项。</p><h3 id="三、通过-Position-号查找软件包">三、通过 Position 号查找软件包</h3><p><span class="exturl" data-url="aHR0cHM6Ly9jb21tb25kYXRhc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9jaHJvbWl1bS1icm93c2VyLXNuYXBzaG90cy9pbmRleC5odG1s">Chromium 历史存储仓库<i class="fa fa-external-link-alt"></i></span></p><p>先选择需要的平台</p><p><img data-src="https://img.iszy.xyz/1657769779611.png" alt=""></p><p>然后根据 <code>Position</code> 号找到对应的版本</p><p><img data-src="https://img.iszy.xyz/1657769834283.png" alt=""></p><p>可能会搜不到，可以手动拉到对应 <code>Position</code> 号附近的版本，大版本号基本是一致的。比如这里我选择了 <code>612439</code> 版本。</p><p><img data-src="https://img.iszy.xyz/1657769953873.png" alt=""></p><p>下载对应的压缩版，解压即可使用。比如这里就是<code>chrome-win.zip</code>。</p><p><img data-src="https://img.iszy.xyz/1657770071034.png" alt=""></p><h3 id="开始使用吧">开始使用吧</h3><p><img data-src="https://img.iszy.xyz/1657770205975.png" alt=""></p><h2 id="一点注意">一点注意</h2><p>有一点小坑，在需要切换 Chromium 版本时，需要把已经开着的 Chromium 全都关闭，再打开新版本的 Chromium，否则版本不会切换。</p><p>另，Chrome 和 Chromium 是互不影响的，切换 Chromium 版本，不用考虑 Chrome 的状态。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;网站开发中，有时候会遇到特定老版本 Chrome 才会产生的 bug，需要使用老版本的 Chrome 来解决。下面记录一下如何下载老版本的 Chromium 包。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://www.iszy.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="Chrome" scheme="https://www.iszy.cc/tags/Chrome/"/>
    
    <category term="Chromium" scheme="https://www.iszy.cc/tags/Chromium/"/>
    
  </entry>
  
  <entry>
    <title>textContent、innerText与innerHTML的区别</title>
    <link href="https://www.iszy.cc/posts/diff-innerhtml-innertext-textcontent/"/>
    <id>https://www.iszy.cc/posts/diff-innerhtml-innertext-textcontent/</id>
    <published>2022-05-16T05:26:50.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>textContent、innerText 与 innerHTML 三个接口，在我们想要获取或改变一个 DOM 的内容时，经常会用到，有时候会搞混其中的用法，在此做个记录。</p><span id="more"></span><h2 id="示例">示例</h2><p>没有什么比直接运行一段代码的效果更加直接了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;contain&quot;</span>&gt;</span></span><br><span class="line">      北京上海广州<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span>&gt;</span>深圳厦门<span class="tag">&lt;/<span class="name">span</span>&gt;</span>陕西西安</span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>台湾香港澳门<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>我是按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">type</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> container = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;body&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;textContent的内容是:\n&quot;</span>, container.<span class="property">textContent</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;innerText的内容是:\n&quot;</span>, container.<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;innerHTML的内容是:\n&quot;</span>, container.<span class="property">innerHTML</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1652678013076.png" alt=""></p><p>从结果里我们可以清晰的看出 textContent、innerText 和 innerHTML 的区别。</p><ul><li>textContent 会获取除标签外的所有内容</li><li>innerText 会受到 css 的影响，仅会获取实际可以看到的内容，隐藏内容会被忽略</li><li>innerHTML 会获取所有内容，包括标签</li></ul><h2 id="总结差异">总结差异</h2><ol><li><p>行为区别</p><ul><li><code>textContent</code> 和 <code>innerText</code> 获取的是元素内容；<code>innerHTML</code> 获取的是元素的 html 文本</li><li><code>textContent</code> 会获取所有元素的内容，包括 <code>script</code> 和 <code>style</code> 元素；<code>innerText</code> 不会</li><li><code>innerText</code> 会受到 css 影响，不会返回隐藏内容；<code>textContent</code> 不会</li><li>使用 <code>innerHTML</code> 设置内容，会将内容解析为 html，所以性能相对较差，还可能存在 XSS 攻击；而因为文本不会被解析，则 <code>textContent</code> 和 <code>innerText</code> 不会有这个问题，性能更好。</li><li>因为 <code>innerText</code> 受样式影响，会触发重排，而 <code>textContent</code> 不会。</li></ul></li><li><p>归属区别</p><ul><li><code>textContent</code> 是 <code>Node</code> 对象的属性</li><li><code>innerText</code> 是 <code>Element</code> 对象的属性</li><li><code>innerHTML</code> 是 <code>HTMLElement</code> 对象的属性</li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;textContent、innerText 与 innerHTML 三个接口，在我们想要获取或改变一个 DOM 的内容时，经常会用到，有时候会搞混其中的用法，在此做个记录。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="DOM" scheme="https://www.iszy.cc/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>Antfu大佬的unplugin-vue-components神器初体验</title>
    <link href="https://www.iszy.cc/posts/unplugin-vue-components-first-experience/"/>
    <id>https://www.iszy.cc/posts/unplugin-vue-components-first-experience/</id>
    <published>2022-05-06T02:54:20.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>unplugin-vue-components</code>(后称插件) 是一个按需自动引入 vue 组件的插件，是 Antfu 大佬的一个杰作，今天来体验一下。</p><span id="more"></span><h2 id="需求">需求</h2><p>为了减少项目大小，将组件库按需引入是很常见的。不过，如果你的项目中使用组件库内容非常频繁，甚至还需要引入多个组件库，这就会变的非常麻烦，有可能在一个组件中需要 import 十几个组件，还要手动加入到 Components 中才能使用。这样的行为，在一个项目中，可能会重复很多遍，费时费力。</p><p>那么插件解决了一个什么问题呢，插件基于 <code>unplugin</code>，对 Vue Components 做了支持。它能够预设条件匹配组件 template 中使用的组件，然后自动进行按需引入。另外可以指定一个目录，插件会将目录中的组件进行注册，这样，在全局范围内，也就可以直接使用这些组件而无需导入了。</p><h2 id="使用">使用</h2><p><code>unplugin-vue-components</code>支持比较广泛。</p><p>按照官方说明：</p><ul><li>支持 Vue 2 和 Vue 3</li><li>支持 components 和 directives</li><li>支持 Vite, Webpack, Vue CLI, Rollup, esbuild 等，这个主要还是看 unplugin 支持什么</li><li>支持 tree-shaking，只导入使用到的组件</li><li>完整支持 TypeScript</li><li>内置了很多流行组件库的解析支持，比如说我需要使用的 Ant Design Vue 3</li></ul><p>更多说明请访问 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FudGZ1L3VucGx1Z2luLWF1dG8taW1wb3J0">antfu/unplugin-auto-import<i class="fa fa-external-link-alt"></i></span></p><h3 id="安装">安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install unplugin-vue-components -D</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add unplugin-vue-components -D</span><br></pre></td></tr></table></figure><h3 id="自动导入-UI-库">自动导入 UI 库</h3><p>在这里以 vite 为例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-vue-components/vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AntDesignVueResolver</span> &#125; <span class="keyword">from</span> <span class="string">&quot;unplugin-vue-components/resolvers&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">AntDesignVueResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>现在已经可以在项目中随意使用 Ant Design Vue 组件了，插件会自动匹配，引入对应的组件和样式文件，可以说是体验非常良好了，这也是 Ant Design Vue 现阶段推荐使用方式。</p><h3 id="自动导入组件">自动导入组件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-vue-components/vite&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="comment">// 组件所在位置</span></span><br><span class="line">      <span class="attr">dirs</span>: [<span class="string">&quot;src/components&quot;</span>],</span><br><span class="line">      <span class="comment">//   resolvers: [AntDesignVueResolver()]</span></span><br><span class="line">      <span class="attr">dts</span>: <span class="string">&quot;src/components.d.ts&quot;</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果安装有 TypeScript，插件将会自动开启 dts 选项，生成<code>./auto-imports.d.ts</code>文件。</p><p>注意不要有重名组件，重名组件将被自动忽略防止冲突。</p><h3 id="完整配置项定义">完整配置项定义</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">Options</span> &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Preset names or custom imports map</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@default</span> []</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  imports?: <span class="title class_">Arrayable</span>&lt;<span class="title class_">ImportsMap</span> | <span class="title class_">PresetName</span>&gt;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Identifiers to be ignored</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  ignore?: (<span class="built_in">string</span> | <span class="title class_">RegExp</span>)[];</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Pass a custom function to resolve the component importing path from the component name.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * The component names are always in PascalCase</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  resolvers?: <span class="title class_">Arrayable</span>&lt;<span class="title class_">Arrayable</span>&lt;<span class="title class_">Resolver</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Filepath to generate corresponding .d.ts file.</span></span><br><span class="line"><span class="comment">   * Default enabled when `typescript` is installed locally.</span></span><br><span class="line"><span class="comment">   * Set `false` to disable.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@default</span> &#x27;./auto-imports.d.ts&#x27;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  dts?: <span class="built_in">string</span> | <span class="built_in">boolean</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Allow overriding imports sources from multiple presets.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@default</span> <span class="variable">false</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  presetOverriding?: <span class="built_in">boolean</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Rules to include transforming target.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@default</span> [/\.[jt]sx?$/, /\.vue\??/]</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  include?: <span class="title class_">FilterPattern</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Rules to exclude transforming target.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@default</span> [/node_modules/, /\.git/]</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  exclude?: <span class="title class_">FilterPattern</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Generate source map.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@default</span> <span class="variable">false</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  sourceMap?: <span class="built_in">boolean</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Generate corresponding .eslintrc-auto-import.json file.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  eslintrc?: <span class="title class_">ESLintrc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;unplugin-vue-components&lt;/code&gt;(后称插件) 是一个按需自动引入 vue 组件的插件，是 Antfu 大佬的一个杰作，今天来体验一下。&lt;/p&gt;</summary>
    
    
    
    <category term="技巧" scheme="https://www.iszy.cc/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://www.iszy.cc/tags/Vue/"/>
    
    <category term="Vite" scheme="https://www.iszy.cc/tags/Vite/"/>
    
  </entry>
  
  <entry>
    <title>MAVEN打包时自动给静态文件添加时间戳</title>
    <link href="https://www.iszy.cc/posts/maven-add-timestamp-to-static-files/"/>
    <id>https://www.iszy.cc/posts/maven-add-timestamp-to-static-files/</id>
    <published>2022-04-18T02:56:43.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>每次 maven 打包更新时，静态文件的路径不会变，如果用户不清缓存的话，就存在更新不及时的问题.所以需要在打包时自动添加时间戳，以实现用户无需清缓存就能使用到最新版本的目标。</p><span id="more"></span><h2 id="一、添加时间戳">一、添加时间戳</h2><h3 id="（一）思路">（一）思路</h3><p>因为不是前后端分离用 webpack 打包，直接修改文件名不是非常现实，那么请求时加参数的方法算是一个比较简单的解决方案。</p><p>我的需求中需要完成几件事：</p><ol><li>将 html 文件中的 js 和 css 引用都添加时间戳参数</li><li>将 ftl 文件（FreeMarker）中的 js 和 css 引用都添加时间戳参数。如果用的是其他的模版语言，也可以类似参考</li><li>将 requirejs 的请求统一添加时间戳参数</li></ol><h3 id="（二）依赖">（二）依赖</h3><p>这边要用到 Google 的一个 replacer 插件，可以在最终打包前替换文件内容。原名为 <code>maven-replacer-plugin</code>，2012 年后改名为 <code>replacer</code>。到现在为止最新版本为 2014 年 4 月 16 日发布的 <code>1.5.3</code> 版本。</p><p>如果没有指定 <code>basedir</code>，则后面的文件路径都要写绝对路径。可以通过 <code>includes</code> 和 <code>excludes</code> 指定包含和排除的文件，也可以通过 <code>file</code> 来指定特定文件。</p><h3 id="（三）pom-xml-参考">（三）pom.xml 参考</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.build.timestamp.format</span>&gt;</span>yyyyMMddHHmmss<span class="tag">&lt;/<span class="name">maven.build.timestamp.format</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--...--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.maven-replacer-plugin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>replacer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--...--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--...--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.maven-replacer-plugin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>replacer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>prepare-package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>replace<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--定位到target文件夹--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">basedir</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">basedir</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--匹配ftl和html文件--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>*.ftl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.ftl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>*.html<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.html<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">replacements</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--分别匹配单引号和双引号版本--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>\.css\&quot;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>.css?v=$&#123;maven.build.timestamp&#125;\&quot;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>\.css\&#x27;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>.css?v=$&#123;maven.build.timestamp&#125;\&#x27;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>\.js\&quot;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>.js?v=$&#123;maven.build.timestamp&#125;\&quot;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>\.js\&#x27;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>.js?v=$&#123;maven.build.timestamp&#125;\&#x27;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--requirejs的参数--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>urlArgs: \&#x27;v=#\&#123;.*\&#125;\&#x27;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>urlArgs: \&#x27;v=#\&#123;$&#123;maven.build.timestamp&#125;\&#125;\&#x27;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">replacements</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--...--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、时间戳时区">二、时间戳时区</h2><p>上面的配置其实已经可以解决问题了。但因为<code>maven.build.timestamp</code>使用的是 UTC 时间，无法配置时区，我们可以看到添加的时间戳与北京时间差了 8 小时。</p><p>不过自带组件解决不了，我们可以用其他组件解决一下。</p><p>这里引入 <code>build-helper-maven-plugin</code> 插件来添加一个当前时区的时间属性<code>build.time</code>，然后将<code>maven.build.timestamp</code>替换成<code>build.time</code>即可。</p><p>完整参考：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--...--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.maven-replacer-plugin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>replacer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>build-helper-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--...--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--...--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>build-helper-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>timestamp-property<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>timestamp-property<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">name</span>&gt;</span>build.time<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>yyyyMMddHHmmss<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">locale</span>&gt;</span>zh_CN<span class="tag">&lt;/<span class="name">locale</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">timeZone</span>&gt;</span>GMT+8<span class="tag">&lt;/<span class="name">timeZone</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.maven-replacer-plugin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>replacer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>prepare-package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>replace<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--定位到target文件夹--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">basedir</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">basedir</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--匹配ftl和html文件--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>*.ftl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.ftl<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>*.html<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.html<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">replacements</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--分别匹配单引号和双引号版本--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>\.css\&quot;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>.css?v=$&#123;build.time&#125;\&quot;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>\.css\&#x27;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>.css?v=$&#123;build.time&#125;\&#x27;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>\.js\&quot;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>.js?v=$&#123;build.time&#125;\&quot;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>\.js\&#x27;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>.js?v=$&#123;build.time&#125;\&#x27;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--requirejs的参数--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">replacement</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">token</span>&gt;</span>urlArgs: \&#x27;v=#\&#123;.*\&#125;\&#x27;<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">value</span>&gt;</span>urlArgs: \&#x27;v=#\&#123;$&#123;build.time&#125;\&#125;\&#x27;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">replacement</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">replacements</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--...--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;每次 maven 打包更新时，静态文件的路径不会变，如果用户不清缓存的话，就存在更新不及时的问题.所以需要在打包时自动添加时间戳，以实现用户无需清缓存就能使用到最新版本的目标。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Maven" scheme="https://www.iszy.cc/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装 docker compose v2</title>
    <link href="https://www.iszy.cc/posts/linux-install-docker-compose-v2/"/>
    <id>https://www.iszy.cc/posts/linux-install-docker-compose-v2/</id>
    <published>2022-04-13T02:42:38.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近换个新服务器，准备装下 docker，才发现 docker compose 已经出 v2 版本一段时间了。安装和使用上和 v1 有一些差别，在此记录。</p><span id="more"></span><h2 id="介绍">介绍</h2><p>目前 Docker 官方用 GO 语言 重写 了 Docker Compose，并将其作为了 docker cli 的子命令，称为 Compose V2。</p><h2 id="安装">安装</h2><p>首先要先安装 docker，再进行接下来的安装。</p><h3 id="仅为当前用户安装">仅为当前用户安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.docker/cli-plugins</span><br><span class="line">$ curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; <span class="variable">$HOME</span>/.docker/cli-plugins/docker-compose</span><br><span class="line">$ <span class="built_in">chmod</span> +x <span class="variable">$HOME</span>/.docker/cli-plugins/docker-compose</span><br></pre></td></tr></table></figure><h3 id="安装到全局">安装到全局</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; docker-compose</span><br><span class="line">$ sudo <span class="built_in">mv</span> docker-compose /usr/libexec/docker/cli-plugins</span><br><span class="line">$ sudo <span class="built_in">chmod</span> +x /usr/libexec/docker/cli-plugins/docker-compose</span><br><span class="line">$ sudo <span class="built_in">chown</span> root:root /usr/libexec/docker/cli-plugins/docker-compose</span><br></pre></td></tr></table></figure><h2 id="验证和使用">验证和使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker compose version</span><br><span class="line"></span><br><span class="line">Docker Compose version v2.4.1</span><br></pre></td></tr></table></figure><p>如果能正常返回，说明已经可以正常使用。只要将熟悉的 docker-compose 命令替换为 docker compose，即可使用 Docker Compose。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近换个新服务器，准备装下 docker，才发现 docker compose 已经出 v2 版本一段时间了。安装和使用上和 v1 有一些差别，在此记录。&lt;/p&gt;</summary>
    
    
    
    <category term="技巧" scheme="https://www.iszy.cc/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Docker" scheme="https://www.iszy.cc/tags/Docker/"/>
    
    <category term="Linux" scheme="https://www.iszy.cc/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Promise多个then、catch、finally的测试与总结</title>
    <link href="https://www.iszy.cc/posts/promise-multi-then-catch-finally/"/>
    <id>https://www.iszy.cc/posts/promise-multi-then-catch-finally/</id>
    <published>2022-04-07T15:42:28.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>没有经过测试，其实我不太清楚如果一个 Promise 后加了多个 then、catch、finally 时候的处理逻辑。测试一下，可以帮助我们很好的去除误解，了解程序真正的执行逻辑。</p><span id="more"></span><h2 id="测试代码">测试代码</h2><h3 id="一、测试一">一、测试一</h3><p>一个基础的 Promise</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">testPromise</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(<span class="string">&quot;成功！&quot;</span>);</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">reject</span>(<span class="string">&quot;失败！&quot;</span>);</span><br><span class="line">    &#125;, <span class="number">3000</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;then return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;catch return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;finally return&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">testPromise</span>();</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1649347940017.png" alt=""></p><ol><li>一个 promise 中，resolve 和 reject 只会执行最先触发的一个</li></ol><h3 id="二、测试二">二、测试二</h3><p>多次添加<code>then</code>、<code>catch</code>、<code>finally</code>方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">testPromise</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&quot;成功！&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 1:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;then 1 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 1:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;catch 1 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 1&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;finally 1 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 2:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;then 2 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 2:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;catch 2 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 2&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;finally 2 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 3:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;then 3 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 3:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;catch 3 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 3&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;finally 3 return&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">testPromise</span>();</span><br></pre></td></tr></table></figure><p>运行结果</p><p><img data-src="https://img.iszy.xyz/1649347319739.png" alt=""></p><ol><li>第一个 then 的参数是 resolve 的参数值，然后执行第一个 finally</li><li>第二个 then 的回调参数是第一个 then 的返回值，然后执行第二个 finally，以此类推</li><li>finally 无参数</li></ol><h3 id="三、测试三">三、测试三</h3><p>抛出错误</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">testPromise</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">reject</span>(<span class="string">&quot;失败！&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 1:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;then 1 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 1:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;catch 1 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 1&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;finally 1 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 2:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;then 2 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 2:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;catch 2 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 2&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;finally 2 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 3:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;then 3 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 3:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;catch 3 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 3&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;finally 3 return&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">testPromise</span>();</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1649348250796.png" alt=""></p><ol><li>reject 抛出的错误会在第一个 catch 中捕获，参数是 reject 的参数值，接着执行第一个 finally</li><li>继续会执行第二个 then，参数是第一个 catch 的返回值，然后执行第二个 finally，接下来与上个测试类似，以此类推</li></ol><h3 id="四、测试四">四、测试四</h3><ol><li>在 resolve 后抛出错误</li><li>在第一个 then 中抛出错误</li><li>在第一个 catch 中抛出错误</li><li>在第二个 finally 中抛出错误</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">testPromise</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&quot;成功！&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 1:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;then 1 throw&quot;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 1:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;catch 1 throw&quot;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 1&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;finally 1 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 2:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;then 2 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 2:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;catch 2 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 2&quot;</span>, res);</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;finally 2 throw&quot;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 3:&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;then 3 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 3:&quot;</span>, err);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;catch 3 return&quot;</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 3&quot;</span>, res);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;finally 3 return&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">testPromise</span>();</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1649350087385.png" alt=""></p><ol><li>在 resolve 后，抛出错误不会被处理，与 reject 处理相似</li><li>在第一个 then 中抛出错误，被后续的第一个 catch（catch1）捕获，参数是错误值，后续继续执行。</li><li>在第一个 catch 中抛出错误，被后续的第一个 catch（catch2）捕获，参数是错误值，后续继续执行。</li><li>在第二个 finally 中抛出错误，被后续的第一个 catch（catch3）捕获，参数是错误值，后续继续执行。</li></ol><h3 id="五、测试五">五、测试五</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">testPromise</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> a = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&quot;成功！&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> b = a.<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 1&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;finally 1 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> c = a.<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 1:&quot;</span>, res);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;then 1 throw&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> d = a.<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 1:&quot;</span>, err);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;catch 1 throw&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> e = a.<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 2:&quot;</span>, err);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a === b&quot;</span>, a === b);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a === c&quot;</span>, a === c);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a === d&quot;</span>, a === d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">testPromise</span>();</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1649350721994.png" alt=""></p><ol><li>then、finally、catch 返回的都是一个新的 Promise，所以 a、b、c、d、e 的值都是不同的</li><li>在 a 上添加的 catch 仅会处理 a 的 reject 和错误，不会处理 then 和 finally 的错误</li><li>then、finally 执行是按照事件添加顺序</li></ol><h3 id="六、测试六">六、测试六</h3><p>分别在 a 和 a.then 上添加 then、catch、finally</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">testPromise</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> a = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&quot;成功！&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> b = a.<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 1:&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;then 1 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  a.<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 1:&quot;</span>, err);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;catch 1 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  a.<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 1&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;finally 1 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  b.<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 2:&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;then 2 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  b.<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 2:&quot;</span>, err);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;catch 2 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  b.<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 2&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;finally 2 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  a.<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;then 3:&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;then 3 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  a.<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;catch 3:&quot;</span>, err);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;catch 3 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  a.<span class="title function_">finally</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally 3&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;finally 3 return&quot;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">testPromise</span>();</span><br></pre></td></tr></table></figure><p><img data-src="https://img.iszy.xyz/1649351186185.png" alt=""></p><ol><li>将 a.then 的返回值保存为 b，可以看到 b 上添加的 then、catch、finally 执行必然在 a 上添加的 then、catch、finally 之后执行</li><li>在同一个 Promise 对象上多次添加 then、catch、finally，也会按照添加顺序依次执行</li></ol><h2 id="总结">总结</h2><p>为了方便，以下内容中“三个方法”指 then、catch、finally 方法</p><ol><li>一个 Promise 中，resolve 和 reject <em>只会执行最先触发的一个</em></li><li>Promise 对象的三个方法都会返回一个 <em>新的 Promise 对象</em></li><li>因为三个方法都会返回 Promise 对象，且返回值和错误都会<em>向后传递</em>，所以可以<em>链式调用</em>。比如 Promise 链靠前的方法中抛出错误，会被后续 Promise 对象的 catch 方法捕获。</li><li>在三个方法中 <em>return</em> 值，会作为<em>后续的第一个 then 方法</em>的参数</li><li>在三个方法中 <em>throw</em> 值，会被<em>后续的第一个 catch 方法</em>捕获。如果在这个 catch 方法中没有继续抛出错误，则不会被后续的 catch 方法捕获</li><li>在同一个 Promise 对象上，<em>多次添加</em> then、finally 方法，<em>均会被执行</em>，且会 <em>按照添加顺序依次执行</em></li><li>在同一个 Promise 对象上，<em>多次添加</em> catch 方法，仅会被<em>第一个</em>添加的 catch 方法捕获</li><li>在 Promise 对象的三个方法 <em>返回的 Promise 对象</em> 上添加的三个方法，必然会 <em>在原 Promise 对象</em> 上添加的三个方法 <em>之后执行</em></li><li>在一个 Promise 链上，多次添加 then、catch、finally 也会按照添加顺序依次执行。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;没有经过测试，其实我不太清楚如果一个 Promise 后加了多个 then、catch、finally 时候的处理逻辑。测试一下，可以帮助我们很好的去除误解，了解程序真正的执行逻辑。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Promise" scheme="https://www.iszy.cc/tags/Promise/"/>
    
  </entry>
  
  <entry>
    <title>新整了个腾讯云香港轻量应用服务器</title>
    <link href="https://www.iszy.cc/posts/tc-light-hk-server-benchmark-20220407/"/>
    <id>https://www.iszy.cc/posts/tc-light-hk-server-benchmark-20220407/</id>
    <published>2022-04-07T07:30:01.000Z</published>
    <updated>2022-04-07T07:38:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>新整了个腾讯云香港轻量应用服务器测一下。</p><span id="more"></span><h2 id="网络">网络</h2><p>后悔以前 CN2 线路的时候没留一台，现在是 163 线路，体验上其实还可以，至少不像阿里轻量到处绕。</p><p><img data-src="https://img.iszy.xyz/1649315971476.png?x-oss-process=style/big" alt=""></p><h2 id="Benchmark">Benchmark</h2><p>用老鬼大佬的脚本跑了下，还是挺满意的。<span class="exturl" data-url="aHR0cDovL0Zhc3QuY29t">Fast.com<i class="fa fa-external-link-alt"></i></span> 不知道为啥不通。</p><p><img data-src="https://img.iszy.xyz/1649315021461.png?x-oss-process=style/big" alt=""></p><h2 id="媒体解锁和性能测试">媒体解锁和性能测试</h2><p><img data-src="https://img.iszy.xyz/1649316516160.png?x-oss-process=style/big" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;新整了个腾讯云香港轻量应用服务器测一下。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://www.iszy.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="腾讯云" scheme="https://www.iszy.cc/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    <category term="轻量应用服务器" scheme="https://www.iszy.cc/tags/%E8%BD%BB%E9%87%8F%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="Benchmark" scheme="https://www.iszy.cc/tags/Benchmark/"/>
    
    <category term="香港" scheme="https://www.iszy.cc/tags/%E9%A6%99%E6%B8%AF/"/>
    
  </entry>
  
  <entry>
    <title>zsh (anon):12: character not in range</title>
    <link href="https://www.iszy.cc/posts/zsh-character-not-in-range/"/>
    <id>https://www.iszy.cc/posts/zsh-character-not-in-range/</id>
    <published>2022-04-07T06:30:15.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>运行<code>source ~/.zshrc</code>，报错<code>zsh (anon):12: character not in range</code></p><span id="more"></span><p>这是由于环境变量 LC_ALL 和 LANG 未设置的缘故。</p><p>只需要在<code>~/.zshrc</code>文件前面加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LC_ALL=C.UTF-8</span><br><span class="line"><span class="built_in">export</span> LANG=C.UTF-8</span><br></pre></td></tr></table></figure><p>然后运行<code>source ~/.zshrc</code>即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;运行&lt;code&gt;source ~/.zshrc&lt;/code&gt;，报错&lt;code&gt;zsh (anon):12: character not in range&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技巧" scheme="https://www.iszy.cc/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Linux" scheme="https://www.iszy.cc/tags/Linux/"/>
    
    <category term="Zsh" scheme="https://www.iszy.cc/tags/Zsh/"/>
    
    <category term="Locale" scheme="https://www.iszy.cc/tags/Locale/"/>
    
  </entry>
  
  <entry>
    <title>将 Blob 数据保存到剪贴板</title>
    <link href="https://www.iszy.cc/posts/j/"/>
    <id>https://www.iszy.cc/posts/j/</id>
    <published>2022-04-07T03:15:19.000Z</published>
    <updated>2022-11-15T01:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>将 Blob 数据保存到剪贴板，需要调用浏览器的 Clipboard API，浏览器会做一些安全限制，不是所有情况都能调用的到。</p><span id="more"></span><h2 id="示例">示例</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">writeClipboard</span>(<span class="params">blob</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> navigator.<span class="property">clipboard</span>.<span class="title function_">write</span>([</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">ClipboardItem</span>(&#123;</span><br><span class="line">        [blob.<span class="property">type</span>]: blob,</span><br><span class="line">      &#125;),</span><br><span class="line">    ]);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Blob copied.&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="property">name</span>, err.<span class="property">message</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="限制">限制</h2><p>要将 Blob 数据保存到剪贴板，需要构建一个 ClipboardItem 对象，然后通过 Clipboard API 写入到剪贴板。</p><ol><li><p>浏览器支持</p><p>首先你的浏览器要能够支持此接口，可以根据 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NsaXBib2FyZA==">MDN<i class="fa fa-external-link-alt"></i></span> 上的说明来确定是否兼容。</p></li><li><p>仅支持通过在 Https 加密的安全域名或 localhost 下调用</p><p>Clipboard API 包含 Clipboard、ClipboardItem、ClipboardEvent 三个接口。在满足要求的时候，是都可以调用到的；否则将只能调用 ClipboardEvent 接口，其他两个将会表现为未定义。</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;将 Blob 数据保存到剪贴板，需要调用浏览器的 Clipboard API，浏览器会做一些安全限制，不是所有情况都能调用的到。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Clipboard" scheme="https://www.iszy.cc/tags/Clipboard/"/>
    
    <category term="ClipboardItem" scheme="https://www.iszy.cc/tags/ClipboardItem/"/>
    
  </entry>
  
  <entry>
    <title>Switch正在检查是否可以运行软件问题</title>
    <link href="https://www.iszy.cc/posts/i/"/>
    <id>https://www.iszy.cc/posts/i/</id>
    <published>2022-03-25T09:19:24.000Z</published>
    <updated>2022-03-25T09:59:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在 Switch 上启动游戏老是出现<code>正在检查是否可以运行软件</code>的提示，而且只有游戏所有者能通过检查打开游戏，其他号都显示未购买游戏。后面在尝试的过程中，我偶然发现了问题所在，在此记录下。</p><span id="more"></span><h2 id="太长不看版">太长不看版</h2><p>总的来说就是，购买游戏的账号未在这台 Switch 上登录过 eShop，并跳过密码，导致其他账号无法查找到游戏的购买记录。</p><p>所以解决办法就是，<strong>购买游戏的账号</strong>在这台 Switch 上登录一次 eShop，勾选下次跳过后，输入密码登录。然后退出到主界面，使用<strong>玩游戏的账号</strong>打开游戏，此时应当已经可以通过检查，在第一次通过检查后，后续其他账号即可正常打开。</p><h2 id="问题复现">问题复现</h2><p>众所周知，在 Switch 上可以登录多个账号，任意一个账号购买过游戏，在这台 Switch 上所有用户都能玩。</p><p>所以一个常规操作就是注册几个不同地区的账号，在价格最低的地区购买游戏。</p><p>我就注册了几个账号，也在几个号上买了游戏。今天想要整理一下我这些个号，把没用的都删除掉。一开始我以为如果我删除了一个账号，这个账号所有的游戏也会从 Switch 上移除，于是我轮流删除了除我的主号以外的所有账号，发现游戏列表里一个都没少。</p><p>这就让我有点意外了，于是我轮流打开了一下每个游戏，看下有没有什么问题。果然，我发现，除了我主号购买的，以及实体卡的游戏，其他游戏会跳出<code>正在检查是否可以运行软件</code>的提示，并最终告诉我我没有这个游戏，需要去 eShop 购买。</p><p>于是我一个个加回我的账号，然后，把刚刚不能打开的游戏，都确认了一下是哪一个号买的。虽然我确认到了每个账号的游戏购买情况，我却遇到了新的问题。就是每次打开那几个游戏的时候，都会跳出<code>正在检查是否可以运行软件</code>的提示，且除了购买游戏的账号能够打开外，其他账号一律显示没有购买。</p><p>在接下来的试错过程中，我偶然间用我主号之外的号打开 eShop 时发现，需要我再次输入密码，且在我勾选下次跳过，并完成登录后，其他账号能够正常打开这个号的游戏了。</p><p>我回忆了一下，我以前的使用流程，基本上都是绑定账号后，登录 eShop 再购买下载游戏的，所以从来没出现过这个验证。这次删除再重新添加账号，就把这个登录记录清空了，其他账号就没法查到购买记录了。</p><p>这下问题就确定了，我用每个号都登了遍 eShop，再验证，所有游戏打开都正常了。</p><h2 id="其他">其他</h2><p>我看网上还有人是在迁移主机，以及多台主机一起使用的时候出现上述问题，不确定我这里的方法能不能解决，毕竟我只有过一个 Switch，没法验证。另外平常基本都是联网状态下玩的 Switch，离线使用也没遇到过问题。如果有类似问题，可以试验下以上方法能不能解决，希望能帮到有需要的人。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天在 Switch 上启动游戏老是出现&lt;code&gt;正在检查是否可以运行软件&lt;/code&gt;的提示，而且只有游戏所有者能通过检查打开游戏，其他号都显示未购买游戏。后面在尝试的过程中，我偶然发现了问题所在，在此记录下。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://www.iszy.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="NS" scheme="https://www.iszy.cc/tags/NS/"/>
    
    <category term="Nintendo" scheme="https://www.iszy.cc/tags/Nintendo/"/>
    
    <category term="Switch" scheme="https://www.iszy.cc/tags/Switch/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript LeetCode 3.无重复字符的最长子串</title>
    <link href="https://www.iszy.cc/posts/h/"/>
    <id>https://www.iszy.cc/posts/h/</id>
    <published>2022-03-20T16:10:23.000Z</published>
    <updated>2022-03-20T16:10:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvbG9uZ2VzdC1zdWJzdHJpbmctd2l0aG91dC1yZXBlYXRpbmctY2hhcmFjdGVycy8=">无重复字符的最长子串 - 力扣<i class="fa fa-external-link-alt"></i></span></p></blockquote><p><strong>难度中等</strong></p><span id="more"></span><h2 id="题目">题目</h2><p>给定一个字符串<code>s</code>，请你找出其中不含有重复字符的<strong>最长子串</strong>的长度。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;abcabcbb&quot;</span><br><span class="line">输出: 3</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;bbbbb&quot;</span><br><span class="line">输出: 1</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;pwwkew&quot;</span><br><span class="line">输出: 3</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span><br><span class="line">     请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>s</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>≤</mo><mn>5</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">0 \leq s.length \leq 5 \times 10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span><span class="mrel">≤</span><span class="mord mathit">s</span><span class="mord mathrm">.</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">t</span><span class="mord mathit">h</span><span class="mrel">≤</span><span class="mord mathrm">5</span><span class="mbin">×</span><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">4</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></li><li><code>s</code>由英文字母、数字、符号和空格组成</li></ul><h2 id="解答">解答</h2><p>遍历字符串。</p><ul><li>当没有遇见重复字符，则将当前字符拼入临时字符串。</li><li>当遇见了重复字符，将临时字符串中重复字符及以前的字符串移除，然后将当前字符拼入临时字符串。</li><li>如果此时临时字符串长度大于记录的最大长度，则更新最大长度。</li></ul><p>所以总的来说，只需要遍历一遍字符串即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">s</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> lengthOfLongestSubstring = <span class="keyword">function</span> (<span class="params">s</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!s) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> tmp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> index = tmp.<span class="title function_">indexOf</span>(s[i]);</span><br><span class="line">    <span class="keyword">if</span> (index === -<span class="number">1</span>) &#123;</span><br><span class="line">      tmp += s[i];</span><br><span class="line">      <span class="keyword">if</span> (tmp.<span class="property">length</span> &gt; result) &#123;</span><br><span class="line">        result = tmp.<span class="property">length</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      tmp = tmp.<span class="title function_">substring</span>(index + <span class="number">1</span>) + s[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvbG9uZ2VzdC1zdWJzdHJpbmctd2l0aG91dC1yZXBlYXRpbmctY2hhcmFjdGVycy8=&quot;&gt;无重复字符的最长子串 - 力扣&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;难度中等&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="LeetCode" scheme="https://www.iszy.cc/tags/LeetCode/"/>
    
    <category term="力扣" scheme="https://www.iszy.cc/tags/%E5%8A%9B%E6%89%A3/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript LeetCode 2.两数相加</title>
    <link href="https://www.iszy.cc/posts/g/"/>
    <id>https://www.iszy.cc/posts/g/</id>
    <published>2022-03-20T15:36:23.000Z</published>
    <updated>2022-03-20T15:36:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvYWRkLXR3by1udW1iZXJz">两数相加 - 力扣<i class="fa fa-external-link-alt"></i></span></p></blockquote><p><strong>难度中等</strong></p><span id="more"></span><h2 id="题目">题目</h2><p>给你两个<strong>非空</strong>的链表，表示两个非负的整数。它们每位数字都是按照<strong>逆序</strong>的方式存储的，并且每个节点只能存储<strong>一位</strong>数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0  开头。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [2,4,3], l2 = [5,6,4]</span><br><span class="line">输出：[7,0,8]</span><br><span class="line">解释：342 + 465 = 807.</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [0], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</span><br><span class="line">输出：[8,9,9,9,0,0,0,1]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li>每个链表中的节点数在范围 <code>[1, 100]</code> 内</li><li><code>0 &lt;= Node.val &lt;= 9</code></li><li>题目数据保证列表表示的数字不含前导零</li></ul><h2 id="解答">解答</h2><p>总的来说就是模拟一个相加的过程，满 10 进位。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">l1</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">l2</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">ListNode</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> addTwoNumbers = <span class="keyword">function</span> (<span class="params">l1, l2</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> head = <span class="literal">null</span>,</span><br><span class="line">    tail = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">let</span> add = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">while</span> (l1 || l2) &#123;</span><br><span class="line">    <span class="keyword">const</span> sum = (l1 ? l1.<span class="property">val</span> : <span class="number">0</span>) + (l2 ? l2.<span class="property">val</span> : <span class="number">0</span>) + (add ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (!head) &#123;</span><br><span class="line">      head = tail = <span class="keyword">new</span> <span class="title class_">ListNode</span>(sum % <span class="number">10</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      tail.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(sum % <span class="number">10</span>);</span><br><span class="line">      tail = tail.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum &gt; <span class="number">9</span>) &#123;</span><br><span class="line">      add = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      add = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (l1) &#123;</span><br><span class="line">      l1 = l1.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (l2) &#123;</span><br><span class="line">      l2 = l2.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (add) &#123;</span><br><span class="line">    tail.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> head;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvYWRkLXR3by1udW1iZXJz&quot;&gt;两数相加 - 力扣&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;难度中等&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="LeetCode" scheme="https://www.iszy.cc/tags/LeetCode/"/>
    
    <category term="力扣" scheme="https://www.iszy.cc/tags/%E5%8A%9B%E6%89%A3/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript LeetCode 1.两数之和</title>
    <link href="https://www.iszy.cc/posts/f/"/>
    <id>https://www.iszy.cc/posts/f/</id>
    <published>2022-03-20T14:55:23.000Z</published>
    <updated>2022-03-20T14:55:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvdHdvLXN1bS8=">两数之和 - 力扣<i class="fa fa-external-link-alt"></i></span></p></blockquote><p><strong>难度简单</strong></p><span id="more"></span><h2 id="题目">题目</h2><p>给定一个整数数组<code>nums</code>和一个整数目标值<code>target</code>，请你在该数组中找出<strong>和为目标值</strong><code>target</code>的那<strong>两个</strong>整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p><p>你可以按任意顺序返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,7,11,15], target = 9</span><br><span class="line">输出：[0,1]</span><br><span class="line">解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,2,4], target = 6</span><br><span class="line">输出：[1,2]</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,3], target = 6</span><br><span class="line">输出：[0,1]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>≤</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">2 \leq nums.length \leq 10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">2</span><span class="mrel">≤</span><span class="mord mathit">n</span><span class="mord mathit">u</span><span class="mord mathit">m</span><span class="mord mathit">s</span><span class="mord mathrm">.</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">t</span><span class="mord mathit">h</span><span class="mrel">≤</span><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">4</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>≤</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">-10^9 \leq nums[i] \leq 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord">−</span><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">9</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">≤</span><span class="mord mathit">n</span><span class="mord mathit">u</span><span class="mord mathit">m</span><span class="mord mathit">s</span><span class="mopen">[</span><span class="mord mathit">i</span><span class="mclose">]</span><span class="mrel">≤</span><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">9</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>≤</mo><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">-10^9 \leq target \leq 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord">−</span><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">9</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">≤</span><span class="mord mathit">t</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">e</span><span class="mord mathit">t</span><span class="mrel">≤</span><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">9</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></li><li><strong>只会存在一个有效答案</strong></li></ul><p>**进阶：**你可以想出一个时间复杂度小于<code>O(n2)</code>的算法吗？</p><h2 id="解答">解答</h2><p>通过一个对象存储<strong>值</strong>对应的<strong>索引值</strong>，当<strong>与当前值的和</strong>等于<strong>目标值</strong>的数字可以在对象中找到，即返回该数字索引和当前索引。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> twoSum = <span class="keyword">function</span> (<span class="params">nums, target</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> map = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> nums) &#123;</span><br><span class="line">    <span class="keyword">if</span> (map[target - nums[i]]) &#123;</span><br><span class="line">      <span class="keyword">return</span> [i, map[target - nums[i]]];</span><br><span class="line">    &#125;</span><br><span class="line">    map[nums[i]] = i;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvdHdvLXN1bS8=&quot;&gt;两数之和 - 力扣&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;难度简单&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="LeetCode" scheme="https://www.iszy.cc/tags/LeetCode/"/>
    
    <category term="力扣" scheme="https://www.iszy.cc/tags/%E5%8A%9B%E6%89%A3/"/>
    
  </entry>
  
</feed>
