<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随遇而安</title>
  
  <subtitle>在自由的空气中漂浮</subtitle>
  <link href="https://www.iszy.cc/atom.xml" rel="self"/>
  
  <link href="https://www.iszy.cc/"/>
  <updated>2022-02-03T13:20:48.000Z</updated>
  <id>https://www.iszy.cc/</id>
  
  <author>
    <name>Dirge</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BT下载中的Peer状态有什么含义</title>
    <link href="https://www.iszy.cc/posts/d/"/>
    <id>https://www.iszy.cc/posts/d/</id>
    <published>2022-02-03T10:29:02.000Z</published>
    <updated>2022-02-03T13:20:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录下 BT 下载中节点(Peer)状态码含义。</p><span id="more"></span><table><thead><tr><th>状态码</th><th>说明</th></tr></thead><tbody><tr><td>O</td><td>远程节点状态良好，未阻塞本客户端</td></tr><tr><td>D</td><td>正在从远程节点下载</td></tr><tr><td>d</td><td>如果远程节点允许，本客户端将会从该节点下载</td></tr><tr><td>U</td><td>正在上传到远程节点</td></tr><tr><td>u</td><td>如果远程节点请求，本客户端将会向该节点上传</td></tr><tr><td>K</td><td>远程节点未阻塞，但本客户端对远程节点提供的数据不感兴趣</td></tr><tr><td>?</td><td>本客户端未阻塞远程节点，但远程节点对本客户端提供的数据不感兴趣</td></tr><tr><td>E</td><td>加密连接</td></tr><tr><td>H</td><td>远程节点是通过 DHT 网络发现的</td></tr><tr><td>X</td><td>远程节点是通过节点间交换发现的(PEX)</td></tr><tr><td>I</td><td>该节点是一个传入节点</td></tr><tr><td>T</td><td>正在通过 uTP 连接该节点</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录下 BT 下载中节点(Peer)状态码含义。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>JS实现UTF-8下的Base64编解码</title>
    <link href="https://www.iszy.cc/posts/c/"/>
    <id>https://www.iszy.cc/posts/c/</id>
    <published>2022-02-02T16:26:51.000Z</published>
    <updated>2022-02-03T13:20:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录下 JavaScript 实现 UTF-8 下的 Base64 编解码。</p><span id="more"></span><h2 id="小工具">小工具</h2><p>这边做了个 Base64 编解码的小工具，供大家使用。</p><p><span class="exturl" data-url="aHR0cHM6Ly90b29scy5pc3p5Lnh5ei9jcnlwdG8vYmFzZTY0">Base64 编解码<i class="fa fa-external-link-alt"></i></span></p><h2 id="Base64-编解码">Base64 编解码</h2><blockquote><p>来源：<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0">Base64-维基百科<i class="fa fa-external-link-alt"></i></span> &gt; <strong>Base64</strong>（基底 64）是一种基于 64 个可打印字符来表示二进制数据的表示方法。由于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mn>2</mn></mrow></msub><mn>6</mn><mn>4</mn><mo>=</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">log_{2}64 = 6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">o</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathrm">6</span><span class="mord mathrm">4</span><span class="mrel">=</span><span class="mord mathrm">6</span></span></span></span>，所以每 6 个比特为一个单元，对应某个可打印字符。3 个字节相当于 24 个比特，对应于 4 个 Base64 单元，即 3 个字节可由 4 个可打印字符来表示。在 Base64 中的可打印字符包括字母 A-Z、a-z、数字 0-9，这样共有 62 个字符，此外两个可打印符号在不同的系统中而不同。一些如 uuencode 的其他编码方法，和之后 BinHex 的版本使用不同的 64 字符集来代表 6 个二进制数字，但是不被称为 Base64。<br>Base64 常用于在通常处理文本数据的场合，表示、传输、存储一些二进制数据，包括 MIME 的电子邮件及 XML 的一些复杂数据。</p></blockquote><p>其实在 JavaScript 中，原生就有两个函数被分别用来处理解码和编码 base64 字符串：</p><ul><li><code>btoa()</code>: 从二进制数据的“字符串”创建一个 Base64 编码的 ASCII 字符串（“btoa”其实是“二进制转 ASCII”的意思）。</li><li><code>atob()</code>: 解码 Base64 编码的字符串（“atob”其实是“ASCII 到二进制”的意思）。</li></ul><p>其中的使用的算法在<span class="exturl" data-url="aHR0cHM6Ly9kYXRhdHJhY2tlci5pZXRmLm9yZy9kb2MvaHRtbC9yZmM0NjQ4I3NlY3Rpb24tNA==">RFC 4648, 第四段<i class="fa fa-external-link-alt"></i></span>中进行了描述。</p><p><img data-src="https://img.iszy.xyz/1643809821264.png" alt="The Base 64 Alphabet"></p><p>可以通过<code>window.atob(string)</code>、<code>window.btoa(base64string)</code>的方式调用，非常方便。</p><h2 id="UTF-8-字符串编解码">UTF-8 字符串编解码</h2><p>如上面的描述所言，<code>btoa</code>和<code>atob</code>都只支持 ASCII 字符，并不支持 Unicode 字符。在大多数浏览器中对 Unicode 字符串调用将会报<code>Character Out Of Range</code>错误，因为字符超出了 ASCII 的范围。</p><h3 id="解决方法">解决方法</h3><p>我们可以将字符串转义过后再进行编码，解码时将解码结果重新转义为 Unicode 字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">utf8_to_b64</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> btoa(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(str)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b64_to_utf8</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(atob(str)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用例:</span></span><br><span class="line">utf8_to_b64(<span class="string">&quot;测试&quot;</span>); <span class="comment">// &quot;5rWL6K+V&quot;</span></span><br><span class="line">b64_to_utf8(<span class="string">&quot;5rWL6K+V&quot;</span>); <span class="comment">// &quot;测试&quot;</span></span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>这中间看起来比较神奇，发生了个什么事呢？</p><p>主要呢就是利用了<code>encodeURIComponent</code>、<code>decodeURIComponent</code>会把接受到的字符串参数当作 UTF-8 字符串来进行处理。</p><h4 id="utf8-to-b64">utf8_to_b64</h4><p>先看<code>utf8_to_b64</code>方法。</p><p>这里由于<code>encodeURIComponent</code>方法接受的是 UTF-8 字符串，可以先用<code>encodeURIComponent</code>方法将 UTF-8 字符串转成了形如<code>%XX%XX</code>的十六进制符号。然后使用<code>unescape</code>方法将十六进制翻译为了 ASCII 中对应的内容，这样就变成了<code>btoa</code>方法能够接受的 ASCII 字符串。最后直接使用<code>btoa</code>方法编码为 Base64 字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">encodeURIComponent</span>(<span class="string">&quot;测试&quot;</span>); <span class="comment">// &quot;%E6%B5%8B%E8%AF%95&quot;</span></span><br><span class="line"><span class="built_in">unescape</span>(<span class="string">&quot;%E6%B5%8B%E8%AF%95&quot;</span>); <span class="comment">// &quot;æµ\x8Bè¯\x95&quot;</span></span><br><span class="line">btoa(<span class="string">&quot;æµ\x8Bè¯\x95&quot;</span>); <span class="comment">// &quot;5rWL6K+V&quot;</span></span><br></pre></td></tr></table></figure><p>总的来说就是一个将 UTF-8 字符串转为 ASCII 字符串再编码的一个过程。</p><h4 id="b64-to-utf8">b64_to_utf8</h4><p>再看<code>b64_to_utf8</code>方法。</p><p>其实就是反过来，先将 Base64 字符串通过<code>atob</code>方法解码为 ASCII 字符串，然后通过<code>escape</code>方法将 ASCII 字符串转为十六进制符号，最后将十六进制符号通过<code>decodeURIComponent</code>方法解析为 UTF-8。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">atob(<span class="string">&quot;5rWL6K+V&quot;</span>); <span class="comment">// &quot;æµ\x8Bè¯\x95&quot;</span></span><br><span class="line"><span class="built_in">escape</span>(<span class="string">&quot;æµ\x8Bè¯\x95&quot;</span>); <span class="comment">// &quot;%E6%B5%8B%E8%AF%95&quot;</span></span><br><span class="line"><span class="built_in">decodeURIComponent</span>(<span class="string">&quot;%E6%B5%8B%E8%AF%95&quot;</span>); <span class="comment">// &quot;测试&quot;</span></span><br></pre></td></tr></table></figure><h3 id="弃用unescape和escape方法">弃用<code>unescape</code>和<code>escape</code>方法</h3><h4 id="原由">原由</h4><blockquote><p>该特性已经从 Web 标准中删除，虽然一些浏览器目前仍然支持它，但也许会在未来的某个时间停止支持，请尽量不要使用该特性。</p></blockquote><p>可以看到<code>unescape</code>和<code>escape</code>方法已经被标记为废弃，并推荐使用<code>decodeURI</code>或<code>decodeURIComponent</code>替代<code>unescape</code>，推荐使用 <code>encodeURI</code> 或 <code>encodeURIComponent</code> 替代<code>escape</code>。</p><p>根据<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JTk5JUJFJUU1JTg4JTg2JUU1JThGJUI3JUU3JUJDJTk2JUU3JUEwJTgx">百分号编码-维基百科<i class="fa fa-external-link-alt"></i></span>中的内容可以知道，<code>escape</code> 在处理 <code>0xff</code> 之外字符的时候，是直接使用字符的 <code>unicode</code> 在前面加上一个 「%u」，而 <code>encodeURI</code> 则是先进行 UTF-8，再在 UTF-8 的每个字节码前加上一个 「%」</p><blockquote><p>2005 年 1 月发布的 RFC 3986，建议所有新的 URI 必须对未保留字符不加以百分号编码；其它字符建议先转换为 UTF-8 字节序列, 然后对其字节值使用百分号编码。此前的 URI 不受此标准的影响。<br>有一些不符合标准的把 Unicode 字符在 URI 中表示为: <code>%uxxxx</code>, 其中 xxxx 是用 4 个十六进制数字表示的 Unicode 的码位值。任何 RFC 都没有这样的字符表示方法，并且已经被 W3C 拒绝 （页面存档备份，存于互联网档案馆）。第三版的 ECMA-262 仍然包含函数<code>escape(string)</code>使用这种语法, 但也有函数<code>encodeURI(uri)</code>转换字符到 UTF-8 字节序列并用百分号编码每个字节。</p></blockquote><p>所以<code>escape</code>是对百分号编码的非标准实现，所以被废弃实属正常。</p><h4 id="解决方法-2">解决方法</h4><p>虽说<code>escape</code>是对百分号编码的非标准实现，但是在上面的方法中我们实际上利用了<code>escape</code>的这种特性，这边提供了不使用<code>unescape</code>和<code>escape</code>方法后的实现。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">utf8_to_b64</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> btoa(</span><br><span class="line">    <span class="built_in">encodeURIComponent</span>(str).replace(<span class="regexp">/%([0-9A-F]&#123;2&#125;)/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">match, p1</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode(<span class="string">&quot;0x&quot;</span> + p1);</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b64_to_utf8</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(</span><br><span class="line">    atob(str)</span><br><span class="line">      .split(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      .map(<span class="function"><span class="keyword">function</span> (<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;%&quot;</span> + (<span class="string">&quot;00&quot;</span> + c.charCodeAt(<span class="number">0</span>).toString(<span class="number">16</span>)).slice(-<span class="number">2</span>);</span><br><span class="line">      &#125;)</span><br><span class="line">      .join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用例:</span></span><br><span class="line">utf8_to_b64(<span class="string">&quot;测试&quot;</span>); <span class="comment">// &quot;5rWL6K+V&quot;</span></span><br><span class="line">b64_to_utf8(<span class="string">&quot;5rWL6K+V&quot;</span>); <span class="comment">// &quot;测试&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Node-js-下的-Base64-编解码">Node.js 下的 Base64 编解码</h2><p>在 Node.js 中使用上面的方法，你可能会发现，<code>btoa</code>和<code>atob</code>方法，由于只支持 ASCII 方法也已经被标记为废弃了，那么在 Node.js 中用什么方法呢？</p><p>Node.js 中提供了一个更加简便的方法，那就是利用<code>Buffer</code>，除了支持字符串，也支持其他数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">utf8_to_b64</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> Buffer.from(str).toString(<span class="string">&quot;base64&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b64_to_utf8</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> Buffer.from(str, <span class="string">&quot;base64&quot;</span>).toString(<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录下 JavaScript 实现 UTF-8 下的 Base64 编解码。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Node.js" scheme="https://www.iszy.cc/tags/Node-js/"/>
    
    <category term="Base64" scheme="https://www.iszy.cc/tags/Base64/"/>
    
    <category term="UTF-8" scheme="https://www.iszy.cc/tags/UTF-8/"/>
    
  </entry>
  
  <entry>
    <title>解决使用@vue/cli-plugin-babel导致动态import代码拆分失败问题</title>
    <link href="https://www.iszy.cc/posts/b/"/>
    <id>https://www.iszy.cc/posts/b/</id>
    <published>2022-01-18T06:47:53.000Z</published>
    <updated>2022-01-18T06:47:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录下使用 vue-cli 的 babel 插件导致动态 import 代码拆分失败的问题。</p><span id="more"></span><h2 id="前情提要">前情提要</h2><p>先前在项目中使用了<code>@vue/cli-plugin-babel</code>插件，打包时发现项目被打包成了一个非常大的 js 文件，动态 import 代码拆分失败了。</p><p>经过测试，基本确定就是由于加上了这个 babel 插件导致的，估计是 babel 的配置导致的问题。</p><p>经过查找插件和 babel 的官方文档，可以看到，<code>@vue/cli-plugin-babel</code>默认使用<code>Babel 7</code> + <code>babel-loader</code> + <code>@vue/babel-preset-app</code>，而<code>@vue/babel-preset-app</code>使用了<code>@babel/preset-env</code>，并支持了以下几个 stage 3 特性。</p><ul><li>Dynamic Import Syntax</li><li>Proposal Class Properties</li><li>Proposal Decorators (legacy)</li></ul><p>问题就出在这个<code>@babel/preset-env</code>，其中包含了一个插件叫<code>@babel/plugin-proposal-dynamic-import</code>，这个插件的作用就是将动态 import 转为 Promise 语法，这就导致 webpack 没法再对转换后的代码进行动态拆分。这个<code>@babel/preset-env</code>也是很多人使用的一个预设，所以估计有这个问题的人不在少数，下面的方法也是可以适用的。</p><p>原代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>(<span class="string">&quot;./moduleA&quot;</span>).then(<span class="comment">/* do stuff */</span>);</span><br></pre></td></tr></table></figure><p>转换后的代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.resolve()</span><br><span class="line">  .then(<span class="function">() =&gt;</span> <span class="built_in">require</span>(<span class="string">&quot;./moduleA&quot;</span>))</span><br><span class="line">  .then(<span class="comment">/* do stuff */</span>);</span><br></pre></td></tr></table></figure><h2 id="解决">解决</h2><p>既然问题已经清晰了，解决方法就比较明了了，就是要禁用<code>@babel/plugin-proposal-dynamic-import</code>插件。</p><h3 id="选项一（推荐）">选项一（推荐）</h3><p>比较直截了当的方法就是将这个插件直接排除掉。可以通过修改 babel 配置，通过 exclude 选项，将插件直接排除。</p><p>使用 <code>@vue/cli-plugin-babel</code> 的情况</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;presets&quot;</span>: [</span><br><span class="line">    [<span class="string">&quot;@vue/cli-plugin-babel/preset&quot;</span>, &#123; <span class="attr">&quot;exclude&quot;</span>: [<span class="string">&quot;proposal-dynamic-import&quot;</span>] &#125;]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接使用 <code>@babel/preset-env</code> 的情况</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;presets&quot;</span>: [[<span class="string">&quot;@babel/preset-env&quot;</span>, &#123; <span class="attr">&quot;exclude&quot;</span>: [<span class="string">&quot;proposal-dynamic-import&quot;</span>] &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选项二">选项二</h3><p>这个其实是<code>@babel/preset-env</code>的配置项，我没有测试过使用<code>@vue/cli-plugin-babel</code>时能否正确将参数传递到后面。</p><p>将 modules 参数设置为 false，则 Babel 将会保留 ES 模组，自然也就不会转换动态 import 语句了。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;presets&quot;</span>: [[<span class="string">&quot;@babel/preset-env&quot;</span>, &#123; <span class="attr">&quot;modules&quot;</span>: <span class="literal">false</span> &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文记录下使用 vue-cli 的 babel 插件导致动态 import 代码拆分失败的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Babel" scheme="https://www.iszy.cc/tags/Babel/"/>
    
    <category term="Vue-cli" scheme="https://www.iszy.cc/tags/Vue-cli/"/>
    
    <category term="vue" scheme="https://www.iszy.cc/tags/vue/"/>
    
    <category term="Webpack" scheme="https://www.iszy.cc/tags/Webpack/"/>
    
    <category term="分块" scheme="https://www.iszy.cc/tags/%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>MacOS 解决新版 Chrome 中 NET::ERR_CERT_INVALID不能继续的问题</title>
    <link href="https://www.iszy.cc/posts/0/"/>
    <id>https://www.iszy.cc/posts/0/</id>
    <published>2021-12-20T06:16:40.000Z</published>
    <updated>2021-12-20T06:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 Chrome 中，访问不受信任的 HTTPS 网站时，一般会提示如下的提示。这可能是由于证书过期、不匹配或者可能用的是自签名证书等情况。通常点击高级按钮会有一个继续按钮，浏览器就会关闭当前页面警告并继续访问。但在高版本的 Chrome for mac 中，是没有这个继续按钮的。</p><span id="more"></span><h2 id="图示">图示</h2><p>如图所示：</p><p><img data-src="https://img.iszy.xyz/1639981594486.png" alt=""></p><h2 id="解决">解决</h2><p>其实，Chrome 中只是隐藏了这个按钮，还是可以通过一个简单的办法来触发继续的功能的。</p><p>那就是<strong>点击页面的空白处，直接在键盘上输入<code>thisisunsafe</code></strong></p><p>注意不要选中按钮或者页面上的什么内容，输入法要在英文状态，然后直接在页面上敲这串字母就行了。</p><p>接下来你会发现页面可以正常跳转了，地址栏前面会标记不安全，点击会显示<strong>你已选择禁用此站点的安全警告</strong>。关闭警告是站点级别的，不会影响到其他网站。如果想要重新打开警告，可以点击下图中的<strong>启用警告</strong>。</p><p><img data-src="https://img.iszy.xyz/1639982038571.png" alt=""></p><h2 id="吐槽">吐槽</h2><p>这个东西隐藏的是真的很深，可能是开发者留出来的彩蛋，方便开发调试用？网上还有说可以输入<code>badidea</code>，亲测已经没有效果。不知道后续版本会不会移除<code>thisisunsafe</code>，理论上应该不会，毕竟不太可能误触。不然还得去 flags 页面关闭所有的安全警告，反而是更不安全了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 Chrome 中，访问不受信任的 HTTPS 网站时，一般会提示如下的提示。这可能是由于证书过期、不匹配或者可能用的是自签名证书等情况。通常点击高级按钮会有一个继续按钮，浏览器就会关闭当前页面警告并继续访问。但在高版本的 Chrome for mac 中，是没有这个继续按钮的。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="MacOS" scheme="https://www.iszy.cc/tags/MacOS/"/>
    
    <category term="Chrome" scheme="https://www.iszy.cc/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>GeoTools坐标转换(scala)</title>
    <link href="https://www.iszy.cc/posts/16/"/>
    <id>https://www.iszy.cc/posts/16/</id>
    <published>2021-11-08T12:14:01.000Z</published>
    <updated>2021-11-09T00:44:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在使用 GeoTools 做坐标转换的时候，发现转出来的坐标与预期不符。经过查询 GeoTools 文档，发现需要通过设置 Axis Order 来指定经纬度哪个在前哪个在后，在此记录一下。</p><span id="more"></span><blockquote><p>参考: <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdlb3Rvb2xzLm9yZy9sYXRlc3QvdXNlcmd1aWRlL2xpYnJhcnkvcmVmZXJlbmNpbmcvb3JkZXIuaHRtbA==">Axis Order — GeoTools 27-SNAPSHOT User Guide<i class="fa fa-external-link-alt"></i></span></p></blockquote><h2 id="问题">问题</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.geotools.geometry.jts.<span class="type">JTSFactoryFinder</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.geometry.jts.<span class="type">JTS</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.referencing.<span class="type">CRS</span></span><br><span class="line"><span class="keyword">import</span> org.locationtech.jts.geom.<span class="type">Coordinate</span></span><br><span class="line"><span class="keyword">import</span> org.locationtech.jts.geom.<span class="type">GeometryFactory</span></span><br><span class="line"><span class="keyword">import</span> org.locationtech.jts.geom.<span class="type">Point</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建个点用于转换</span></span><br><span class="line"><span class="keyword">val</span> geometryFactory: <span class="type">GeometryFactory</span> = <span class="type">JTSFactoryFinder</span>.getGeometryFactory</span><br><span class="line"><span class="keyword">val</span> coord: <span class="type">Coordinate</span> = <span class="keyword">new</span> <span class="type">Coordinate</span>(<span class="number">121</span>, <span class="number">32</span>)</span><br><span class="line"><span class="keyword">val</span> point: <span class="type">Point</span> = geometryFactory.createPoint(coord)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> mathTransform = <span class="type">CRS</span>.findMathTransform(<span class="type">CRS</span>.decode(<span class="string">&quot;EPSG:4490&quot;</span>), <span class="type">CRS</span>.decode(<span class="string">&quot;EPSG:4528&quot;</span>))</span><br><span class="line"><span class="keyword">val</span> newPoint: <span class="type">Point</span> = <span class="type">JTS</span>.transform(point, mathTransform).asInstanceOf[<span class="type">Point</span>]</span><br></pre></td></tr></table></figure><p>这段代码乍一看没啥问题，就是转出来的 Point 坐标是错误的。</p><p>经过查询 GeoTools 文档，可以知道，由于历史原因，GeoTools 无法自动判断何时返回与 EPSG 库一致的 CRS，以及何时返回带有轴序配置的 CRS。所以 GeoTools 决定无论轴序是什么样的，都认为是和 EPSG 一致的 CRS，也就是 x 为纬度，y 为经度。如果需要调整数据的轴序，可以由用户自行规定 CRS。</p><h2 id="解决方案">解决方案</h2><p>按照我们一般的习惯，想要经度在前，纬度在后。</p><p>为了帮助旧应用程序实现过渡，可以通过设置系统属性<code>org.geotools.referencing.forceXY</code>为<code>true</code>，此时，会将提示值<code>FORCE_LONGITUDE_FIRST_AXIS_ORDER</code>设置为<code>true</code>，将会强制认为轴序为经度在前，纬度在后。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">System</span>.setProperty(<span class="string">&quot;org.geotools.referencing.forceXY&quot;</span>, <span class="string">&quot;true&quot;</span>)</span><br></pre></td></tr></table></figure><p>也可以在代码里手动指定，代码如下。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.supermap.bdt.base.algorithm.<span class="type">CRSTransform</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.factory.<span class="type">Hints</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.geometry.jts.<span class="type">JTSFactoryFinder</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.geometry.jts.<span class="type">JTS</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.referencing.<span class="type">CRS</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.referencing.<span class="type">ReferencingFactoryFinder</span></span><br><span class="line"><span class="keyword">import</span> org.locationtech.jts.geom.<span class="type">Coordinate</span></span><br><span class="line"><span class="keyword">import</span> org.locationtech.jts.geom.<span class="type">GeometryFactory</span></span><br><span class="line"><span class="keyword">import</span> org.locationtech.jts.geom.<span class="type">Point</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建个点用于转换</span></span><br><span class="line"><span class="keyword">val</span> geometryFactory: <span class="type">GeometryFactory</span> = <span class="type">JTSFactoryFinder</span>.getGeometryFactory</span><br><span class="line"><span class="keyword">val</span> coord: <span class="type">Coordinate</span> = <span class="keyword">new</span> <span class="type">Coordinate</span>(<span class="number">121</span>, <span class="number">32</span>)</span><br><span class="line"><span class="keyword">val</span> point: <span class="type">Point</span> = geometryFactory.createPoint(coord)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> hints = <span class="keyword">new</span> <span class="type">Hints</span>(<span class="type">Hints</span>.<span class="type">FORCE_LONGITUDE_FIRST_AXIS_ORDER</span>, <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">val</span> factory = <span class="type">ReferencingFactoryFinder</span>.getCRSAuthorityFactory(<span class="string">&quot;EPSG&quot;</span>, hints)</span><br><span class="line"><span class="keyword">val</span> mathTransform = <span class="type">CRS</span>.findMathTransform(factory.createCoordinateReferenceSystem(<span class="string">&quot;EPSG:4490&quot;</span>), factory.createCoordinateReferenceSystem(<span class="string">&quot;EPSG:4528&quot;</span>))</span><br><span class="line"><span class="keyword">val</span> newPoint: <span class="type">Point</span> = <span class="type">JTS</span>.transform(point, mathTransform).asInstanceOf[<span class="type">Point</span>]</span><br></pre></td></tr></table></figure><p>通过手动指定了轴序，转出来的结果就是正确的了。</p><h2 id="SuperMap-iObject-for-Spark">SuperMap iObject for Spark</h2><p>我是在 Spark 环境下使用坐标转换，超图的 SuperMap iObject for Spark 中也引了一下这个方法。这里改成超图 iObject 里的方法。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.supermap.bdt.base.algorithm.<span class="type">CRSTransform</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.factory.<span class="type">Hints</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.geometry.jts.<span class="type">JTSFactoryFinder</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.referencing.<span class="type">CRS</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.referencing.<span class="type">ReferencingFactoryFinder</span></span><br><span class="line"><span class="keyword">import</span> org.locationtech.jts.geom.<span class="type">Coordinate</span></span><br><span class="line"><span class="keyword">import</span> org.locationtech.jts.geom.<span class="type">GeometryFactory</span></span><br><span class="line"><span class="keyword">import</span> org.locationtech.jts.geom.<span class="type">Point</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建个点用于转换</span></span><br><span class="line"><span class="keyword">val</span> geometryFactory: <span class="type">GeometryFactory</span> = <span class="type">JTSFactoryFinder</span>.getGeometryFactory</span><br><span class="line"><span class="keyword">val</span> coord: <span class="type">Coordinate</span> = <span class="keyword">new</span> <span class="type">Coordinate</span>(<span class="number">121</span>, <span class="number">32</span>)</span><br><span class="line"><span class="keyword">val</span> point: <span class="type">Point</span> = geometryFactory.createPoint(coord)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> hints = <span class="keyword">new</span> <span class="type">Hints</span>(<span class="type">Hints</span>.<span class="type">FORCE_LONGITUDE_FIRST_AXIS_ORDER</span>, <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">val</span> factory = <span class="type">ReferencingFactoryFinder</span>.getCRSAuthorityFactory(<span class="string">&quot;EPSG&quot;</span>, hints)</span><br><span class="line"><span class="keyword">val</span> mathTransform = <span class="type">CRSTransform</span>.findMathTransform(factory.createCoordinateReferenceSystem(<span class="string">&quot;EPSG:4490&quot;</span>), factory.createCoordinateReferenceSystem(<span class="string">&quot;EPSG:4528&quot;</span>))</span><br><span class="line"><span class="keyword">val</span> newPoint: <span class="type">Point</span> = <span class="type">CRSTransform</span>.transform(point, mathTransform).asInstanceOf[<span class="type">Point</span>]</span><br></pre></td></tr></table></figure><p>直接转换 FeatureRDD，这边不写 FeatureRDD 怎么构建了。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.supermap.bdt.base.algorithm.<span class="type">CRSTransform</span></span><br><span class="line"><span class="keyword">import</span> com.supermap.bdt.<span class="type">FeatureRDD</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.factory.<span class="type">Hints</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.geometry.jts.<span class="type">JTSFactoryFinder</span></span><br><span class="line"><span class="keyword">import</span> org.geotools.referencing.<span class="type">ReferencingFactoryFinder</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此处仅为示例</span></span><br><span class="line"><span class="keyword">val</span> featureRDD: <span class="type">FeatureRDD</span> = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> hints = <span class="keyword">new</span> <span class="type">Hints</span>(<span class="type">Hints</span>.<span class="type">FORCE_LONGITUDE_FIRST_AXIS_ORDER</span>, <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">val</span> factory = <span class="type">ReferencingFactoryFinder</span>.getCRSAuthorityFactory(<span class="string">&quot;EPSG&quot;</span>, hints)</span><br><span class="line"><span class="keyword">val</span> newFeatureRDD: <span class="type">FeatureRDD</span> = <span class="type">CRSTransform</span>.transform(featureRDD, factory.createCoordinateReferenceSystem(<span class="string">&quot;EPSG:4528&quot;</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天在使用 GeoTools 做坐标转换的时候，发现转出来的坐标与预期不符。经过查询 GeoTools 文档，发现需要通过设置 Axis Order 来指定经纬度哪个在前哪个在后，在此记录一下。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="GeoTools" scheme="https://www.iszy.cc/tags/GeoTools/"/>
    
    <category term="Axis Order" scheme="https://www.iszy.cc/tags/Axis-Order/"/>
    
    <category term="SuperMap iObject for Spark" scheme="https://www.iszy.cc/tags/SuperMap-iObject-for-Spark/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 代码块可声明编程语言类型</title>
    <link href="https://www.iszy.cc/posts/15/"/>
    <id>https://www.iszy.cc/posts/15/</id>
    <published>2021-10-05T16:35:38.000Z</published>
    <updated>2021-10-05T16:35:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown 代码块可声明编程语言类型，实现代码高亮。有的书写规范要求必须声明，此处记录一下 Markdown 支持的所有编程语言。</p><span id="more"></span><h2 id="示例">示例</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```json</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">  &quot;test&quot;: 1</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><h2 id="清单">清单</h2><p>Markdown 编程语言声明可直接使用后缀名，比如 js 即可表示 JavaScript，也可使用完整的声明，清单如下：</p><blockquote><p>数据来源: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dpdGh1Yi9saW5ndWlzdC9ibG9iL21hc3Rlci9saWIvbGluZ3Vpc3QvbGFuZ3VhZ2VzLnltbA==">linguist 项目<i class="fa fa-external-link-alt"></i></span></p></blockquote><table><thead><tr><th>语言名称</th><th>Markdown 语言声明</th><th>常见文件名</th></tr></thead><tbody><tr><td>1C Enterprise</td><td>1c-enterprise</td><td>*.bsl</td></tr><tr><td>4D</td><td>4d</td><td>*.4dm</td></tr><tr><td>ABAP</td><td>abap</td><td>*.abap</td></tr><tr><td>ABNF</td><td>abnf</td><td>*.abnf</td></tr><tr><td>AGS Script</td><td>ags-script, ags</td><td>*.asc</td></tr><tr><td>AMPL</td><td>ampl</td><td>*.ampl</td></tr><tr><td>ANTLR</td><td>antlr</td><td>*.g4</td></tr><tr><td>API Blueprint</td><td>api-blueprint</td><td>*.apib</td></tr><tr><td>APL</td><td>apl</td><td>*.apl</td></tr><tr><td>ASN.1</td><td>asn.1</td><td>*.asn</td></tr><tr><td>ASP</td><td>asp, aspx, aspx-vb</td><td>*.asp</td></tr><tr><td>ATS</td><td>ats, ats2</td><td>*.dats</td></tr><tr><td>ActionScript</td><td>actionscript, actionscript3, as3</td><td>*.as</td></tr><tr><td>Ada</td><td>ada, ada95, ada2005</td><td>*.adb</td></tr><tr><td>Adobe Font Metrics</td><td>adobe-font-metrics, acfm, amfm</td><td>*.afm</td></tr><tr><td>Agda</td><td>agda</td><td>*.agda</td></tr><tr><td>Alloy</td><td>alloy</td><td>*.als</td></tr><tr><td>Alpine Abuild</td><td>alpine-abuild, abuild, apkbuild</td><td>APKBUILD</td></tr><tr><td>Altium Designer</td><td>altium-designer, altium</td><td>*.OutJob</td></tr><tr><td>AngelScript</td><td>angelscript</td><td>*.as</td></tr><tr><td>Ant Build System</td><td>ant-build-system</td><td>ant.xml</td></tr><tr><td>ApacheConf</td><td>apacheconf, aconf, apache</td><td>*.apacheconf, .htaccess</td></tr><tr><td>Apex</td><td>apex</td><td>*.cls</td></tr><tr><td>Apollo Guidance Computer</td><td>apollo-guidance-computer</td><td>*.agc</td></tr><tr><td>AppleScript</td><td>applescript, osascript</td><td>*.applescript</td></tr><tr><td>Arc</td><td>arc</td><td>*.arc</td></tr><tr><td>AsciiDoc</td><td>asciidoc</td><td>*.asciidoc</td></tr><tr><td>AspectJ</td><td>aspectj</td><td>*.aj</td></tr><tr><td>Assembly</td><td>assembly, asm, nasm</td><td>*.asm</td></tr><tr><td>Asymptote</td><td>asymptote</td><td>*.asy</td></tr><tr><td>Augeas</td><td>augeas</td><td>*.aug</td></tr><tr><td>AutoHotkey</td><td>autohotkey, ahk</td><td>*.ahk</td></tr><tr><td>AutoIt</td><td>autoit, au3, AutoIt3, AutoItScript</td><td>*.au3</td></tr><tr><td>Awk</td><td>awk</td><td>*.awk</td></tr><tr><td>Ballerina</td><td>ballerina</td><td>*.bal</td></tr><tr><td>Batchfile</td><td>batchfile, bat, batch, dosbatch, winbatch</td><td>*.bat</td></tr><tr><td>Befunge</td><td>befunge</td><td>*.befunge</td></tr><tr><td>BibTeX</td><td>bibtex</td><td>*.bib</td></tr><tr><td>Bison</td><td>bison</td><td>*.bison</td></tr><tr><td>BitBake</td><td>bitbake</td><td>*.bb</td></tr><tr><td>Blade</td><td>blade</td><td>*.blade</td></tr><tr><td>BlitzBasic</td><td>blitzbasic, b3d, blitz3d, blitzplus, bplus</td><td>*.bb</td></tr><tr><td>BlitzMax</td><td>blitzmax, bmax</td><td>*.bmx</td></tr><tr><td>Bluespec</td><td>bluespec</td><td>*.bsv</td></tr><tr><td>Boo</td><td>boo</td><td>*.boo</td></tr><tr><td>Brainfuck</td><td>brainfuck</td><td>*.b</td></tr><tr><td>Brightscript</td><td>brightscript</td><td>*.brs</td></tr><tr><td>C</td><td>c</td><td>*.c</td></tr><tr><td>C#</td><td>c#, csharp</td><td>*.cs</td></tr><tr><td>C++</td><td>c++, cpp</td><td>*.cpp</td></tr><tr><td>C-ObjDump</td><td>c-objdump</td><td>*.c-objdump</td></tr><tr><td>C2hs Haskell</td><td>c2hs-haskell, c2hs</td><td>*.chs</td></tr><tr><td>CLIPS</td><td>clips</td><td>*.clp</td></tr><tr><td>CMake</td><td>cmake</td><td>*.cmake, CMakeLists.txt</td></tr><tr><td>COBOL</td><td>cobol</td><td>*.cob</td></tr><tr><td>COLLADA</td><td>collada</td><td>*.dae</td></tr><tr><td>CSON</td><td>cson</td><td>*.cson</td></tr><tr><td>CSS</td><td>css</td><td>*.css</td></tr><tr><td>CSV</td><td>csv</td><td>*.csv</td></tr><tr><td>CWeb</td><td>cweb</td><td>*.w</td></tr><tr><td>Cabal Config</td><td>cabal-config, Cabal</td><td>*.cabal, cabal.config</td></tr><tr><td>Cap’n Proto</td><td>cap’n-proto</td><td>*.capnp</td></tr><tr><td>CartoCSS</td><td>cartocss, Carto</td><td>*.mss</td></tr><tr><td>Ceylon</td><td>ceylon</td><td>*.ceylon</td></tr><tr><td>Chapel</td><td>chapel, chpl</td><td>*.chpl</td></tr><tr><td>Charity</td><td>charity</td><td>*.ch</td></tr><tr><td>ChucK</td><td>chuck</td><td>*.ck</td></tr><tr><td>Cirru</td><td>cirru</td><td>*.cirru</td></tr><tr><td>Clarion</td><td>clarion</td><td>*.clw</td></tr><tr><td>Clean</td><td>clean</td><td>*.icl</td></tr><tr><td>Click</td><td>click</td><td>*.click</td></tr><tr><td>Clojure</td><td>clojure</td><td>*.clj, riemann.config</td></tr><tr><td>Closure Templates</td><td>closure-templates, soy</td><td>*.soy</td></tr><tr><td>Cloud Firestore Security Rules</td><td>cloud-firestore-security-rules</td><td>firestore.rules</td></tr><tr><td>CoNLL-U</td><td>conll-u, CoNLL, CoNLL-X</td><td>*.conllu</td></tr><tr><td>CodeQL</td><td>codeql, ql</td><td>*.ql</td></tr><tr><td>CoffeeScript</td><td>coffeescript, coffee, coffee-script</td><td>*.coffee, Cakefile</td></tr><tr><td>ColdFusion</td><td>coldfusion, cfm, cfml</td><td>*.cfm</td></tr><tr><td>ColdFusion CFC</td><td>coldfusion-cfc, cfc</td><td>*.cfc</td></tr><tr><td>Common Lisp</td><td>common-lisp, lisp</td><td>*.lisp</td></tr><tr><td>Common Workflow Language</td><td>common-workflow-language, cwl</td><td>*.cwl</td></tr><tr><td>Component Pascal</td><td>component-pascal, delphi, objectpascal</td><td>*.cp</td></tr><tr><td>Cool</td><td>cool</td><td>*.cl</td></tr><tr><td>Coq</td><td>coq</td><td>*.coq</td></tr><tr><td>Cpp-ObjDump</td><td>cpp-objdump, c+±objdump</td><td>*.cppobjdump</td></tr><tr><td>Creole</td><td>creole</td><td>*.creole</td></tr><tr><td>Crystal</td><td>crystal</td><td>*.cr</td></tr><tr><td>Csound</td><td>csound, csound-orc</td><td>*.orc</td></tr><tr><td>Csound Document</td><td>csound-document, csound-csd</td><td>*.csd</td></tr><tr><td>Csound Score</td><td>csound-score, csound-sco</td><td>*.sco</td></tr><tr><td>Cuda</td><td>cuda</td><td>*.cu</td></tr><tr><td>Cycript</td><td>cycript</td><td>*.cy</td></tr><tr><td>Cython</td><td>cython, pyrex</td><td>*.pyx</td></tr><tr><td>D</td><td>d</td><td>*.d</td></tr><tr><td>D-ObjDump</td><td>d-objdump</td><td>*.d-objdump</td></tr><tr><td>DIGITAL Command Language</td><td>digital-command-language, dcl</td><td>*.com</td></tr><tr><td>DM</td><td>dm, byond</td><td>*.dm</td></tr><tr><td>DNS Zone</td><td>dns-zone</td><td>*.zone</td></tr><tr><td>DTrace</td><td>dtrace, dtrace-script</td><td>*.d</td></tr><tr><td>Dafny</td><td>dafny</td><td>*.dfy</td></tr><tr><td>Darcs Patch</td><td>darcs-patch, dpatch</td><td>*.darcspatch</td></tr><tr><td>Dart</td><td>dart</td><td>*.dart</td></tr><tr><td>DataWeave</td><td>dataweave</td><td>*.dwl</td></tr><tr><td>Dhall</td><td>dhall</td><td>*.dhall</td></tr><tr><td>Diff</td><td>diff, udiff</td><td>*.diff</td></tr><tr><td>DirectX 3D File</td><td>directx-3d-file</td><td>*.x</td></tr><tr><td>Dockerfile</td><td>dockerfile</td><td>*.dockerfile, Dockerfile</td></tr><tr><td>Dogescript</td><td>dogescript</td><td>*.djs</td></tr><tr><td>Dylan</td><td>dylan</td><td>*.dylan</td></tr><tr><td>E</td><td>e</td><td>*.E</td></tr><tr><td>EBNF</td><td>ebnf</td><td>*.ebnf</td></tr><tr><td>ECL</td><td>ecl</td><td>*.ecl</td></tr><tr><td>ECLiPSe</td><td>eclipse</td><td>*.ecl</td></tr><tr><td>EJS</td><td>ejs</td><td>*.ejs</td></tr><tr><td>EML</td><td>eml</td><td>*.eml</td></tr><tr><td>EQ</td><td>eq</td><td>*.eq</td></tr><tr><td>Eagle</td><td>eagle</td><td>*.sch</td></tr><tr><td>Easybuild</td><td>easybuild</td><td>*.eb</td></tr><tr><td>Ecere Projects</td><td>ecere-projects</td><td>*.epj</td></tr><tr><td>EditorConfig</td><td>editorconfig, editor-config</td><td>.editorconfig</td></tr><tr><td>Edje Data Collection</td><td>edje-data-collection</td><td>*.edc</td></tr><tr><td>Eiffel</td><td>eiffel</td><td>*.e</td></tr><tr><td>Elixir</td><td>elixir</td><td>*.ex, mix.lock</td></tr><tr><td>Elm</td><td>elm</td><td>*.elm</td></tr><tr><td>Emacs Lisp</td><td>emacs-lisp, elisp, emacs</td><td>*.el, .abbrev_defs</td></tr><tr><td>EmberScript</td><td>emberscript</td><td>*.em</td></tr><tr><td>Erlang</td><td>erlang</td><td>*.erl, Emakefile</td></tr><tr><td>F#</td><td>f#, fsharp</td><td>*.fs</td></tr><tr><td>F*</td><td>f*, fstar</td><td>*.fst</td></tr><tr><td>FIGlet Font</td><td>figlet-font, FIGfont</td><td>*.flf</td></tr><tr><td>FLUX</td><td>flux</td><td>*.fx</td></tr><tr><td>Factor</td><td>factor</td><td>*.factor, .factor-boot-rc</td></tr><tr><td>Fancy</td><td>fancy</td><td>*.fy, Fakefile</td></tr><tr><td>Fantom</td><td>fantom</td><td>*.fan</td></tr><tr><td>Faust</td><td>faust</td><td>*.dsp</td></tr><tr><td>Filebench WML</td><td>filebench-wml</td><td>*.f</td></tr><tr><td>Filterscript</td><td>filterscript</td><td>*.fs</td></tr><tr><td>Formatted</td><td>formatted</td><td>*.for</td></tr><tr><td>Forth</td><td>forth</td><td>*.fth</td></tr><tr><td>Fortran</td><td>fortran</td><td>*.f</td></tr><tr><td>Fortran Free Form</td><td>fortran-free-form</td><td>*.f90</td></tr><tr><td>FreeMarker</td><td>freemarker, ftl</td><td>*.ftl</td></tr><tr><td>Frege</td><td>frege</td><td>*.fr</td></tr><tr><td>Futhark</td><td>futhark</td><td>*.fut</td></tr><tr><td>G-code</td><td>g-code</td><td>*.g</td></tr><tr><td>GAML</td><td>gaml</td><td>*.gaml</td></tr><tr><td>GAMS</td><td>gams</td><td>*.gms</td></tr><tr><td>GAP</td><td>gap</td><td>*.g</td></tr><tr><td>GCC Machine Description</td><td>gcc-machine-description</td><td>*.md</td></tr><tr><td>GDB</td><td>gdb</td><td>*.gdb</td></tr><tr><td>GDScript</td><td>gdscript</td><td>*.gd</td></tr><tr><td>GEDCOM</td><td>gedcom</td><td>*.ged</td></tr><tr><td>GLSL</td><td>glsl</td><td>*.glsl</td></tr><tr><td>GN</td><td>gn</td><td>*.gn, .gn</td></tr><tr><td>Game Maker Language</td><td>game-maker-language</td><td>*.gml</td></tr><tr><td>Genie</td><td>genie</td><td>*.gs</td></tr><tr><td>Genshi</td><td>genshi, xml+genshi, xml+kid</td><td>*.kid</td></tr><tr><td>Gentoo Ebuild</td><td>gentoo-ebuild</td><td>*.ebuild</td></tr><tr><td>Gentoo Eclass</td><td>gentoo-eclass</td><td>*.eclass</td></tr><tr><td>Gerber Image</td><td>gerber-image, rs-274x</td><td>*.gbr</td></tr><tr><td>Gettext Catalog</td><td>gettext-catalog, pot</td><td>*.po</td></tr><tr><td>Gherkin</td><td>gherkin, cucumber</td><td>*.feature</td></tr><tr><td>Git Attributes</td><td>git-attributes, gitattributes</td><td>.gitattributes</td></tr><tr><td>Git Config</td><td>git-config, gitconfig, gitmodules</td><td>*.gitconfig, .gitconfig</td></tr><tr><td>Glyph</td><td>glyph</td><td>*.glf</td></tr><tr><td>Glyph Bitmap Distribution Format</td><td>glyph-bitmap-distribution-format</td><td>*.bdf</td></tr><tr><td>Gnuplot</td><td>gnuplot</td><td>*.gp</td></tr><tr><td>Go</td><td>go, golang</td><td>*.go</td></tr><tr><td>Golo</td><td>golo</td><td>*.golo</td></tr><tr><td>Gosu</td><td>gosu</td><td>*.gs</td></tr><tr><td>Grace</td><td>grace</td><td>*.grace</td></tr><tr><td>Gradle</td><td>gradle</td><td>*.gradle</td></tr><tr><td>Grammatical Framework</td><td>grammatical-framework, gf</td><td>*.gf</td></tr><tr><td>Graph Modeling Language</td><td>graph-modeling-language</td><td>*.gml</td></tr><tr><td>GraphQL</td><td>graphql</td><td>*.graphql</td></tr><tr><td>Graphviz (DOT)</td><td>dot</td><td>*.dot</td></tr><tr><td>Groovy</td><td>groovy</td><td>*.groovy, Jenkinsfile</td></tr><tr><td>Groovy Server Pages</td><td>groovy-server-pages, gsp</td><td>*.gsp</td></tr><tr><td>HAProxy</td><td>haproxy</td><td>*.cfg, haproxy.cfg</td></tr><tr><td>HCL</td><td>hcl, terraform</td><td>*.hcl</td></tr><tr><td>HLSL</td><td>hlsl</td><td>*.hlsl</td></tr><tr><td>HTML</td><td>html, xhtml</td><td>*.html</td></tr><tr><td>HTML+Django</td><td>html+django, django, html+jinja, htmldjango</td><td>*.jinja</td></tr><tr><td>HTML+ECR</td><td>html+ecr, ecr</td><td>*.ecr</td></tr><tr><td>HTML+EEX</td><td>html+eex, eex</td><td>*.eex</td></tr><tr><td>HTML+ERB</td><td>html+erb, erb</td><td>*.erb</td></tr><tr><td>HTML+PHP</td><td>html+php</td><td>*.phtml</td></tr><tr><td>HTML+Razor</td><td>html+razor, razor</td><td>*.cshtml</td></tr><tr><td>HTTP</td><td>http</td><td>*.http</td></tr><tr><td>HXML</td><td>hxml</td><td>*.hxml</td></tr><tr><td>Hack</td><td>hack</td><td>*.hack</td></tr><tr><td>Haml</td><td>haml</td><td>*.haml</td></tr><tr><td>Handlebars</td><td>handlebars, hbs, htmlbars</td><td>*.handlebars</td></tr><tr><td>Harbour</td><td>harbour</td><td>*.hb</td></tr><tr><td>Haskell</td><td>haskell</td><td>*.hs</td></tr><tr><td>Haxe</td><td>haxe</td><td>*.hx</td></tr><tr><td>HiveQL</td><td>hiveql</td><td>*.q</td></tr><tr><td>HolyC</td><td>holyc</td><td>*.hc</td></tr><tr><td>Hy</td><td>hy, hylang</td><td>*.hy</td></tr><tr><td>HyPhy</td><td>hyphy</td><td>*.bf</td></tr><tr><td>IDL</td><td>idl</td><td>*.pro</td></tr><tr><td>IGOR Pro</td><td>igor-pro, igor, igorpro</td><td>*.ipf</td></tr><tr><td>INI</td><td>ini, dosini</td><td>*.ini, buildozer.spec</td></tr><tr><td>IRC log</td><td>irc-log, irc</td><td>*.irclog</td></tr><tr><td>Idris</td><td>idris</td><td>*.idr</td></tr><tr><td>Ignore List</td><td>ignore-list, ignore, gitignore, git-ignore</td><td>*.gitignore, .atomignore</td></tr><tr><td>Inform 7</td><td>inform-7, i7, inform7</td><td>*.ni</td></tr><tr><td>Inno Setup</td><td>inno-setup</td><td>*.iss</td></tr><tr><td>Io</td><td>io</td><td>*.io</td></tr><tr><td>Ioke</td><td>ioke</td><td>*.ik</td></tr><tr><td>Isabelle</td><td>isabelle</td><td>*.thy</td></tr><tr><td>Isabelle ROOT</td><td>isabelle-root</td><td>ROOT</td></tr><tr><td>J</td><td>j</td><td>*.ijs</td></tr><tr><td>JFlex</td><td>jflex</td><td>*.flex</td></tr><tr><td>JSON</td><td>json</td><td>*.json, .arcconfig</td></tr><tr><td>JSON with Comments</td><td>json-with-comments, jsonc</td><td>*.jsonc, .babelrc</td></tr><tr><td>JSON5</td><td>json5</td><td>*.json5</td></tr><tr><td>JSONLD</td><td>jsonld</td><td>*.jsonld</td></tr><tr><td>JSONiq</td><td>jsoniq</td><td>*.jq</td></tr><tr><td>JSX</td><td>jsx</td><td>*.jsx</td></tr><tr><td>Jasmin</td><td>jasmin</td><td>*.j</td></tr><tr><td>Java</td><td>java</td><td>*.java</td></tr><tr><td>Java Properties</td><td>java-properties</td><td>*.properties</td></tr><tr><td>Java Server Pages</td><td>java-server-pages, jsp</td><td>*.jsp</td></tr><tr><td>JavaScript</td><td>javascript, js, node</td><td>*.js, Jakefile</td></tr><tr><td>JavaScript+ERB</td><td>javascript+erb</td><td>*.js.erb</td></tr><tr><td>Jison</td><td>jison</td><td>*.jison</td></tr><tr><td>Jison Lex</td><td>jison-lex</td><td>*.jisonlex</td></tr><tr><td>Jolie</td><td>jolie</td><td>*.ol</td></tr><tr><td>Jsonnet</td><td>jsonnet</td><td>*.jsonnet</td></tr><tr><td>Julia</td><td>julia</td><td>*.jl</td></tr><tr><td>Jupyter Notebook</td><td>jupyter-notebook</td><td>*.ipynb, Notebook</td></tr><tr><td>KRL</td><td>krl</td><td>*.krl</td></tr><tr><td>KiCad Layout</td><td>kicad-layout, pcbnew</td><td>*.kicad_pcb, fp-lib-table</td></tr><tr><td>KiCad Legacy Layout</td><td>kicad-legacy-layout</td><td>*.brd</td></tr><tr><td>KiCad Schematic</td><td>kicad-schematic</td><td>*.sch</td></tr><tr><td>Kit</td><td>kit</td><td>*.kit</td></tr><tr><td>Kotlin</td><td>kotlin</td><td>*.kt</td></tr><tr><td>LFE</td><td>lfe</td><td>*.lfe</td></tr><tr><td>LLVM</td><td>llvm</td><td>*.ll</td></tr><tr><td>LOLCODE</td><td>lolcode</td><td>*.lol</td></tr><tr><td>LSL</td><td>lsl</td><td>*.lsl</td></tr><tr><td>LTspice Symbol</td><td>ltspice-symbol</td><td>*.asy</td></tr><tr><td>LabVIEW</td><td>labview</td><td>*.lvproj</td></tr><tr><td>Lasso</td><td>lasso, lassoscript</td><td>*.lasso</td></tr><tr><td>Latte</td><td>latte</td><td>*.latte</td></tr><tr><td>Lean</td><td>lean</td><td>*.lean</td></tr><tr><td>Less</td><td>less</td><td>*.less</td></tr><tr><td>Lex</td><td>lex, flex</td><td>*.l</td></tr><tr><td>LilyPond</td><td>lilypond</td><td>*.ly</td></tr><tr><td>Limbo</td><td>limbo</td><td>*.b</td></tr><tr><td>Linker Script</td><td>linker-script</td><td>*.ld, ld.script</td></tr><tr><td>Linux Kernel Module</td><td>linux-kernel-module</td><td>*.mod</td></tr><tr><td>Liquid</td><td>liquid</td><td>*.liquid</td></tr><tr><td>Literate Agda</td><td>literate-agda</td><td>*.lagda</td></tr><tr><td>Literate CoffeeScript</td><td>literate-coffeescript, litcoffee</td><td>*.litcoffee</td></tr><tr><td>Literate Haskell</td><td>literate-haskell, lhaskell, lhs</td><td>*.lhs</td></tr><tr><td>LiveScript</td><td>livescript, live-script, ls</td><td>*.ls, Slakefile</td></tr><tr><td>Logos</td><td>logos</td><td>*.xm</td></tr><tr><td>Logtalk</td><td>logtalk</td><td>*.lgt</td></tr><tr><td>LookML</td><td>lookml</td><td>*.lookml</td></tr><tr><td>LoomScript</td><td>loomscript</td><td>*.ls</td></tr><tr><td>Lua</td><td>lua</td><td>*.lua, .luacheckrc</td></tr><tr><td>M</td><td>m, mumps</td><td>*.mumps</td></tr><tr><td>M4</td><td>m4</td><td>*.m4</td></tr><tr><td>M4Sugar</td><td>m4sugar, autoconf</td><td>*.m4, <span class="exturl" data-url="aHR0cDovL2NvbmZpZ3VyZS5hYw==">configure.ac<i class="fa fa-external-link-alt"></i></span></td></tr><tr><td>MATLAB</td><td>matlab, octave</td><td>*.matlab</td></tr><tr><td>MAXScript</td><td>maxscript</td><td>*.ms</td></tr><tr><td>MLIR</td><td>mlir</td><td>*.mlir</td></tr><tr><td>MQL4</td><td>mql4</td><td>*.mq4</td></tr><tr><td>MQL5</td><td>mql5</td><td>*.mq5</td></tr><tr><td>MTML</td><td>mtml</td><td>*.mtml</td></tr><tr><td>MUF</td><td>muf</td><td>*.muf</td></tr><tr><td>Macaulay2</td><td>macaulay2, m2</td><td>*.m2</td></tr><tr><td>Makefile</td><td>makefile, bsdmake, make, mf</td><td>*.mak, BSDmakefile</td></tr><tr><td>Mako</td><td>mako</td><td>*.mako</td></tr><tr><td>Markdown</td><td>markdown, pandoc</td><td>*.md, <span class="exturl" data-url="aHR0cDovL2NvbnRlbnRzLmxy">contents.lr<i class="fa fa-external-link-alt"></i></span></td></tr><tr><td>Marko</td><td>marko, markojs</td><td>*.marko</td></tr><tr><td>Mask</td><td>mask</td><td>*.mask</td></tr><tr><td>Mathematica</td><td>mathematica, mma</td><td>*.mathematica</td></tr><tr><td>Maven POM</td><td>maven-pom</td><td>pom.xml</td></tr><tr><td>Max</td><td>max, max/msp, maxmsp</td><td>*.maxpat</td></tr><tr><td>MediaWiki</td><td>mediawiki</td><td>*.mediawiki</td></tr><tr><td>Mercury</td><td>mercury</td><td>*.m</td></tr><tr><td>Meson</td><td>meson</td><td>meson.build</td></tr><tr><td>Metal</td><td>metal</td><td>*.metal</td></tr><tr><td>Microsoft Developer Studio Project</td><td>microsoft-developer-studio-project</td><td>*.dsp</td></tr><tr><td>MiniD</td><td>minid</td><td>*.minid</td></tr><tr><td>Mirah</td><td>mirah</td><td>*.druby</td></tr><tr><td>Modelica</td><td>modelica</td><td>*.mo</td></tr><tr><td>Modula-2</td><td>modula-2</td><td>*.mod</td></tr><tr><td>Modula-3</td><td>modula-3</td><td>*.i3</td></tr><tr><td>Module Management System</td><td>module-management-system</td><td>*.mms, descrip.mmk</td></tr><tr><td>Monkey</td><td>monkey</td><td>*.monkey</td></tr><tr><td>Moocode</td><td>moocode</td><td>*.moo</td></tr><tr><td>MoonScript</td><td>moonscript</td><td>*.moon</td></tr><tr><td>Motorola 68K Assembly</td><td>motorola-68k-assembly, m68k</td><td>*.asm</td></tr><tr><td>Muse</td><td>muse, amusewiki</td><td>*.muse</td></tr><tr><td>Myghty</td><td>myghty</td><td>*.myt</td></tr><tr><td>NASL</td><td>nasl</td><td>*.nasl</td></tr><tr><td>NCL</td><td>ncl</td><td>*.ncl</td></tr><tr><td>NEON</td><td>neon, ne-on</td><td>*.neon</td></tr><tr><td>NL</td><td>nl</td><td>*.nl</td></tr><tr><td>NPM Config</td><td>npm-config, npmrc</td><td>.npmrc</td></tr><tr><td>NSIS</td><td>nsis</td><td>*.nsi</td></tr><tr><td>Nearley</td><td>nearley</td><td>*.ne</td></tr><tr><td>Nemerle</td><td>nemerle</td><td>*.n</td></tr><tr><td>NetLinx</td><td>netlinx</td><td>*.axs</td></tr><tr><td>NetLinx+ERB</td><td>netlinx+erb</td><td>*.axs.erb</td></tr><tr><td>NetLogo</td><td>netlogo</td><td>*.nlogo</td></tr><tr><td>NewLisp</td><td>newlisp</td><td>*.nl</td></tr><tr><td>Nextflow</td><td>nextflow</td><td>*.nf, nextflow.config</td></tr><tr><td>Nginx</td><td>nginx</td><td>*.nginxconf, nginx.conf</td></tr><tr><td>Nim</td><td>nim</td><td>*.nim, nim.cfg</td></tr><tr><td>Ninja</td><td>ninja</td><td>*.ninja</td></tr><tr><td>Nit</td><td>nit</td><td>*.nit</td></tr><tr><td>Nix</td><td>nix, nixos</td><td>*.nix</td></tr><tr><td>Nu</td><td>nu, nush</td><td>*.nu, Nukefile</td></tr><tr><td>NumPy</td><td>numpy</td><td>*.numpy</td></tr><tr><td>OCaml</td><td>ocaml</td><td>*.ml</td></tr><tr><td>ObjDump</td><td>objdump</td><td>*.objdump</td></tr><tr><td>Object Data Instance Notation</td><td>object-data-instance-notation</td><td>*.odin</td></tr><tr><td>ObjectScript</td><td>objectscript</td><td>*.cls</td></tr><tr><td>Objective-C</td><td>objective-c, obj-c, objc, objectivec</td><td>*.m</td></tr><tr><td>Objective-C++</td><td>objective-c++, obj-c++, objc++, objectivec++</td><td>*.mm</td></tr><tr><td>Objective-J</td><td>objective-j, obj-j, objectivej, objj</td><td>*.j</td></tr><tr><td>Odin</td><td>odin, odinlang, odin-lang</td><td>*.odin</td></tr><tr><td>Omgrofl</td><td>omgrofl</td><td>*.omgrofl</td></tr><tr><td>Opa</td><td>opa</td><td>*.opa</td></tr><tr><td>Opal</td><td>opal</td><td>*.opal</td></tr><tr><td>Open Policy Agent</td><td>open-policy-agent</td><td>*.rego</td></tr><tr><td>OpenCL</td><td>opencl</td><td>*.cl</td></tr><tr><td>OpenEdge ABL</td><td>openedge-abl, progress, openedge, abl</td><td>*.p</td></tr><tr><td>OpenQASM</td><td>openqasm</td><td>*.qasm</td></tr><tr><td>OpenRC runscript</td><td>openrc-runscript, openrc</td><td></td></tr><tr><td>OpenSCAD</td><td>openscad</td><td>*.scad</td></tr><tr><td>OpenStep Property List</td><td>openstep-property-list</td><td>*.plist</td></tr><tr><td>OpenType Feature File</td><td>opentype-feature-file, AFDKO</td><td>*.fea</td></tr><tr><td>Org</td><td>org</td><td>*.org</td></tr><tr><td>Ox</td><td>ox</td><td>*.ox</td></tr><tr><td>Oxygene</td><td>oxygene</td><td>*.oxygene</td></tr><tr><td>Oz</td><td>oz</td><td>*.oz</td></tr><tr><td>P4</td><td>p4</td><td>*.p4</td></tr><tr><td>PHP</td><td>php, inc</td><td>*.php, .php</td></tr><tr><td>PLSQL</td><td>plsql</td><td>*.pls</td></tr><tr><td>PLpgSQL</td><td>plpgsql</td><td>*.pgsql</td></tr><tr><td>POV-Ray SDL</td><td>pov-ray-sdl, pov-ray, povray</td><td>*.pov</td></tr><tr><td>Pan</td><td>pan</td><td>*.pan</td></tr><tr><td>Papyrus</td><td>papyrus</td><td>*.psc</td></tr><tr><td>Parrot</td><td>parrot</td><td>*.parrot</td></tr><tr><td>Parrot Assembly</td><td>parrot-assembly, pasm</td><td>*.pasm</td></tr><tr><td>Parrot Internal Representation</td><td>parrot-internal-representation, pir</td><td>*.pir</td></tr><tr><td>Pascal</td><td>pascal</td><td>*.pas</td></tr><tr><td>Pawn</td><td>pawn</td><td>*.pwn</td></tr><tr><td>Pep8</td><td>pep8</td><td>*.pep</td></tr><tr><td>Perl</td><td>perl, cperl</td><td>*.pl, <span class="exturl" data-url="aHR0cDovL01ha2VmaWxlLlBM">Makefile.PL<i class="fa fa-external-link-alt"></i></span></td></tr><tr><td>Pic</td><td>pic</td><td>*.pic</td></tr><tr><td>Pickle</td><td>pickle</td><td>*.pkl</td></tr><tr><td>PicoLisp</td><td>picolisp</td><td>*.l</td></tr><tr><td>PigLatin</td><td>piglatin</td><td>*.pig</td></tr><tr><td>Pike</td><td>pike</td><td>*.pike</td></tr><tr><td>PlantUML</td><td>plantuml</td><td>*.puml</td></tr><tr><td>Pod</td><td>pod</td><td>*.pod</td></tr><tr><td>Pod 6</td><td>pod-6</td><td>*.pod</td></tr><tr><td>PogoScript</td><td>pogoscript</td><td>*.pogo</td></tr><tr><td>Pony</td><td>pony</td><td>*.pony</td></tr><tr><td>PostCSS</td><td>postcss</td><td>*.pcss</td></tr><tr><td>PostScript</td><td>postscript, postscr</td><td>*.ps</td></tr><tr><td>PowerBuilder</td><td>powerbuilder</td><td>*.pbt</td></tr><tr><td>PowerShell</td><td>powershell, posh, pwsh</td><td>*.ps1</td></tr><tr><td>Prisma</td><td>prisma</td><td>*.prisma</td></tr><tr><td>Processing</td><td>processing</td><td>*.pde</td></tr><tr><td>Proguard</td><td>proguard</td><td>*.pro</td></tr><tr><td>Prolog</td><td>prolog</td><td>*.pl</td></tr><tr><td>Propeller Spin</td><td>propeller-spin</td><td>*.spin</td></tr><tr><td>Protocol Buffer</td><td>protocol-buffer, protobuf</td><td>*.proto</td></tr><tr><td>Public Key</td><td>public-key</td><td>*.asc</td></tr><tr><td>Pug</td><td>pug</td><td>*.jade</td></tr><tr><td>Puppet</td><td>puppet</td><td>*.pp, Modulefile</td></tr><tr><td>Pure Data</td><td>pure-data</td><td>*.pd</td></tr><tr><td>PureBasic</td><td>purebasic</td><td>*.pb</td></tr><tr><td>PureScript</td><td>purescript</td><td>*.purs</td></tr><tr><td>Python</td><td>python, python3, rusthon</td><td>*.py, .gclient</td></tr><tr><td>Python console</td><td>python-console, pycon</td><td></td></tr><tr><td>Python traceback</td><td>python-traceback</td><td>*.pytb</td></tr><tr><td>QML</td><td>qml</td><td>*.qml</td></tr><tr><td>QMake</td><td>qmake</td><td>*.pro</td></tr><tr><td>Quake</td><td>quake</td><td>m3makefile</td></tr><tr><td>R</td><td>r, R, Rscript, splus</td><td>*.r, .Rprofile</td></tr><tr><td>RAML</td><td>raml</td><td>*.raml</td></tr><tr><td>RDoc</td><td>rdoc</td><td>*.rdoc</td></tr><tr><td>REALbasic</td><td>realbasic</td><td>*.rbbas</td></tr><tr><td>REXX</td><td>rexx, arexx</td><td>*.rexx</td></tr><tr><td>RHTML</td><td>rhtml, html+ruby</td><td>*.rhtml</td></tr><tr><td>RMarkdown</td><td>rmarkdown</td><td>*.rmd</td></tr><tr><td>RPC</td><td>rpc, rpcgen, oncrpc, xdr</td><td>*.x</td></tr><tr><td>RPM Spec</td><td>rpm-spec, specfile</td><td>*.spec</td></tr><tr><td>RUNOFF</td><td>runoff</td><td>*.rnh</td></tr><tr><td>Racket</td><td>racket</td><td>*.rkt</td></tr><tr><td>Ragel</td><td>ragel, ragel-rb, ragel-ruby</td><td>*.rl</td></tr><tr><td>Raku</td><td>raku, perl6, perl-6</td><td>*.6pl</td></tr><tr><td>Rascal</td><td>rascal</td><td>*.rsc</td></tr><tr><td>Raw token data</td><td>raw-token-data, raw</td><td>*.raw</td></tr><tr><td>Readline Config</td><td>readline-config, inputrc, readline</td><td>.inputrc</td></tr><tr><td>Reason</td><td>reason</td><td>*.re</td></tr><tr><td>Rebol</td><td>rebol</td><td>*.reb</td></tr><tr><td>Red</td><td>red, red/system</td><td>*.red</td></tr><tr><td>Redcode</td><td>redcode</td><td>*.cw</td></tr><tr><td>Regular Expression</td><td>regular-expression, regexp, regex</td><td>*.regexp</td></tr><tr><td>Ren’Py</td><td>ren’py, renpy</td><td>*.rpy</td></tr><tr><td>RenderScript</td><td>renderscript</td><td>*.rs</td></tr><tr><td>Rich Text Format</td><td>rich-text-format</td><td>*.rtf</td></tr><tr><td>Ring</td><td>ring</td><td>*.ring</td></tr><tr><td>Riot</td><td>riot</td><td>*.riot</td></tr><tr><td>RobotFramework</td><td>robotframework</td><td>*.robot</td></tr><tr><td>Roff</td><td>roff, groff, mdoc, nroff, troff</td><td>*.roff, eqnrc</td></tr><tr><td>Roff Manpage</td><td>roff-manpage</td><td>*.1</td></tr><tr><td>Rouge</td><td>rouge</td><td>*.rg</td></tr><tr><td>Ruby</td><td>ruby, jruby, macruby, rake, rb, rbx</td><td>*.rb, .irbrc</td></tr><tr><td>Rust</td><td>rust</td><td>*.rs</td></tr><tr><td>SAS</td><td>sas</td><td>*.sas</td></tr><tr><td>SCSS</td><td>scss</td><td>*.scss</td></tr><tr><td>SMT</td><td>smt</td><td>*.smt2</td></tr><tr><td>SPARQL</td><td>sparql</td><td>*.sparql</td></tr><tr><td>SQF</td><td>sqf</td><td>*.sqf</td></tr><tr><td>SQL</td><td>sql</td><td>*.sql</td></tr><tr><td>SQLPL</td><td>sqlpl</td><td>*.sql</td></tr><tr><td>SRecode Template</td><td>srecode-template</td><td>*.srt</td></tr><tr><td>SSH Config</td><td>ssh-config</td><td>ssh-config</td></tr><tr><td>STON</td><td>ston</td><td>*.ston</td></tr><tr><td>SVG</td><td>svg</td><td>*.svg</td></tr><tr><td>SWIG</td><td>swig</td><td>*.i</td></tr><tr><td>Sage</td><td>sage</td><td>*.sage</td></tr><tr><td>SaltStack</td><td>saltstack, saltstate, salt</td><td>*.sls</td></tr><tr><td>Sass</td><td>sass</td><td>*.sass</td></tr><tr><td>Scala</td><td>scala</td><td>*.scala</td></tr><tr><td>Scaml</td><td>scaml</td><td>*.scaml</td></tr><tr><td>Scheme</td><td>scheme</td><td>*.scm</td></tr><tr><td>Scilab</td><td>scilab</td><td>*.sci</td></tr><tr><td>Self</td><td>self</td><td>*.self</td></tr><tr><td>ShaderLab</td><td>shaderlab</td><td>*.shader</td></tr><tr><td>Shell</td><td>shell, sh, shell-script, bash, zsh</td><td>*.sh, .bash_aliases</td></tr><tr><td>ShellSession</td><td>shellsession, console</td><td>*.sh-session</td></tr><tr><td>Shen</td><td>shen</td><td>*.shen</td></tr><tr><td>Sieve</td><td>sieve</td><td>*.sieve</td></tr><tr><td>Slash</td><td>slash</td><td>*.sl</td></tr><tr><td>Slice</td><td>slice</td><td>*.ice</td></tr><tr><td>Slim</td><td>slim</td><td>*.slim</td></tr><tr><td>SmPL</td><td>smpl, coccinelle</td><td>*.cocci</td></tr><tr><td>Smali</td><td>smali</td><td>*.smali</td></tr><tr><td>Smalltalk</td><td>smalltalk, squeak</td><td>*.st</td></tr><tr><td>Smarty</td><td>smarty</td><td>*.tpl</td></tr><tr><td>Solidity</td><td>solidity</td><td></td></tr><tr><td>SourcePawn</td><td>sourcepawn, sourcemod</td><td>*.sp</td></tr><tr><td>Spline Font Database</td><td>spline-font-database</td><td>*.sfd</td></tr><tr><td>Squirrel</td><td>squirrel</td><td>*.nut</td></tr><tr><td>Stan</td><td>stan</td><td>*.stan</td></tr><tr><td>Standard ML</td><td>standard-ml, sml</td><td>*.ML</td></tr><tr><td>Starlark</td><td>starlark, bazel, bzl</td><td>*.bzl, BUCK</td></tr><tr><td>Stata</td><td>stata</td><td>*.do</td></tr><tr><td>Stylus</td><td>stylus</td><td>*.styl</td></tr><tr><td>SubRip Text</td><td>subrip-text</td><td>*.srt</td></tr><tr><td>SugarSS</td><td>sugarss</td><td>*.sss</td></tr><tr><td>SuperCollider</td><td>supercollider</td><td>*.sc</td></tr><tr><td>Svelte</td><td>svelte</td><td>*.svelte</td></tr><tr><td>Swift</td><td>swift</td><td>*.swift</td></tr><tr><td>SystemVerilog</td><td>systemverilog</td><td>*.sv</td></tr><tr><td>TI Program</td><td>ti-program</td><td>*.8xp</td></tr><tr><td>TLA</td><td>tla</td><td>*.tla</td></tr><tr><td>TOML</td><td>toml</td><td>*.toml, Cargo.lock</td></tr><tr><td>TSQL</td><td>tsql</td><td>*.sql</td></tr><tr><td>TSX</td><td>tsx</td><td>*.tsx</td></tr><tr><td>TXL</td><td>txl</td><td>*.txl</td></tr><tr><td>Tcl</td><td>tcl</td><td>*.tcl, owh</td></tr><tr><td>Tcsh</td><td>tcsh</td><td>*.tcsh</td></tr><tr><td>TeX</td><td>tex, latex</td><td>*.tex</td></tr><tr><td>Tea</td><td>tea</td><td>*.tea</td></tr><tr><td>Terra</td><td>terra</td><td>*.t</td></tr><tr><td>Texinfo</td><td>texinfo</td><td>*.texinfo</td></tr><tr><td>Text</td><td>text, fundamental</td><td>*.txt, COPYING</td></tr><tr><td>Textile</td><td>textile</td><td>*.textile</td></tr><tr><td>Thrift</td><td>thrift</td><td>*.thrift</td></tr><tr><td>Turing</td><td>turing</td><td>*.t</td></tr><tr><td>Turtle</td><td>turtle</td><td>*.ttl</td></tr><tr><td>Twig</td><td>twig</td><td>*.twig</td></tr><tr><td>Type Language</td><td>type-language, tl</td><td>*.tl</td></tr><tr><td>TypeScript</td><td>typescript, ts</td><td>*.ts</td></tr><tr><td>Unified Parallel C</td><td>unified-parallel-c</td><td>*.upc</td></tr><tr><td>Unity3D Asset</td><td>unity3d-asset</td><td>*.anim</td></tr><tr><td>Unix Assembly</td><td>unix-assembly</td><td>*.s</td></tr><tr><td>Uno</td><td>uno</td><td>*.uno</td></tr><tr><td>UnrealScript</td><td>unrealscript</td><td>*.uc</td></tr><tr><td>UrWeb</td><td>urweb, Ur/Web, Ur</td><td>*.ur</td></tr><tr><td>V</td><td>v, vlang</td><td>*.v</td></tr><tr><td>VBA</td><td>vba, vb6</td><td>*.bas</td></tr><tr><td>VBScript</td><td>vbscript</td><td>*.vbs</td></tr><tr><td>VCL</td><td>vcl</td><td>*.vcl</td></tr><tr><td>VHDL</td><td>vhdl</td><td>*.vhdl</td></tr><tr><td>Vala</td><td>vala</td><td>*.vala</td></tr><tr><td>Verilog</td><td>verilog</td><td>*.v</td></tr><tr><td>Vim Snippet</td><td>vim-snippet, SnipMate, UltiSnip, NeoSnippet</td><td>*.snip</td></tr><tr><td>Vim script</td><td>vim-script, vim, viml, nvim</td><td>*.vim, .gvimrc</td></tr><tr><td>Visual Basic .NET</td><td>vbnet, <span class="exturl" data-url="aHR0cDovL3ZiLm5ldA==">vb.net<i class="fa fa-external-link-alt"></i></span></td><td>*.vb</td></tr><tr><td>Volt</td><td>volt</td><td>*.volt</td></tr><tr><td>Vue</td><td>vue</td><td>*.vue</td></tr><tr><td>Wavefront Material</td><td>wavefront-material</td><td>*.mtl</td></tr><tr><td>Wavefront Object</td><td>wavefront-object</td><td>*.obj</td></tr><tr><td>Web Ontology Language</td><td>web-ontology-language</td><td>*.owl</td></tr><tr><td>WebAssembly</td><td>webassembly, wast, wasm</td><td>*.wast</td></tr><tr><td>WebIDL</td><td>webidl</td><td>*.webidl</td></tr><tr><td>WebVTT</td><td>webvtt</td><td>*.vtt</td></tr><tr><td>Wget Config</td><td>wget-config, wgetrc</td><td>.wgetrc</td></tr><tr><td>Windows Registry Entries</td><td>windows-registry-entries</td><td>*.reg</td></tr><tr><td>Wollok</td><td>wollok</td><td>*.wlk</td></tr><tr><td>World of Warcraft Addon Data</td><td>world-of-warcraft-addon-data</td><td>*.toc</td></tr><tr><td>X BitMap</td><td>x-bitmap, xbm</td><td>*.xbm</td></tr><tr><td>X Font Directory Index</td><td>x-font-directory-index</td><td>encodings.dir</td></tr><tr><td>X PixMap</td><td>x-pixmap, xpm</td><td>*.xpm</td></tr><tr><td>X10</td><td>x10, xten</td><td>*.x10</td></tr><tr><td>XC</td><td>xc</td><td>*.xc</td></tr><tr><td>XCompose</td><td>xcompose</td><td>.XCompose</td></tr><tr><td>XML</td><td>xml, rss, xsd, wsdl</td><td>*.xml, .classpath</td></tr><tr><td>XML Property List</td><td>xml-property-list</td><td>*.plist</td></tr><tr><td>XPages</td><td>xpages</td><td>*.xsp-config</td></tr><tr><td>XProc</td><td>xproc</td><td>*.xpl</td></tr><tr><td>XQuery</td><td>xquery</td><td>*.xquery</td></tr><tr><td>XS</td><td>xs</td><td>*.xs</td></tr><tr><td>XSLT</td><td>xslt, xsl</td><td>*.xslt</td></tr><tr><td>Xojo</td><td>xojo</td><td>*.xojo_code</td></tr><tr><td>Xtend</td><td>xtend</td><td>*.xtend</td></tr><tr><td>YAML</td><td>yaml, yml</td><td>*.yml, .clang-format</td></tr><tr><td>YANG</td><td>yang</td><td>*.yang</td></tr><tr><td>YARA</td><td>yara</td><td>*.yar</td></tr><tr><td>YASnippet</td><td>yasnippet, snippet, yas</td><td>*.yasnippet</td></tr><tr><td>Yacc</td><td>yacc</td><td>*.y</td></tr><tr><td>ZAP</td><td>zap</td><td>*.zap</td></tr><tr><td>ZIL</td><td>zil</td><td>*.zil</td></tr><tr><td>Zeek</td><td>zeek, bro</td><td>*.zeek</td></tr><tr><td>ZenScript</td><td>zenscript</td><td>*.zs</td></tr><tr><td>Zephir</td><td>zephir</td><td>*.zep</td></tr><tr><td>Zig</td><td>zig</td><td>*.zig</td></tr><tr><td>Zimpl</td><td>zimpl</td><td>*.zimpl</td></tr><tr><td>cURL Config</td><td>curl-config, curlrc</td><td>.curlrc</td></tr><tr><td>desktop</td><td>desktop</td><td>*.desktop</td></tr><tr><td>dircolors</td><td>dircolors</td><td>*.dircolors, .dir_colors</td></tr><tr><td>eC</td><td>ec</td><td>*.ec</td></tr><tr><td>edn</td><td>edn</td><td>*.edn</td></tr><tr><td>fish</td><td>fish</td><td>*.fish</td></tr><tr><td>mIRC Script</td><td>mirc-script</td><td>*.mrc</td></tr><tr><td>mcfunction</td><td>mcfunction</td><td>*.mcfunction</td></tr><tr><td>mupad</td><td>mupad</td><td>*.mu</td></tr><tr><td>nanorc</td><td>nanorc</td><td>*.nanorc, .nanorc</td></tr><tr><td>nesC</td><td>nesc</td><td>*.nc</td></tr><tr><td>ooc</td><td>ooc</td><td>*.ooc</td></tr><tr><td>q</td><td>q</td><td>*.q</td></tr><tr><td>reStructuredText</td><td>restructuredtext, rst</td><td>*.rst</td></tr><tr><td>sed</td><td>sed</td><td>*.sed</td></tr><tr><td>wdl</td><td>wdl</td><td>*.wdl</td></tr><tr><td>wisp</td><td>wisp</td><td>*.wisp</td></tr><tr><td>xBase</td><td>xbase, advpl, clipper, foxpro</td><td>*.prg</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;Markdown 代码块可声明编程语言类型，实现代码高亮。有的书写规范要求必须声明，此处记录一下 Markdown 支持的所有编程语言。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Markdown" scheme="https://www.iszy.cc/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>使用 Nexus OSS 为 Docker 镜像提供代理/缓存功能</title>
    <link href="https://www.iszy.cc/posts/14/"/>
    <id>https://www.iszy.cc/posts/14/</id>
    <published>2021-10-05T12:06:09.000Z</published>
    <updated>2021-10-05T12:06:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天记录一下利用 Nexus OSS 建立 Docker 镜像代理的过程。</p><span id="more"></span><h2 id="前言">前言</h2><p>众所周知，在国内直接使用 docker 的官方镜像速度是很慢的，一般都需要使用镜像代理。不过，国内的代理一般采用定时同步的方式，镜像的版本更新不够及时，而且像 Github (<span class="exturl" data-url="aHR0cDovL2doY3IuaW8=">ghcr.io<i class="fa fa-external-link-alt"></i></span>)，Google (<span class="exturl" data-url="aHR0cDovL2djci5pbw==">gcr.io<i class="fa fa-external-link-alt"></i></span>)等第三方库一般都是没有代理的，这就需要自行搭建镜像代理。除此之外，一些公司需要私有仓库上传一些内部的镜像，也可以用 nexus 实现。</p><h2 id="搭建">搭建</h2><p>这边我准备使用 docker 容器的方式搭建 nexus，不容易出现问题。</p><h3 id="启动-Nexus-容器">启动 Nexus 容器</h3><p>这里选用 nexus3 的最新版本，当前为 3.34.1-01</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name nexus --restart=always \</span><br><span class="line">    -p 8081:8081 \</span><br><span class="line">    -v /data:/nexus-data \</span><br><span class="line">    -e INSTALL4J_ADD_VM_PARAMS=-Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m \</span><br><span class="line">    sonatype/nexus3</span><br></pre></td></tr></table></figure><p>docker-compose 方式：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nexus:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">sonatype/nexus3</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nexus</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">INSTALL4J_ADD_VM_PARAMS:</span> <span class="string">-Xms128m</span> <span class="string">-Xmx256m</span> <span class="string">-XX:MaxDirectMemorySize=256m</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8081</span><span class="string">:8081</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data:/nexus-data</span></span><br></pre></td></tr></table></figure><p>nexus 官方镜像的默认参数要求还挺高的。根据 nexus 的 dockerfile，可以看到可以通过环境变量<code>INSTALL4J_ADD_VM_PARAMS</code>覆盖默认参数。如果机器配置挺高的，可以不加上面的环境变量。</p><p>默认参数：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ENV</span> INSTALL4J_ADD_VM_PARAMS=-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=<span class="number">2703</span>m -Djava.util.prefs.userRoot=/nexus-data/javaprefs</span><br></pre></td></tr></table></figure><p>当 8081 端口可以访问后，启动就完成了。</p><p>注意，给挂载的文件夹高点的权限，我这边直接给了 777，不然会报错，部分文件夹建不出来。</p><h3 id="配置-Nexus-OSS">配置 Nexus OSS</h3><p><img data-src="https://img.iszy.xyz/1633430503411.png?x-oss-process=style/big" alt=""></p><p>初始账号 admin，密码在挂载文件夹中的 <code>admin.password</code> 文件中。通过以下命令获取初始密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> nexus3 cat /nexus-data/admin.password</span><br></pre></td></tr></table></figure><h4 id="为-Docker-Hub-添加-Docker-Proxy-Repository">为 Docker Hub 添加 Docker Proxy Repository</h4><p>点击创建 Repository</p><p><img data-src="https://img.iszy.xyz/1633432311634.png" alt=""></p><p>可以看到支持非常多的内容，这里选择<code>docker(proxy)</code>。</p><p><img data-src="https://img.iszy.xyz/1633432371224.png" alt=""></p><p>关键内容:</p><ul><li><code>Proxy</code> - <code>Remote storage</code> 配置成 <code>https://registry-1.docker.io</code></li><li><code>Proxy</code> - <code>Docker Index</code> 选择 <code>Use Docker Hub</code>，能够保持最新</li></ul><p><img data-src="https://img.iszy.xyz/1633432604206.png?x-oss-process=style/big" alt=""></p><p>保存即可</p><h4 id="为-ghcr-io-添加-Docker-Proxy-Repository">为 <span class="exturl" data-url="aHR0cDovL2doY3IuaW8=">ghcr.io<i class="fa fa-external-link-alt"></i></span> 添加 Docker Proxy Repository</h4><p>这边再为 <span class="exturl" data-url="aHR0cDovL2doY3IuaW8=">ghcr.io<i class="fa fa-external-link-alt"></i></span> 创建一个代理，其他第三方仓库可以参考。</p><p><img data-src="https://img.iszy.xyz/1633432992527.png?x-oss-process=style/big" alt=""></p><h4 id="创建一个-Docker-Group-Repository">创建一个 Docker Group Repository</h4><p>现在创建一个 Docker Group Repository，这是我用 nexus 而不是官方的 docker registry 来创建代理的一个重要原因，可以把所有 docker 代理集合在一起共用一个地址。</p><p><img data-src="https://img.iszy.xyz/1633433470030.png" alt=""></p><p>这个 Repository 是我实际访问的仓库，所以要创建一个 http connector，端口自定，只要不是 8081。勾选 <code>Allow anonymous docker pull</code>，允许不登录执行 <code>docker pull</code>。</p><p><img data-src="https://img.iszy.xyz/1633433639787.png?x-oss-process=style/big" alt=""></p><h4 id="权限配置">权限配置</h4><p>这里要在<code>Security</code>-<code>Realms</code>里面启用<code>Docker Bearer Token Realm</code>，否则 docker 无法使用。</p><p><img data-src="https://img.iszy.xyz/1633434002040.png?x-oss-process=style/big" alt=""></p><h3 id="Nginx-代理">Nginx 代理</h3><p>也许你注意到，我刚刚配置的是 http connector，而且也没有给 nexus 配置 ssl。如果不想配置，可以直接使用刚刚的 <code>8082</code> 端口使用了。</p><p>这里是我的 nginx 配置，注意替换 server_name，和 nexus 的地址，大家参考着来。这样配置，可以让 docker 仓库 、其他仓库(maven)和 webui 共用地址。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span> nexus.example.com ;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://$host$request_uri;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">443</span> ssl http2;</span><br><span class="line">        <span class="attribute">listen</span> [::]:<span class="number">443</span> ssl http2;</span><br><span class="line">        <span class="attribute">server_name</span> nexus.example.com ;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 证书部分</span></span><br><span class="line">        <span class="attribute">ssl_certificate</span> /etc/ssl//fullchain.cer;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span> /etc/ssl/cert.key;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># TLS 握手优化</span></span><br><span class="line">        <span class="attribute">ssl_session_cache</span> builtin:<span class="number">1000</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line">        <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">        <span class="attribute">keepalive_timeout</span> <span class="number">75s</span>;</span><br><span class="line">        <span class="attribute">keepalive_requests</span> <span class="number">100</span>;</span><br><span class="line">        <span class="comment">#ssl_session_tickets off;</span></span><br><span class="line">        <span class="attribute">ssl_ecdh_curve</span> secp384r1;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># TLS 版本控制</span></span><br><span class="line">        <span class="attribute">ssl_protocols</span> TLSv1.<span class="number">2</span> TLSv1.<span class="number">3</span>;</span><br><span class="line">        <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">ssl_ciphers</span> TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-<span class="number">256</span>-GCM-SHA384:TLS13-AES-<span class="number">128</span>-GCM-SHA256:EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 开启 1.3 0-RTT</span></span><br><span class="line">        <span class="attribute">ssl_early_data</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># SSL Stapling</span></span><br><span class="line">        <span class="attribute">ssl_stapling</span> <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">ssl_stapling_verify</span> <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">resolver</span> <span class="number">223.5.5.5</span> <span class="number">1.1.1.1</span> <span class="number">1.0.0.1</span> valid=<span class="number">300s</span>;</span><br><span class="line">        <span class="attribute">resolver_timeout</span> <span class="number">5s</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">add_header</span> Strict-Transport-Security <span class="string">&quot;max-age=63072000; includeSubDomains; preload&quot;</span> always;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_send_timeout</span> <span class="number">120</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">300</span>;</span><br><span class="line">        <span class="attribute">proxy_buffering</span>    <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_request_buffering</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">tcp_nodelay</span>        <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">client_max_body_size</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://nexus:8081;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host $host;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="string">&quot;https&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将 /v2/ 转到创建的docker http connector</span></span><br><span class="line">        <span class="attribute">location</span> /v2/ &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://nexus:8082;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host $host;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP $remote_addr;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="string">&quot;https&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="使用">使用</h2><h3 id="直接使用">直接使用</h3><p>范例：</p><p>这样拉取一个官方 redis 镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nexus.example.com/redis</span><br></pre></td></tr></table></figure><p>这样拉取一个 Github(<span class="exturl" data-url="aHR0cDovL2doY3IuaW8=">ghcr.io<i class="fa fa-external-link-alt"></i></span>) 的 zvonimirsun/yourls 镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nexus.example.com/zvonimirsun/yourls</span><br></pre></td></tr></table></figure><p>注意:</p><ul><li>docker pull 的时候不要加<code>https://</code></li><li>docker api 不支持 content-path，docker pull 直接使用根地址加上对应的包名，不要使用 repo 列表后面复制的 url。</li></ul><h3 id="配置到镜像">配置到镜像</h3><p>现在可以将地址配置到 docker 配置中了，nexus 本地找不到的仓库会依次去 group 中配置的 proxy repo 里面查找。</p><p><code>/etc/docker/daemon.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;insecure-registries&quot;</span>: [],</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://nexus.example.com&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是 http 地址，则配置到 insecure-registries 里。</p><p>现在 docker pull 使用的就是 nexus 的代理地址了，可以省去前面的地址了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天记录一下利用 Nexus OSS 建立 Docker 镜像代理的过程。&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://www.iszy.cc/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Docker Registry" scheme="https://www.iszy.cc/tags/Docker-Registry/"/>
    
    <category term="Nexus" scheme="https://www.iszy.cc/tags/Nexus/"/>
    
  </entry>
  
  <entry>
    <title>Dockerfile 指令 COPY 拷贝文件夹</title>
    <link href="https://www.iszy.cc/posts/13/"/>
    <id>https://www.iszy.cc/posts/13/</id>
    <published>2021-10-05T07:41:01.000Z</published>
    <updated>2021-10-05T07:41:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在编写 dockerfile 时使用 COPY 拷贝文件夹时遇到了意料之外的情况。在此记录一下正确的使用方法。</p><span id="more"></span><h2 id="背景说明">背景说明</h2><p>今天在通过 dockerfile 将文件夹拷贝到镜像的时候发现，是把文件夹下的内容拷贝进去了。</p><p>dockerfile 如下：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:alpine</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /usr/src/app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> dist node_modules package.json ./</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3000</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;yarn&quot;</span>, <span class="string">&quot;start:prod&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>我是想把 dist 和 node_modules 两个文件夹都拷贝到镜像中，又不想用多条 COPY 来分别拷贝，那样会多一个 layer。结果发现 dist 和 node_modules 两个文件夹本身没有被拷贝进镜像，而是把文件夹下的内容分别拷贝进的镜像。</p><p>经过测试发现：</p><ul><li><code>ADD</code> 命令和 <code>COPY</code> 命令在复制文件时行为一致</li><li><code>COPY/ADD</code> 命令的源如果是文件夹，复制的是文件夹的内容而不是其本身</li><li>使用 <code>*</code> 匹配所有文件，如果遇到文件夹也会保持上述逻辑，即仅复制内容</li></ul><p>这个逻辑很诡异，和我们的一般预期不符。</p><p>我发现在六年前就已经有人问过类似的问题了，看来也没啥要改的意思。</p><h2 id="实现方法">实现方法</h2><p>下面列举几个事项方式，大家可以参考着使用。</p><h3 id="单个文件夹复制，指定目标目录">单个文件夹复制，指定目标目录</h3><p>一种方法就是一次复制一个文件夹，然后 COPY 的时候要指定到镜像中的具体目录，比如把上面的 dockerfile 改成这样：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:alpine</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /usr/src/app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> dist ./dist</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> node_modules ./node_modules</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> package.json ./</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3000</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;yarn&quot;</span>, <span class="string">&quot;start:prod&quot;</span>]</span></span><br></pre></td></tr></table></figure><h3 id="放到另一个文件夹中统一复制">放到另一个文件夹中统一复制</h3><p>上面那种写法很麻烦，还会增加 layer 数。这边想了一个变相的方法，不是很优雅。</p><p>就是将需要拷贝的文件夹都放到一个统一的文件夹中，然后在 dockerfile 中拷贝这个文件夹，文件夹下的目录结构就能够得到保持。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir dockerPackages &amp;&amp; mv dist node_modules dockerPackages</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:alpine</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /usr/src/app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> dockerPackages package.json ./</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3000</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;yarn&quot;</span>, <span class="string">&quot;start:prod&quot;</span>]</span></span><br></pre></td></tr></table></figure><h3 id="利用-dockerignore-文件">利用 .dockerignore 文件</h3><p>我们上面的写法其实就是像完成一件事，那就是仅把部分内容拷贝进镜像，然后忽略其他内容。这样，我们就可以利用 <code>.dockerignore</code> 文件，来更加优雅地实现。先忽略所有文件，然后将我们需要拷贝的文件排除。</p><p><code>.dockerignore</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">!dist</span><br><span class="line">!node_modules</span><br><span class="line">!package.json</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> node:alpine</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /usr/src/app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . ./</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3000</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;yarn&quot;</span>, <span class="string">&quot;start:prod&quot;</span>]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天在编写 dockerfile 时使用 COPY 拷贝文件夹时遇到了意料之外的情况。在此记录一下正确的使用方法。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Docker" scheme="https://www.iszy.cc/tags/Docker/"/>
    
    <category term="Dockerfile" scheme="https://www.iszy.cc/tags/Dockerfile/"/>
    
    <category term="Dockerfile COPY" scheme="https://www.iszy.cc/tags/Dockerfile-COPY/"/>
    
  </entry>
  
  <entry>
    <title>VS Code + ESLint 自动格式化和快捷键配置</title>
    <link href="https://www.iszy.cc/posts/12/"/>
    <id>https://www.iszy.cc/posts/12/</id>
    <published>2021-09-30T03:04:48.000Z</published>
    <updated>2021-09-30T03:04:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>在此记录一下 VS Code 配合 ESLint 进行自动修复格式化，以及快捷键的配置。</p><span id="more"></span><h2 id="准备">准备</h2><p>首先在 VS Code 中使用 ESLint，<code>ESLint</code> 插件肯定是少不了的。</p><p><img data-src="https://img.iszy.xyz/1632972151436.png" alt="ESLint"></p><p>如果需要支持 Vue，还需要安装 <code>Vetur</code> 插件。</p><p><img data-src="https://img.iszy.xyz/1632972292437.png" alt="Vetur"></p><p>当然项目中需要在 devDependencies 里添加 eslint 相关内容。</p><p><img data-src="https://img.iszy.xyz/1632972500989.png" alt="devDependencies"></p><p>如果需要对所有项目使用，建议全局安装 eslint。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint -g</span><br></pre></td></tr></table></figure><h2 id="配置自动格式化">配置自动格式化</h2><p>打开 VS Code 首选项，切换成 JSON 模式。</p><p><img data-src="https://img.iszy.xyz/1632973295099.png" alt=""></p><p>然后添加如下内容。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;source.fixAll.eslint&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;eslint.validate&quot;</span>: [<span class="string">&quot;javascript&quot;</span>, <span class="string">&quot;vue&quot;</span>, <span class="string">&quot;html&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，当你在保存 js、vue、html 文件时，ESLint 将会执行自动修复格式化操作。</p><h2 id="添加-ESLint-自动修复快捷键">添加 ESLint 自动修复快捷键</h2><p>自动格式化是好，但是有时候我们想自己主动触发格式化，而不是在每次保存时自动修复格式化。那么为了方便，我们可以考虑设置一个快捷键，用于触发格式化。不用配置上一部分的内容。</p><p>打开 <code>文件</code> -&gt; <code>首选项</code> -&gt; <code>键盘快捷方式</code>。或者英文的 <code>Code</code> -&gt; <code>Preferences</code> -&gt; <code>Keyboard Shortcuts</code>。</p><p><img data-src="https://img.iszy.xyz/1632973421746.png" alt="快捷键"></p><p>此时会列出当前可以绑定快捷键的所有功能和快捷键，在这里搜索<code>fix</code>。</p><p><img data-src="https://img.iszy.xyz/1632973767580.png" alt="修复快捷键"></p><p>可以看到<code>全部修复</code>也就是修复当前文件的全部错误，是没有绑定快捷键的。点击条目前面的加号，或是双击该条，可以添加和覆盖绑定的快捷键。打开后先按下想要绑定的快捷键再回车，即可保存。右键该条目可以删除或重置键绑定。这边我按照自己的习惯绑定了<code>Alt</code> + <code>X</code>。</p><p><img data-src="https://img.iszy.xyz/1632973867998.png" alt=""></p><p>此时，在你打开的文件中按下此快捷键，就会触发 ESLint 的自动修复格式化。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在此记录一下 VS Code 配合 ESLint 进行自动修复格式化，以及快捷键的配置。&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://www.iszy.cc/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="VS Code" scheme="https://www.iszy.cc/tags/VS-Code/"/>
    
    <category term="IDE" scheme="https://www.iszy.cc/tags/IDE/"/>
    
    <category term="ESLint" scheme="https://www.iszy.cc/tags/ESLint/"/>
    
    <category term="格式化" scheme="https://www.iszy.cc/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>完全通过 Github Actions 实现项目的自动化部署</title>
    <link href="https://www.iszy.cc/posts/11/"/>
    <id>https://www.iszy.cc/posts/11/</id>
    <published>2021-09-23T05:28:25.000Z</published>
    <updated>2021-09-23T05:28:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间写了一个通过 Github Actions 配合 Webhooks 实现项目自动化部署，但是服务器上由于并没有后端服务，所以实现的方式不太优雅。今天我将完全抛弃 Webhook，完全通过 Github Actions 来实现项目的自动化部署。</p><span id="more"></span><h2 id="改进">改进</h2><p>如果还没看过上一篇的，可以移步这里看一下<a href="https://www.iszy.cc/posts/10/">Github Actions + Webhooks 实现项目自动化部署</a>。</p><p>这次的主要改进就是移除了 Webhooks 的依赖，不需要在服务器上进行监听。</p><p>其实很简单，就是通过 Github Actions 主动登录服务器，执行自定义脚本，完成 git pull 操作。</p><h2 id="Gihub-Actions-脚本">Gihub Actions 脚本</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1p2b25pbWlyU3VuL215LWhleG8tYmxvZy9ibG9iLzczYWY5OGFlNGVmOTUxNTZkMmU1MTY5NzYzM2I5ZmI0M2M1OTM4NmUvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95LnltbA==">完整脚本<i class="fa fa-external-link-alt"></i></span></p><p>大致内容和之前是一样的，优化了两个地方。</p><h3 id="增加缓存">增加缓存</h3><p>增加了对<code>node_modules</code>目录的缓存，从而在大部分时间里加速安装依赖的时间。由于 yarn 的机制，在没有更新 yarn.lock 文件时，安装依赖几乎可以说是直接跳过的，从而大大缩短了每次部署的时间。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">🛎️</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Restore</span> <span class="string">cached</span> <span class="string">./node_modules</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">./node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-yarn-lock-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;./yarn.lock&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line">            <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-yarn-lock-</span></span><br></pre></td></tr></table></figure><p>可以看到这边采用了官方的<code>actions/cache@v2</code>脚本，根据 yarn.lock 的 hash 值来缓存 node_modules 目录，可以不用担心没法升级依赖。</p><h3 id="登录服务器">登录服务器</h3><p>这边为了安全因素，建议将登录参数储存到项目的 Secrets 中，这样就能通过环境变量在 Github Actions 中调用，不用担心泄露的问题。</p><p><img data-src="https://img.iszy.xyz/20210923134132.png?x-oss-process=style/big" alt="Secrets"></p><p>点击项目的<code>Settings</code>-<code>Secrets</code>-<code>New repository secret</code>即可创建。Secret 名称就是环境变量名，内容则是具体的值。</p><p>接着调用<code>appleboy/ssh-action@master</code>脚本，将登录参数指定为对应的环境变量，然后配置一组需要执行的脚本，这边可以根据个人的实际情况进行配置，自由度很高了。既然都能登陆服务器，那自然是想做什么都可以了。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">🛎️</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Restore</span> <span class="string">cached</span> <span class="string">./node_modules</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">./node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-yarn-lock-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;./yarn.lock&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.os &#125;&#125;-yarn-lock-</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">hexo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span> <span class="string">🔧</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">yarn</span> <span class="string">install</span> <span class="string">--frozen-lockfile</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">app</span> <span class="string">🔧</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">g</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">🚀</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">JamesIves/github-pages-deploy-action@4.1.0</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br><span class="line">          <span class="attr">folder:</span> <span class="string">public</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">server</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">appleboy/ssh-action@master</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">host:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HOST</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.USERNAME</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">port:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.PORT</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">script:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            cd /your/path</span></span><br><span class="line"><span class="string">            git pull --rebase</span></span><br><span class="line"><span class="string">            ls -al</span></span><br></pre></td></tr></table></figure><h2 id="使用体验">使用体验</h2><p>这次的体验很好，基本上不用浪费自己服务器的性能，也可以通过自定义的脚本将服务器上自己关心的内容输出到日志中。我暂时认为这就是现阶段通过 Github Actions 完成自动化部署的最佳方案了。希望对大家有所帮助。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;前段时间写了一个通过 Github Actions 配合 Webhooks 实现项目自动化部署，但是服务器上由于并没有后端服务，所以实现的方式不太优雅。今天我将完全抛弃 Webhook，完全通过 Github Actions 来实现项目的自动化部署。&lt;/p&gt;</summary>
    
    
    
    <category term="应用" scheme="https://www.iszy.cc/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="Git" scheme="https://www.iszy.cc/tags/Git/"/>
    
    <category term="Github" scheme="https://www.iszy.cc/tags/Github/"/>
    
    <category term="Github Actions" scheme="https://www.iszy.cc/tags/Github-Actions/"/>
    
    <category term="自动化部署" scheme="https://www.iszy.cc/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>经纬度定位工具</title>
    <link href="https://www.iszy.cc/posts/9/"/>
    <id>https://www.iszy.cc/posts/9/</id>
    <published>2021-09-01T04:20:04.000Z</published>
    <updated>2021-09-01T04:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>我有个朋友有经纬度定位的需求，正好前几天做了个 GeoJSON 工具给自己用，部分内容可以直接用上，就准备自己做一个，应该能比网上的界面更加清爽舒服一些。</p><span id="more"></span><h2 id="成果">成果</h2><p>欢迎体验</p><p><span class="exturl" data-url="aHR0cHM6Ly90b29scy5pc3p5Lnh5ei9naXMvbGF0TG5n">经纬度查询-ISZY 工具集合<i class="fa fa-external-link-alt"></i></span></p><p><img data-src="https://img.iszy.xyz/20210903134509.png?x-oss-process=style/big" alt="经纬度查询-ISZY 工具集合"></p><h2 id="功能">功能</h2><ul><li>界面由 Leaflet 地图窗口和 JSON 编辑器组成</li><li>底图，默认使用高德街道底图，天地图个人 token 每日访问次数有限<ul><li>高德街道底图</li><li>高德影像底图</li><li>天地图街道底图</li><li>天地图影像底图</li><li>天地图地形底图</li><li>OpenStreetMap 街道底图</li></ul></li><li>默认定位到 <code>105N , 35E</code> 感觉地图展示起来好看点，中心点默认弹窗展示中心经纬度。经纬度随着移动地图会实时更新。</li><li>如果允许定位，初始会尝试定位到设备所在位置。坐标经过高德接口转换成高德地图所用的火星坐标系</li><li>点击地图，会展示点击位置的经纬度。</li><li>通过直接输入经纬度，将会在地图进行定位，并调用高德接口查询标准地址。</li><li>可以输入结构化地址，查找目标定位。</li></ul><h2 id="后续">后续</h2><ol><li>考虑支持切换坐标系，火星坐标系和 WGS84 坐标系</li><li>考虑将高德瓦片做偏移，矫正到 WGS84 坐标系</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;我有个朋友有经纬度定位的需求，正好前几天做了个 GeoJSON 工具给自己用，部分内容可以直接用上，就准备自己做一个，应该能比网上的界面更加清爽舒服一些。&lt;/p&gt;</summary>
    
    
    
    <category term="应用" scheme="https://www.iszy.cc/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://www.iszy.cc/tags/Vue/"/>
    
    <category term="GIS" scheme="https://www.iszy.cc/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>自用GeoJSON工具</title>
    <link href="https://www.iszy.cc/posts/8/"/>
    <id>https://www.iszy.cc/posts/8/</id>
    <published>2021-08-27T04:19:59.000Z</published>
    <updated>2021-08-27T04:19:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>平常遇到 GeoJSON 都喜欢去 <span class="exturl" data-url="aHR0cHM6Ly9nZW9qc29uLmlv">GeoJSON.IO<i class="fa fa-external-link-alt"></i></span> 上看一下数据，是 Mapbox 做的，功能还挺好用的。不过这个网站不开代理有时候速度还是挺慢的，我正好在写小工具集合，何不自己写一个呢。</p><span id="more"></span><h2 id="成果">成果</h2><p>欢迎体验</p><p><span class="exturl" data-url="aHR0cHM6Ly90b29scy5pc3p5Lnh5ei9naXMvZ2VvanNvbg==">GeoJSON-ISZY 工具集合<i class="fa fa-external-link-alt"></i></span></p><p><img data-src="https://img.iszy.xyz/20210903134058.png?x-oss-process=style/big" alt="GeoJSON-ISZY 工具集合"></p><h2 id="功能">功能</h2><p>当然，自己看过 <span class="exturl" data-url="aHR0cDovL0dlb0pTT04uSU8=">GeoJSON.IO<i class="fa fa-external-link-alt"></i></span> 这个网站后呢，可以发现虽然看着挺简单的页面，功能还不少呢。我决定先做个比较基础的，包含以下功能，先能用再说。</p><ul><li>界面由 Leaflet 地图窗口和 JSON 编辑器组成</li><li>底图，默认使用高德街道底图，天地图个人 token 每日访问次数有限<ul><li>高德街道底图</li><li>高德影像底图</li><li>天地图街道底图</li><li>天地图影像底图</li><li>天地图地形底图</li><li>OpenStreetMap 街道底图</li></ul></li><li>支持在 JSON 编辑器输入 GeoJSON 后将 GeoJSON 添加到地图上<ul><li>在 JSON 编辑器输入完，编辑器失焦后，尝试解析 GeoJSON 并添加到地图上</li><li>在 JSON 编辑器一段时间没有继续输入，但没有失焦的情况下，也尝试解析 GeoJSON 并添加到地图上</li></ul></li><li>支持地图上单个 Feature 图形选择，选择后跳出弹窗展示属性，可编辑，编辑实时同步</li><li>通过表格界面展示所有 Feature 的属性表，支持编辑</li></ul><h2 id="部分说明">部分说明</h2><p>使用 Vue 3 开发，有些注意事项记录下。</p><ol><li><p>通过 leaflet-src.esm.js 能够按需导出 leaflet 中的组件，引入 jsoneditor 用于 GeoJSON 输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  map,</span><br><span class="line">  control,</span><br><span class="line">  tileLayer,</span><br><span class="line">  layerGroup,</span><br><span class="line">  geoJSON,</span><br><span class="line">  GeoJSON,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;leaflet/dist/leaflet-src.esm.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> JSONEditor <span class="keyword">from</span> <span class="string">&quot;jsoneditor&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;jsoneditor/dist/jsoneditor.min.css&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><p>初始化的 <code>map 对象</code>和 <code>JSONEditor 对象</code>如果要存入 data，需要使用 <code>markRaw</code> 标记不监听。</p></li><li><p>勿把经过代理的 <code>Layer 对象</code>直接加入图层控制组件，否则不能成功销毁 <code>map 对象</code>，可以通过以下方法规避。</p><ul><li>在销毁 <code>map 对象</code>前提前将该图层移出地图</li><li>在将 <code>Layer 对象</code>存入 data 前，使用 <code>markRaw</code> 标记不监听</li><li>如果需要监听该 <code>Layer 对象</code>变化，可以将监听后的对象用 <code>toRaw</code>方法转出未监听版本加入图层控制</li><li>在组件 beforeUnmount 时销毁对应的 <code>map 对象</code>和 <code>JSONEditor 对象</code>，这样会清除页面上的 DOM 和监听事件</li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;平常遇到 GeoJSON 都喜欢去 &lt;a href=&quot;https://geojson.io&quot;&gt;GeoJSON.IO&lt;/a&gt; 上看一下数据，是 Mapbox 做的，功能还挺好用的。不过这个网站不开代理有时候速度还是挺慢的，我正好在写小工具集合，何不自己写一个呢。&lt;/p&gt;</summary>
    
    
    
    <category term="应用" scheme="https://www.iszy.cc/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://www.iszy.cc/tags/Vue/"/>
    
    <category term="GIS" scheme="https://www.iszy.cc/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>NestJS 实践记录（一）：项目创建</title>
    <link href="https://www.iszy.cc/posts/7/"/>
    <id>https://www.iszy.cc/posts/7/</id>
    <published>2021-07-24T11:02:26.000Z</published>
    <updated>2021-07-24T11:02:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近想写一些功能接口给自己用，平常写前端比较多，我自己可怜的小服务器用 java 资源不是很充足，所以准备还是用 Node.js 来实现后端，选用 NestJS 作为本次开发的后端框架。</p><span id="more"></span><blockquote><p>Nest (NestJS) 是一个用于构建高效、可扩展的 Node.js 服务器端应用程序的开发框架。它利用 JavaScript 的渐进增强的能力，使用并完全支持 TypeScript （仍然允许开发者使用纯 JavaScript 进行开发），并结合了 OOP （面向对象编程）、FP （函数式编程）和 FRP （函数响应式编程）。</p><p>在底层，Nest 构建在强大的 HTTP 服务器框架上，例如 Express （默认），并且还可以通过配置从而使用 Fastify ！</p><p>Nest 在这些常见的 Node.js 框架 (Express/Fastify) 之上提高了一个抽象级别，但仍然向开发者直接暴露了底层框架的 API。这使得开发者可以自由地使用适用于底层平台的无数的第三方模块。</p></blockquote><p>NestJS 是我最近才了解到的一个非常流行的 Node.js 框架，用起来很有一种在编写 Spring Boot 的熟悉感，又能使用我更加熟悉的 JavaScript 来进行编写，是对我来说比较理想的后端框架。在此记录下实践的过程。</p><h2 id="项目创建">项目创建</h2><p>本机环境：</p><ul><li>Node.js: 14.17.0</li><li>npm: 7.11.2</li><li>NestJS: 8.0.0</li><li>TypeScirpt: 4.3.5</li></ul><p>在安装好 Node.js 后，在全局安装 <code>NestJS cli</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @nestjs/cli</span><br></pre></td></tr></table></figure><p>运行如下命令创建项目，<code>nest-cli</code>会根据参数初始化项目文件。接着会让你选择想用的包管理器，<code>npm</code>或<code>yarn</code>，我选择了<code>yarn</code>，因为我感觉国内即使换了源，<code>yarn</code> 似乎也更快一些。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nest new project-name</span><br></pre></td></tr></table></figure><p>完成安装后就会显示如下信息。</p><p><img data-src="https://img.iszy.xyz/20210724195818.png" alt=""></p><p>目录结构可以参考 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lc3Rqcy90eXBlc2NyaXB0LXN0YXJ0ZXI=">Nest framework TypeScript starter repository<i class="fa fa-external-link-alt"></i></span>，项目就是基于这个创建的。我们可以看到这个模板使用了 TypeScript 语言，NestJS 也是可以基于 JavaScript 运行的，创建时加上参数配置如下所示即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nest new project-name -l JavaScript</span><br></pre></td></tr></table></figure><p>更多参数可以参考 cli 的帮助，<code>nest new --help</code>。</p><p><img data-src="https://img.iszy.xyz/20210724201411.png" alt=""></p><p>运行<code>yarn start</code>后，NestJS 就会开始运行，当显示<code>Nest application successfully started</code>时，即表示启动完成。</p><p><img data-src="https://img.iszy.xyz/20210724201050.png" alt=""></p><p>此时可以访问 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDozMDAw">http://localhost:3000<i class="fa fa-external-link-alt"></i></span>，就能看到默认返回的 <code>Hello World!</code> 了。</p><p><img data-src="https://img.iszy.xyz/20210724201226.png" alt=""></p><h2 id="项目结构">项目结构</h2><p>初始项目结构如下，我们主要关注 <code>src</code> 目录</p><p><img data-src="https://img.iszy.xyz/20210725123352.png" alt=""></p><p>初始内容由一个入口文件 <code>main.ts</code>、用于定义路由的 controller 文件<code>app.controller.ts</code>、用于具体方法实现的 provider 文件 <code>app.service.ts</code>、以及一个将 controller 和 service 文件关联在一起的 module 文件组成。</p><p>打开入口文件<code>src/main.ts</code>，内容如下。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; NestFactory &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/core&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppModule &#125; <span class="keyword">from</span> <span class="string">&quot;./app.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bootstrap</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> app = <span class="keyword">await</span> NestFactory.create(AppModule);</span><br><span class="line">  <span class="keyword">await</span> app.listen(<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line">bootstrap();</span><br></pre></td></tr></table></figure><p>可以看到使用 Nest 工厂函数创建了 <code>AppModule</code>，然后将应用监听到了 3000 端口，现在应用将在 3000 端口接受 HTTP 请求。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Module &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppController &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppService &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  <span class="attr">imports</span>: [],</span><br><span class="line">  <span class="attr">controllers</span>: [AppController],</span><br><span class="line">  <span class="attr">providers</span>: [AppService],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>在根模组 AppModule 中，注册了 AppController 和 AppService。<strong>值得注意的是，provider 需要在 module 中注册后才能为其他 provider 或者 controller 提供服务。</strong></p><p>在 AppController 中，添加了默认的 Get 路由 getHello，通过引入的 provider AppService 来实际提供逻辑代码。因为没有指定路由的路径，那就是默认的根路径，也就是我们访问的<code>http://localhost:3000/</code>。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.controller.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Controller, Get &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppService &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppController</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> appService: AppService</span>)</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>()</span><br><span class="line">  getHello(): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.appService.getHello();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 provider AppService 中，我们可以看到这个<code>getHello</code>方法就是返回了一个<code>Hello World!</code>，也是就我们之前访问<code>http://localhost:3000/</code>看到的内容。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.service.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppService</span> </span>&#123;</span><br><span class="line">  getHello(): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里基本可以了解了 NestJS 的设计理念，主要就是由<code>Controller</code>、<code>Provider</code>和<code>Module</code>组成成模组来提供服务。</p><ul><li>Controller: 控制器，提供 Api 接口，定义路由等，不实际处理业务。</li><li>Provider: 也就是<code>Service</code>，为<code>Controller</code>或其他<code>Provider</code>提供服务，在这里编写实际的处理代码。</li><li>Module: 负责连接<code>Provider</code>和<code>Controller</code>，类似于命名空间的概念，在同一个<code>Module</code>中注册过的 <code>Provider</code>才能引入并提供服务。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近想写一些功能接口给自己用，平常写前端比较多，我自己可怜的小服务器用 java 资源不是很充足，所以准备还是用 Node.js 来实现后端，选用 NestJS 作为本次开发的后端框架。&lt;/p&gt;</summary>
    
    
    
    <category term="应用" scheme="https://www.iszy.cc/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="NestJS" scheme="https://www.iszy.cc/tags/NestJS/"/>
    
    <category term="TypeScript" scheme="https://www.iszy.cc/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>给数组原型对象添加方法</title>
    <link href="https://www.iszy.cc/posts/6/"/>
    <id>https://www.iszy.cc/posts/6/</id>
    <published>2021-06-15T02:24:35.000Z</published>
    <updated>2021-06-15T02:24:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用<code>for...in</code>方法的时候发现枚举到了意料之外的<code>prototype</code>内的方法，发现是没有正确为数组原型对象添加方法，在此记录。</p><span id="more"></span><h2 id="问题">问题</h2><p>一般我们如何给一个数组原型对象添加方法呢，比如我们添加一个去重方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> n = &#123;&#125;,</span><br><span class="line">    r = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!n[<span class="built_in">this</span>[i]]) &#123;</span><br><span class="line">      n[<span class="built_in">this</span>[i]] = <span class="literal">true</span>;</span><br><span class="line">      r.push(<span class="built_in">this</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> r;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我看不少文章里这样就好了，这就会出现我刚刚说到的问题。在你使用<code>for...in</code>方法遍历数组时就会拿到<code>unique</code>这个 key 值，这个是不符合我们预期的。</p><p>其实出现这样的情况是因为<code>Array.prototype</code>对象的<code>unique</code>属性的描述值<code>enumerable</code>为<code>true</code>，也就是可枚举，在枚举对象属性时会被枚举到（<code>for...in</code>或<code>Object.keys</code>方法）。</p><p>根据<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9FbnVtZXJhYmlsaXR5X2FuZF9vd25lcnNoaXBfb2ZfcHJvcGVydGllcw==">MDN Web Docs<i class="fa fa-external-link-alt"></i></span>说明，可枚举属性是指那些内部 <code>可枚举</code> 标志设置为 <code>true</code> 的属性，对于通过直接的赋值和属性初始化的属性，该标识值默认为即为 <code>true</code>，对于通过 <code>Object.defineProperty</code> 等定义的属性，该标识值默认为 <code>false</code>。可枚举的属性可以通过 <code>for...in</code> 循环进行遍历（除非该属性名是一个 <code>Symbol</code>）。</p><h2 id="解决">解决</h2><p>正确的方法如下，忽略方法内容。</p><h3 id="方法一">方法一</h3><p>先添加方法，再通过 <code>Object.defineProperty</code> 设置为不可枚举。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(<span class="built_in">Array</span>.prototype, <span class="string">&quot;unique&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">enumerable</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="方法二">方法二</h3><p>或者直接通过 <code>Object.defineProperty</code> 方法添加。此时<code>enumerable</code>默认为<code>false</code>，不用特别指定。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(<span class="built_in">Array</span>.prototype, <span class="string">&quot;unique&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天使用&lt;code&gt;for...in&lt;/code&gt;方法的时候发现枚举到了意料之外的&lt;code&gt;prototype&lt;/code&gt;内的方法，发现是没有正确为数组原型对象添加方法，在此记录。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>奥利奥生成器与Canvas绘制图片不显示问题</title>
    <link href="https://www.iszy.cc/posts/5/"/>
    <id>https://www.iszy.cc/posts/5/</id>
    <published>2021-05-17T06:28:42.000Z</published>
    <updated>2021-05-17T06:28:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近尝试在 Vue 中实现奥利奥生成器的效果，遇到使用 Canvas 的 drawImage 方法绘制图片不显示的问题，在此记录下解决过程。</p><span id="more"></span><h2 id="前言">前言</h2><p>欢迎体验</p><p><span class="exturl" data-url="aHR0cHM6Ly90b29scy5pc3p5Lnh5ei9vdGhlcnMvb3Jlb29v">奥利奥生成器<i class="fa fa-external-link-alt"></i></span></p><p><img data-src="https://img.iszy.xyz/20210523144733.png" alt=""><img data-src="https://img.iszy.xyz/20210523144706.png" alt=""></p><h2 id="实现思路">实现思路</h2><p>奥利奥的原理，就是根据不同的字符串组合，对应不同的图片，然后按顺序将图片绘制到 canvas 上，最终生成图片。</p><p>canvas 的 drawImage 有几种用法。</p><ul><li>在画布上定位图像: <code>ctx.drawImage(img,x,y);</code></li><li>在画布上定位图像，并规定图像的宽度和高度: <code>ctx.drawImage(img,x,y,width,height);</code></li><li>剪切图像，并在画布上定位被剪切的部分: <code>ctx.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);</code></li></ul><p>我们这里只需要使用第二种方法，控制下图片的大小即可。</p><p>参数值</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>img</td><td>规定要使用的图像、画布或视频。</td></tr><tr><td>sx 可选。</td><td>开始剪切的 x 坐标位置。</td></tr><tr><td>sy 可选。</td><td>开始剪切的 y 坐标位置。</td></tr><tr><td>swidth 可选。</td><td>被剪切图像的宽度。</td></tr><tr><td>sheight 可选。</td><td>被剪切图像的高度。</td></tr><tr><td>x</td><td>在画布上放置图像的 x 坐标位置。</td></tr><tr><td>y</td><td>在画布上放置图像的 y 坐标位置。</td></tr><tr><td>width 可选。</td><td>要使用的图像的宽度（伸展或缩小图像）。</td></tr><tr><td>height 可选。</td><td>要使用的图像的高度（伸展或缩小图像）。</td></tr></tbody></table><p>一般情况下，都按照下面的示例来使用。把绘制写到 img 的 onload 事件里，是因为如果图片还没有加载完成，drawImage 是不生效的，这样能够保证图片已经加载完成。不过因为我们需要多次调用同一张图片，绘制多次，这样的方法就不是很方便。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = <span class="built_in">document</span>.getElementById(<span class="string">&quot;myCanvas&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> ctx = c.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">&quot;scream&quot;</span>);</span><br><span class="line">img.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  ctx.drawImage(img, <span class="number">10</span>, <span class="number">10</span>, <span class="number">150</span>, <span class="number">180</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>于是尝试将加载的图片缓存一下，方便调用，使用的是下面的方法。sources 中是图片名称和图片地址的键值对，使用 Image 对象设置 src 的方式加载图片；在 onload 事件中，记录加载完成的次数；当全部加载完成时，将存储了这些 Image 对象的 cacheImages 对象存储下来以便调用。</p><p>在原版 oreooo 的页面中，我可以看到这个方法是有效的。但是我在 Vue 3 + Vite 2 的环境下，虽然 cacheImages 成功存储了，也能在 Networks 里面看到网络请求，但是 canvas 绘制出来的图形一直是空白的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">loadImages: <span class="function"><span class="keyword">function</span> (<span class="params">sources, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> cacheImages = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> attCount = <span class="built_in">Object</span>.getOwnPropertyNames(sources).length;</span><br><span class="line">    <span class="keyword">for</span> (imgItem <span class="keyword">in</span> sources) &#123;</span><br><span class="line">        cacheImages[imgItem] = <span class="keyword">new</span> Image();</span><br><span class="line">        cacheImages[imgItem].onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            index++;</span><br><span class="line">            <span class="keyword">if</span> (index == attCount) &#123;</span><br><span class="line">                images = cacheImages;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> callback === <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">                    callback();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cacheImages[imgItem].src = sources[imgItem];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或许是需要实际存在的 img 标签才有用，我如果页面上实际就有这个图片，我测试了下，确实就能获取到图片绘制出来了。于是我换了种写法，通过在页面实际加载图片，然后在绘制时获取图片 DOM 的 image，只要图片已经加载完成了，绘制时就能正常出图了。下面是在 Vue 里的一个大概示例。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgContainer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;assets.O&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;O&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;assets.R&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;R&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;assets.Ob&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;Ob&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;output-image&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">ref</span>=<span class="string">&quot;oreo_canvas&quot;</span> <span class="attr">width</span>=<span class="string">&quot;240&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br><span class="line">      您的浏览器不支持 HTML5 canvas 标签。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> O <span class="keyword">from</span> <span class="string">&quot;./assets/image/O.png&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> R <span class="keyword">from</span> <span class="string">&quot;./assets/image/R.png&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> Ob <span class="keyword">from</span> <span class="string">&quot;./assets/image/Ob.png&quot;</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">assets</span>: &#123;</span></span><br><span class="line"><span class="javascript">        O,</span></span><br><span class="line"><span class="javascript">        R,</span></span><br><span class="line"><span class="javascript">        Ob,</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;),</span></span><br><span class="line"><span class="javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">generateImage</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> canvas = <span class="built_in">this</span>.$refs.oreo_canvas;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> ctx = canvas.getContext(<span class="string">&quot;2d&quot;</span>);</span></span><br><span class="line"><span class="javascript">        ctx.drawImage(<span class="built_in">this</span>.$refs.O.image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">240</span>, <span class="number">160</span>);</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">  &#125;;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.imgContainer</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结">总结</h2><p>Canvas 的 drawImage 在图片还未加载完成时是不会生效的，由于这个特性，需要保证在调用 drawImage 时图片已经加载完成，否则就会有不显示的现象。解决的方案有下面两种。</p><ul><li>将 drawImage 事件写在图片的 onload 事件中，这样可以保证图片已经加载。</li><li>可以在页面上写上 img 标签实际加载图片，然后 drawImage 时调用 img 的 DOM 下的 image 属性进行绘制。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近尝试在 Vue 中实现奥利奥生成器的效果，遇到使用 Canvas 的 drawImage 方法绘制图片不显示的问题，在此记录下解决过程。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="应用" scheme="https://www.iszy.cc/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://www.iszy.cc/tags/Vue/"/>
    
    <category term="Canvas" scheme="https://www.iszy.cc/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>Vuex数据持久化</title>
    <link href="https://www.iszy.cc/posts/4/"/>
    <id>https://www.iszy.cc/posts/4/</id>
    <published>2021-05-13T12:51:26.000Z</published>
    <updated>2021-05-13T12:51:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知，Vuex 的数据是存储在内存中的，刷新一下网页这些数据就会丢失。而有些数据我们希望刷新后仍然能够留存，这就需要把数据存储下来。这里就记录一下，使用 localStorage 来持久化 Vuex 中的数据。</p><span id="more"></span><h2 id="实现思路">实现思路</h2><ol><li>因为 state 中的数据理论上只能通过 mutation 来进行更新，所以可以监听 mutation 事件，在每次事件执行后，将此时整个 state 的数据转为字符串后存储进 localStorage。</li><li>在页面初始化 state 时，读取 localStorage 值，重新转为 JSON 后，合并进当前 state。</li><li>这种方法只是一个简单的实现，只适用于简单对象，对复杂对象来说，重新转为 JSON 可能会失去对应的事件和方法，后面可以考虑以其他方式存储。</li></ol><h2 id="代码">代码</h2><p>插件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (options = &#123;&#125;) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> storage = options.storage || (<span class="built_in">window</span> &amp;&amp; <span class="built_in">window</span>.localStorage);</span><br><span class="line">  <span class="keyword">const</span> key = options.key || <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取state的值</span></span><br><span class="line">  <span class="keyword">const</span> getState = <span class="function">(<span class="params">key, storage</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> value = storage.getItem(key);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">typeof</span> value !== <span class="string">&quot;undefined&quot;</span> ? <span class="built_in">JSON</span>.parse(value) : <span class="literal">undefined</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.warn(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置state的值</span></span><br><span class="line">  <span class="keyword">const</span> setState = <span class="function">(<span class="params">key, state, storage</span>) =&gt;</span></span><br><span class="line">    storage.setItem(key, <span class="built_in">JSON</span>.stringify(state));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">store</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化时获取数据，如果有的话，把原来的vuex的state替换掉</span></span><br><span class="line">    <span class="keyword">const</span> data = <span class="built_in">Object</span>.assign(store.state, getState(key, storage));</span><br><span class="line">    <span class="keyword">if</span> (data) &#123;</span><br><span class="line">      store.replaceState(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 订阅 store 的 mutation。handler 会在每个 mutation 完成后调用，接收 mutation 和经过 mutation 后的状态作为参数</span></span><br><span class="line">    store.subscribe(<span class="function">(<span class="params">mutation, state</span>) =&gt;</span> &#123;</span><br><span class="line">      setState(key, state, storage);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>调用方式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VuexPersist <span class="keyword">from</span> <span class="string">&quot;@/plugins/VuexPersist&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [VuexPersist()],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;众所周知，Vuex 的数据是存储在内存中的，刷新一下网页这些数据就会丢失。而有些数据我们希望刷新后仍然能够留存，这就需要把数据存储下来。这里就记录一下，使用 localStorage 来持久化 Vuex 中的数据。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://www.iszy.cc/tags/Vue/"/>
    
    <category term="Vuex" scheme="https://www.iszy.cc/tags/Vuex/"/>
    
  </entry>
  
  <entry>
    <title>在Vue中使用CodeMirror实现编写JSON编辑器</title>
    <link href="https://www.iszy.cc/posts/3/"/>
    <id>https://www.iszy.cc/posts/3/</id>
    <published>2021-05-11T12:51:26.000Z</published>
    <updated>2021-05-11T12:51:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近写了个 JSON 编辑器给自己用，用 CodeMirror 来实现代码编辑器的功能，这边来记录下。</p><span id="more"></span><h2 id="安装依赖">安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save codemirror</span><br><span class="line">npm install --save jsonlint-mod</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add codemirror</span><br><span class="line">yarn add jsonlint-mod</span><br></pre></td></tr></table></figure><h2 id="代码">代码</h2><p>这边用的环境时 <code>Vue 3 + Vite 2</code></p><p><strong>要点:</strong></p><ul><li>不要将准备被渲染的 textarea 标签放在 template 顶层，在 vue 组件 unbind 时，由 CodeMirror 添加的 DOM 无法自动被移除。</li><li>根据需要引入对应的样式和 js</li><li>JSON 编辑器的 lint 需要引入外部插件<code>jsonlint-mod</code>，不要直接使用<code>jsonlint</code>，不支持通过 import 导入</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;codePanel&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">ref</span>=<span class="string">&quot;codemirror&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="comment">// 引入CodeMirror和基础样式</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> CodeMirror <span class="keyword">from</span> <span class="string">&quot;codemirror&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/lib/codemirror.css&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// JSON代码高亮需要由JavaScript插件支持</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/mode/javascript/javascript.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 选择IDEA主题样式，还有其他很多主题可选</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/theme/idea.css&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 支持使用Sublime快捷键</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/keymap/sublime.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 搜索功能的依赖</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/dialog/dialog.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/dialog/dialog.css&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 支持搜索功能</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/search/search&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/search/searchcursor.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 支持各种代码折叠</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/fold/foldgutter.css&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/fold/foldcode.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/fold/foldgutter.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/fold/brace-fold.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/fold/comment-fold.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 支持代码区域全屏功能</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/display/fullscreen.css&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/display/fullscreen.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 支持括号自动匹配</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/edit/matchbrackets.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/edit/closebrackets.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 支持代码自动补全</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/hint/show-hint.css&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/hint/show-hint.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/hint/anyword-hint.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 行注释</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/comment/comment.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// JSON错误检查</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/lint/lint.css&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/lint/lint.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 需要依赖全局的jsonlint，不是很优雅</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> <span class="string">&quot;codemirror/addon/lint/json-lint.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 引入jsonlint</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> jsonlint <span class="keyword">from</span> <span class="string">&quot;jsonlint-mod&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.jsonlint = jsonlint;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> codemirror;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">name</span>: <span class="string">&quot;JSON编辑器&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">code</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">    &#125;),</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 防止转为监听对象，vue3中如果CodeMirror对象被转为监听对象，会无法正常使用</span></span></span><br><span class="line"><span class="javascript">      codemirror = markRaw(</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 用ref获取需要渲染的textarea的DOM</span></span></span><br><span class="line"><span class="javascript">        CodeMirror.fromTextArea(<span class="built_in">this</span>.$refs.codemirror, &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">// JS高亮显示</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">mode</span>: <span class="string">&quot;application/json&quot;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">indentUnit</span>: <span class="number">2</span>, <span class="comment">// 缩进单位，默认2</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">smartIndent</span>: <span class="literal">true</span>, <span class="comment">// 是否智能缩进</span></span></span><br><span class="line"><span class="javascript">          <span class="comment">// 显示行号</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">styleActiveLine</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">lineNumbers</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 设置主题</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">theme</span>: <span class="string">&quot;idea&quot;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 绑定sublime快捷键</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">keyMap</span>: <span class="string">&quot;sublime&quot;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 开启代码折叠</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">lineWrapping</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">foldGutter</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">gutters</span>: [</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;CodeMirror-linenumbers&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;CodeMirror-foldgutter&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;CodeMirror-lint-markers&quot;</span>,</span></span><br><span class="line"><span class="javascript">          ],</span></span><br><span class="line"><span class="javascript">          <span class="comment">// CodeMirror-lint-markers是实现语法报错功能</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">lint</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">          <span class="comment">// 全屏模式</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">fullScreen</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">          <span class="comment">// 括号匹配</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">matchBrackets</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">autoCloseBrackets</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">          <span class="comment">// 额外快捷键</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">extraKeys</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">F11</span>: <span class="function">(<span class="params">cm</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">              cm.setOption(<span class="string">&quot;fullScreen&quot;</span>, !cm.getOption(<span class="string">&quot;fullScreen&quot;</span>));</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">Esc</span>: <span class="function">(<span class="params">cm</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">if</span> (cm.getOption(<span class="string">&quot;fullScreen&quot;</span>)) &#123;</span></span><br><span class="line"><span class="javascript">                cm.setOption(<span class="string">&quot;fullScreen&quot;</span>, <span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">              &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">          &#125;,</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">      );</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 将编辑器中的值存储下来</span></span></span><br><span class="line"><span class="javascript">      codemirror.on(<span class="string">&quot;change&quot;</span>, <span class="function">(<span class="params">cm</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.code = cm.getValue();</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">beforeUnmount</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.destroy();</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">destroy</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 获取代表编辑器的DOM</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> element = codemirror.doc.cm.getWrapperElement();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 删除编辑器实例</span></span></span><br><span class="line"><span class="javascript">        element &amp;&amp; element.remove &amp;&amp; element.remove();</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">  &#125;;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近写了个 JSON 编辑器给自己用，用 CodeMirror 来实现代码编辑器的功能，这边来记录下。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="应用" scheme="https://www.iszy.cc/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://www.iszy.cc/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>哔哩哔哩AV号、BV号转换</title>
    <link href="https://www.iszy.cc/posts/2/"/>
    <id>https://www.iszy.cc/posts/2/</id>
    <published>2021-05-10T12:32:24.000Z</published>
    <updated>2021-05-10T12:32:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>哔哩哔哩把以前 <code>av</code> + 数字的稿件地址格式更换为 <code>BV</code> + 字母数字的格式，类似 Youtube 的稿件编码方式已经有一段时间了。最近闲来无聊，搜了下，发现大佬们已经破解了转换的方法，并给出了 Python 测试代码。正好最近在写小工具合集，写着玩，就用 js 写了一个，留作备用。</p><span id="more"></span><h2 id="前言">前言</h2><p><span class="exturl" data-url="aHR0cHM6Ly90b29scy5pc3p5Lnh5ei9hbmltZS9iaWxpYmlsaUJ2MmF2">哔哩哔哩 AV、BV 号转换<i class="fa fa-external-link-alt"></i></span></p><p>网上应该已经有了类似工具，不过还是喜欢用自己写的，有问题也好改。有需要的可以用一下。</p><h2 id="原文-来自知乎mcfx-的答案">原文(来自知乎<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM4MTc4NDM3Ny9hbnN3ZXIvMTA5OTQzODc4NA==">mcfx 的答案<i class="fa fa-external-link-alt"></i></span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">table=<span class="string">&#x27;fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF&#x27;</span></span><br><span class="line">tr=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">58</span>):</span><br><span class="line">    tr[table[i]]=i</span><br><span class="line">s=[<span class="number">11</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">6</span>]</span><br><span class="line">xor=<span class="number">177451812</span></span><br><span class="line">add=<span class="number">8728348608</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dec</span>(<span class="params">x</span>):</span></span><br><span class="line">    r=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">        r+=tr[x[s[i]]]*<span class="number">58</span>**i</span><br><span class="line">    <span class="keyword">return</span> (r-add)^xor</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enc</span>(<span class="params">x</span>):</span></span><br><span class="line">    x=(x^xor)+add</span><br><span class="line">    r=<span class="built_in">list</span>(<span class="string">&#x27;BV1  4 1 7  &#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">        r[s[i]]=table[x//<span class="number">58</span>**i%<span class="number">58</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(r)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(dec(<span class="string">&#x27;BV17x411w7KC&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(dec(<span class="string">&#x27;BV1Q541167Qg&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(dec(<span class="string">&#x27;BV1mK4y1C7Bz&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(enc(<span class="number">170001</span>))</span><br><span class="line"><span class="built_in">print</span>(enc(<span class="number">455017605</span>))</span><br><span class="line"><span class="built_in">print</span>(enc(<span class="number">882584971</span>))</span><br></pre></td></tr></table></figure><p>互相转换脚本，如果算法没猜错，可以保证在 av 号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup></mrow><annotation encoding="application/x-tex">&lt; 2^{27}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.853208em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mrel">&lt;</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 时正确，同时应该在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><msup><mn>2</mn><mrow><mn>3</mn><mn>0</mn></mrow></msup></mrow><annotation encoding="application/x-tex">&lt; 2^{30}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.853208em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mrel">&lt;</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">3</span><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 时也是正确的。此代码以 WTFPL 开源。</p><p>UPD：之前的代码中，所有数位都被用到是乱凑的，实际上并不需要，目前只要低 6 位就足够了。（更大的 av 号需要 64 位整数存储，但是 b 站现在使用的应该还是 32 位整数，所以应该还要很久）</p><p>发现的方法：</p><p>首先从各种渠道的信息来看，应该是 base58 编码的。设 x 是一个钦定的 av 号，查询 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn><mn>8</mn><mi>k</mi><mo>+</mo><mi>x</mi><mo separator="true">,</mo><mn>5</mn><msup><mn>8</mn><mrow><mn>2</mn></mrow></msup><mi>k</mi><mo>+</mo><mi>x</mi><mo separator="true">,</mo><mn>5</mn><msup><mn>8</mn><mrow><mn>3</mn></mrow></msup><mi>k</mi><mo>+</mo><mi>x</mi><mo separator="true">,</mo><mn>5</mn><msup><mn>8</mn><mrow><mn>4</mn></mrow></msup><mi>k</mi><mo>+</mo><mi>x</mi><mo>(</mo><mi>k</mi><mo>∈</mo><mi>Z</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">58k+x,58^{2}k+x,58^{3}k+x,58^{4}k+x(k \in Z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">5</span><span class="mord mathrm">8</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mbin">+</span><span class="mord mathit">x</span><span class="mpunct">,</span><span class="mord mathrm">5</span><span class="mord"><span class="mord mathrm">8</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mbin">+</span><span class="mord mathit">x</span><span class="mpunct">,</span><span class="mord mathrm">5</span><span class="mord"><span class="mord mathrm">8</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mbin">+</span><span class="mord mathit">x</span><span class="mpunct">,</span><span class="mord mathrm">5</span><span class="mord"><span class="mord mathrm">8</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">4</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mbin">+</span><span class="mord mathit">x</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">∈</span><span class="mord mathit" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span></span> 这些 av 号对应的 bv 号，发现 bv 号的第 12、11、4、9、5 位分别会变化。所以猜测这些是 58 进制下的相应位。</p><p>但是直接 base58 是不行的，所以猜测异或了一个大数，并且 base58 的字符表可能打乱了。经过实验，bv 号最低位相同的数，av 号的奇偶性相同，这一定程度上印证了之前的猜想。</p><p>接下来找了一些 av 号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span>，满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span> 对应 bv 号的第 11 位不同。设异或的数为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.07847em;">X</span></span></span></span>，那么 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mfrac><mrow><mi>X</mi><mo>⊕</mo><mi>x</mi></mrow><mrow><mn>5</mn><mn>8</mn></mrow></mfrac><mo fence="true">]</mo></mrow><mo>≠</mo><mrow><mo fence="true">[</mo><mfrac><mrow><mi>X</mi><mo>⊕</mo><mo>(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>)</mo></mrow><mrow><mn>5</mn><mn>8</mn></mrow></mfrac><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left [\frac{X\oplus x}{58} \right]\neq \left [\frac{X\oplus (x+1)}{58} \right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.15em;"></span><span class="strut bottom" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="base textstyle uncramped"><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span><span class="mord mathrm">8</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mbin">⊕</span><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mrel">≠</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">5</span><span class="mord mathrm">8</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mbin">⊕</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathrm">1</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span>（ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊕</mo></mrow><annotation encoding="application/x-tex">\oplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="base textstyle uncramped"><span class="mord">⊕</span></span></span></span> 表示异或）。</p><p>由于 av 号（除了最新的少量视频）最多只有 27 bits，所以可以设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>=</mo><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mi>a</mi><mo>+</mo><mi>b</mi><mo>(</mo><mn>0</mn><mo>≤</mo><mi>b</mi><mo>≤</mo><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">X=2^{27}a+b(0\leq b\leq 2^{27})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mrel">=</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">a</span><span class="mbin">+</span><span class="mord mathit">b</span><span class="mopen">(</span><span class="mord mathrm">0</span><span class="mrel">≤</span><span class="mord mathit">b</span><span class="mrel">≤</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span></span> 。然后可以发现 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.07847em;">X</span></span></span></span> 只和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mi>a</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>5</mn><mn>8</mn></mrow><annotation encoding="application/x-tex">2^{27}a\ mod\ 58</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">a</span><span class="mord mspace"> </span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mspace"> </span><span class="mord mathrm">5</span><span class="mord mathrm">8</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span> 有关，那么可以枚举这两个值（一共 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mo>⋅</mo><mn>5</mn><mn>8</mn><mo>=</mo><mn>7</mn><mn>7</mn><mn>8</mn><mn>4</mn><mn>6</mn><mn>2</mn><mn>8</mn><mn>2</mn><mn>2</mn><mn>4</mn></mrow><annotation encoding="application/x-tex">2^{27} \cdot 58=7784628224</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">⋅</span><span class="mord mathrm">5</span><span class="mord mathrm">8</span><span class="mrel">=</span><span class="mord mathrm">7</span><span class="mord mathrm">7</span><span class="mord mathrm">8</span><span class="mord mathrm">4</span><span class="mord mathrm">6</span><span class="mord mathrm">2</span><span class="mord mathrm">8</span><span class="mord mathrm">2</span><span class="mord mathrm">2</span><span class="mord mathrm">4</span></span></span></span> 种情况）然后使用上面的式子检查，就能得到若干可能的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.07847em;">X</span></span></span></span> 只和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mi>a</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>5</mn><mn>8</mn></mrow><annotation encoding="application/x-tex">2^{27}a\ mod\ 58</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">a</span><span class="mord mspace"> </span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mspace"> </span><span class="mord mathrm">5</span><span class="mord mathrm">8</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span>。</p><p>这里我得到的可能值如下：（左边是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mi>a</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>5</mn><mn>8</mn></mrow><annotation encoding="application/x-tex">2^{27}a\ mod\ 58</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">a</span><span class="mord mspace"> </span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mspace"> </span><span class="mord mathrm">5</span><span class="mord mathrm">8</span></span></span></span>，右边是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">22 90983642</span><br><span class="line">22 90983643</span><br><span class="line">50 43234084</span><br><span class="line">50 43234085</span><br></pre></td></tr></table></figure><p>有奇有偶是因为异或 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.64444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span></span></span></span> 之后也能找到轮换表。而 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn><mn>0</mn><mn>9</mn><mn>8</mn><mn>3</mn><mn>6</mn><mn>4</mn><mn>2</mn><mo>+</mo><mn>4</mn><mn>3</mn><mn>2</mn><mn>3</mn><mn>4</mn><mn>0</mn><mn>8</mn><mn>5</mn><mo>=</mo><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">90983642+43234085=2^{27}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">9</span><span class="mord mathrm">0</span><span class="mord mathrm">9</span><span class="mord mathrm">8</span><span class="mord mathrm">3</span><span class="mord mathrm">6</span><span class="mord mathrm">4</span><span class="mord mathrm">2</span><span class="mbin">+</span><span class="mord mathrm">4</span><span class="mord mathrm">3</span><span class="mord mathrm">2</span><span class="mord mathrm">3</span><span class="mord mathrm">4</span><span class="mord mathrm">0</span><span class="mord mathrm">8</span><span class="mord mathrm">5</span><span class="mrel">=</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span> 则使得模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn><mn>8</mn></mrow><annotation encoding="application/x-tex">58</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.64444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">5</span><span class="mord mathrm">8</span></span></span></span> 的余数刚好变成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{27}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span> 减它。</p><p>我取了 <code>b=43234084</code>，然后处理最低位，可以得到一个字符表，即 <code>fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF</code>。</p><p>对于更高位，实际上还需要知道 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mi>a</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>5</mn><msup><mn>8</mn><mrow><mn>2</mn></mrow></msup><mo separator="true">,</mo><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mi>a</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>5</mn><msup><mn>8</mn><mrow><mn>3</mn></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">2^{27}a\ mod\ 58^{2},2^{27}a\ mod\ 58^{3},...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">a</span><span class="mord mspace"> </span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mspace"> </span><span class="mord mathrm">5</span><span class="mord"><span class="mord mathrm">8</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">a</span><span class="mord mspace"> </span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mspace"> </span><span class="mord mathrm">5</span><span class="mord"><span class="mord mathrm">8</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">3</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span></span></span></span>，这些值也可以 枚举 58 次得到，最后我得到的值是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup><mi>a</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>5</mn><msup><mn>8</mn><mrow><mn>4</mn></mrow></msup><mo>=</mo><mn>1</mn><mn>7</mn><mn>4</mn><mn>9</mn><mn>9</mn><mn>6</mn><mn>8</mn></mrow><annotation encoding="application/x-tex">2^{27}a\ mod\ 58^{4}=1749968</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">a</span><span class="mord mspace"> </span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mspace"> </span><span class="mord mathrm">5</span><span class="mord"><span class="mord mathrm">8</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">4</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mord mathrm">7</span><span class="mord mathrm">4</span><span class="mord mathrm">9</span><span class="mord mathrm">9</span><span class="mord mathrm">6</span><span class="mord mathrm">8</span></span></span></span> 。</p><p>这时我发现，每一位的字符表是相同的（实际上只对 <code>b=43234084</code> 是这样的），然后再微调一下参数（上面代码中的两个 magic number 就相当于这里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span><span class="mpunct">,</span><span class="mord mathit">b</span></span></span></span>），最后处理了一下 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo><msup><mn>2</mn><mrow><mn>2</mn><mn>7</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\geq 2^{27}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.950078em;vertical-align:-0.13597em;"></span><span class="base textstyle uncramped"><span class="mrel">≥</span><span class="mord"><span class="mord mathrm">2</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathrm">7</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 的情况就得到了这份代码。</p><h2 id="Vue-JS-实现">Vue + JS 实现</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">name</span>: <span class="string">&quot;bilibiliBv2av&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">aid</span>: <span class="string">&quot;19390801&quot;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">bvid</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="attr">table</span>: <span class="string">&quot;fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF&quot;</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">tr</span>: &#123;&#125;,</span></span><br><span class="line"><span class="javascript">      <span class="attr">s</span>: [<span class="number">11</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">6</span>],</span></span><br><span class="line"><span class="javascript">      <span class="attr">xor</span>: <span class="number">177451812</span>,</span></span><br><span class="line"><span class="javascript">      <span class="attr">add</span>: <span class="number">8728348608</span>,</span></span><br><span class="line"><span class="javascript">    &#125;),</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.init();</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">init</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">58</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.tr[<span class="built_in">this</span>.table[i]] = i;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.enc(<span class="built_in">this</span>.aid);</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">dec</span>(<span class="params">x</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> r = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">            r += <span class="built_in">this</span>.tr[x[<span class="built_in">this</span>.s[i]]] * <span class="number">58</span> ** i;</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.aid = (r - <span class="built_in">this</span>.add) ^ <span class="built_in">this</span>.xor;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">catch</span> (e) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.aid = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="title">enc</span>(<span class="params">x</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">          x = <span class="built_in">parseInt</span>(x);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (!<span class="built_in">isNaN</span>(x)) &#123;</span></span><br><span class="line"><span class="javascript">            x = (x ^ <span class="built_in">this</span>.xor) + <span class="built_in">this</span>.add;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> r = [</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot;B&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot;V&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot;1&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot; &quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot; &quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot;4&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot; &quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot;1&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot; &quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot;7&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot; &quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">&quot; &quot;</span>,</span></span><br><span class="line"><span class="javascript">            ];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">              r[<span class="built_in">this</span>.s[i]] = <span class="built_in">this</span>.table[<span class="built_in">Math</span>.floor(x / <span class="number">58</span> ** i) % <span class="number">58</span>];</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.bvid = r.join(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.bvid = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">catch</span> (e) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.bvid = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">  &#125;;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;哔哩哔哩把以前 &lt;code&gt;av&lt;/code&gt; + 数字的稿件地址格式更换为 &lt;code&gt;BV&lt;/code&gt; + 字母数字的格式，类似 Youtube 的稿件编码方式已经有一段时间了。最近闲来无聊，搜了下，发现大佬们已经破解了转换的方法，并给出了 Python 测试代码。正好最近在写小工具合集，写着玩，就用 js 写了一个，留作备用。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://www.iszy.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
    <category term="Python" scheme="https://www.iszy.cc/tags/Python/"/>
    
    <category term="Vue" scheme="https://www.iszy.cc/tags/Vue/"/>
    
    <category term="Bilibili" scheme="https://www.iszy.cc/tags/Bilibili/"/>
    
    <category term="哔哩哔哩" scheme="https://www.iszy.cc/tags/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/"/>
    
  </entry>
  
  <entry>
    <title>多次提前还贷计算器及PMT 函数</title>
    <link href="https://www.iszy.cc/posts/1/"/>
    <id>https://www.iszy.cc/posts/1/</id>
    <published>2021-04-16T05:50:06.000Z</published>
    <updated>2022-02-03T13:20:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近写了个计算多次提前还贷的计算器，大家可以尝试使用，计算结果仅供参考。</p><span id="more"></span><h2 id="前言">前言</h2><p><span class="exturl" data-url="aHR0cHM6Ly90b29scy5pc3p5Lnh5ei9tb25leS9tdHFMb2Fucw==">多次提前还贷计算器<i class="fa fa-external-link-alt"></i></span></p><p>网上这样的工具其实不少，不过用起来不是很得劲。比如有的还款时间只能写到月份，有的限制了多次提前还款的次数，不是很自由。</p><p>所以我就用 vue 自己写了一个，自认为还挺好用的吧，没有设置什么限制，不过精度问题还需要继续优化。</p><p><img data-src="https://img.iszy.xyz/20210416175915.png" alt=""></p><h2 id="实现">实现</h2><h3 id="输入输出">输入输出</h3><p>输入:</p><ul><li>贷款金额</li><li>贷款期限</li><li>贷款利率</li><li>还款方式(等额本息、等额本金)</li><li>首次还款时间</li><li>提前还款<ul><li>还款金额</li><li>还款时间</li><li>调整期数</li><li>调整利率</li></ul></li></ul><p>输出:</p><ul><li>累计提前还款</li><li>累计调整期数</li><li>原累计利息</li><li>累计缴息</li><li>累计节省利息</li><li>每月明细</li></ul><h3 id="月明细计算">月明细计算</h3><ul><li><p><strong>每月利息</strong>: <code>本月剩余本金 * 年利率 / 12</code></p></li><li><p><strong>每月还款额</strong>:</p><ul><li>等额本息: 用 <code>PMT 函数</code>计算</li><li>等额本金: <code>本月偿还本金 + 本月利息</code></li></ul></li><li><p><strong>每月偿还本金</strong>:</p><ul><li>等额本息: <code>本月还款额 - 本月利息</code></li><li>等额本金: <code>本月剩余本金 / 剩余期数</code></li></ul></li></ul><h3 id="PMT-函数">PMT 函数</h3><p>这个函数本是 Excel 里的，不过 Excel 不开源，只好另外用 js 来实现。这里使用的是网上的大佬实现的版本。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Copy of Excel&#x27;s PMT function.</span></span><br><span class="line"><span class="comment"> * Credit: http://stackoverflow.com/questions/2094967/excel-pmt-function-in-js</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>ratePerPeriod       The interest rate for the loan.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>numberOfPayments    The total number of payments for the loan in months.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>presentValue        The present value, or the total amount that a series of future payments is worth now;</span></span><br><span class="line"><span class="comment"> *                            Also known as the principal.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>futureValue         The future value, or a cash balance you want to attain after the last payment is made.</span></span><br><span class="line"><span class="comment"> *                            If fv is omitted, it is assumed to be 0 (zero), that is, the future value of a loan is 0.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>type                Optional, defaults to 0. The number 0 (zero) or 1 and indicates when payments are due.</span></span><br><span class="line"><span class="comment"> *                              0 = At the end of period</span></span><br><span class="line"><span class="comment"> *                              1 = At the beginning of the period</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pmt</span>(<span class="params">ratePerPeriod, numberOfPayments, presentValue, futureValue, type</span>) </span>&#123;</span><br><span class="line">  futureValue = <span class="keyword">typeof</span> futureValue !== <span class="string">&quot;undefined&quot;</span> ? futureValue : <span class="number">0</span>;</span><br><span class="line">  type = <span class="keyword">typeof</span> type !== <span class="string">&quot;undefined&quot;</span> ? type : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (ratePerPeriod !== <span class="number">0.0</span>) &#123;</span><br><span class="line">    <span class="comment">// Interest rate exists</span></span><br><span class="line">    <span class="keyword">const</span> q = <span class="built_in">Math</span>.pow(<span class="number">1</span> + ratePerPeriod, numberOfPayments);</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      -(ratePerPeriod * (futureValue + q * presentValue)) /</span><br><span class="line">      ((-<span class="number">1</span> + q) * (<span class="number">1</span> + ratePerPeriod * type))</span><br><span class="line">    );</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (numberOfPayments !== <span class="number">0.0</span>) &#123;</span><br><span class="line">    <span class="comment">// No interest rate, but number of payments exists</span></span><br><span class="line">    <span class="keyword">return</span> -(futureValue + presentValue) / numberOfPayments;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近写了个计算多次提前还贷的计算器，大家可以尝试使用，计算结果仅供参考。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://www.iszy.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="应用" scheme="https://www.iszy.cc/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="小工具" scheme="https://www.iszy.cc/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    <category term="JavaScript" scheme="https://www.iszy.cc/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Github Actions + Webhooks 实现项目自动化部署</title>
    <link href="https://www.iszy.cc/posts/10/"/>
    <id>https://www.iszy.cc/posts/10/</id>
    <published>2021-04-06T04:20:04.000Z</published>
    <updated>2021-04-06T04:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近 Github 有推出类似 Gitlab ci 的 Github actions，想折腾一下博客的自动部署，在此记录。</p><span id="more"></span><h2 id="思路">思路</h2><p>初步的想法是通过 Github Actions 编译项目，然后将编译完成的输出推送到 deploy 或者 gh-pages 分支，然后通过 Webhook 通知服务器，最终通过脚本进入部署目录将文件 pull 下来完成整个部署流程。</p><h2 id="Github-Actions-脚本">Github Actions 脚本</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1p2b25pbWlyU3VuL215LWhleG8tYmxvZy9ibG9iLzljYWMxNWFhNTIyYTQ2ZWQ2NmE3MDdjMzM4ZWQyMjlkMjBkYWRjMTkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95LnltbA==">完整脚本<i class="fa fa-external-link-alt"></i></span></p><h3 id="指定触发-Action-的事件">指定触发 Action 的事件</h3><p>首先要指定触发部署的事件，在这里我将事件指定为 main 分支的推送事件，main 分支的 pull_request 事件，以及允许手动启动部署操作以防万一。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">pull_request:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br></pre></td></tr></table></figure><h3 id="设置-Action-要执行的命令">设置 Action 要执行的命令</h3><p>一个 Action 里可以配置多个 job，可以通过 <code>runs-on</code> 设置 job 执行的环境，这里我选择了 <code>ubuntu-latest</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br></pre></td></tr></table></figure><p>每个 job 由多个 step 组成，这里可以选择别人封装好的 action 脚本，也可以选择执行自定义的脚本。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">🛎️</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">12</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="number">12.</span><span class="string">x</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">hexo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span> <span class="string">🔧</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">yarn</span> <span class="string">install</span> <span class="string">--frozen-lockfile</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">app</span> <span class="string">🔧</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">g</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">🚀</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">JamesIves/github-pages-deploy-action@4.1.0</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br><span class="line">          <span class="attr">folder:</span> <span class="string">public</span></span><br></pre></td></tr></table></figure><ol><li><p>首先使用官方提供的<code>actions/checkout@v2</code>切换到需要执行的分支。如果像我这样没有指定任何配置，那将会默认切换到触发 Action 的分支。</p></li><li><p>使用 <code>actions/setup-node@v1</code> 切换 Node.js 版本。一般环境中都是预装了 Node.js 和 yarn 的，可以直接使用，如果不需要指定到 Node.js 的旧版本，则可以跳过这一步。<code>node-version</code>参数可以像我这样，指定一个版本，也可以配置成一个数组，那么接下来的操作会自动在每一个指定的 Node.js 版本下执行，比较适合测试兼容性这样的使用场景。</p></li><li><p>接下来直接用 <code>run</code> 参数执行自定义的编译脚本，运行默认都是在项目所在的根目录下执行的。</p></li><li><p>最终使用了第三方的 Action <code>JamesIves/github-pages-deploy-action@4.1.0</code>将指定目录(public)下的文件推送到对应的分支(gh-pages)，接下来只需要去服务器上把文件 pull 下来即可。</p></li></ol><h3 id="配置-Webhook">配置 Webhook</h3><p>由于是纯静态博客，所以我的服务器上也是没有后端的，所以我找了一个变通的方式来实现。</p><p>在网站的 deploy 路径下放了一个静态的 json 文件，配置允许通过任何请求方式请求，将此文件的请求日志写入系统目录。然后通过一个脚本监听此文件，当有新内容时，进入文件部署目录执行 <code>git pull</code>。</p><p>然后将此路径配置到项目的 Webhook 配置中，如图所示。这样当触发 push 操作时，github 就会发送一个 post 请求到此路径，也就能触发我服务器上的部署脚本了。</p><p><img data-src="https://img.iszy.xyz/20210923132313.png?x-oss-process=style/big" alt="Webhook"></p><h2 id="使用体验">使用体验</h2><p>基本能够在我提交代码后，很好的完成整套部署流程，不再需要去服务器上进行操作，方便了很多。不过感觉通过循环监听文件的方法不是很优雅，效率也不是很高，后面我会考虑是否能有更好的替代方案。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近 Github 有推出类似 Gitlab ci 的 Github actions，想折腾一下博客的自动部署，在此记录。&lt;/p&gt;</summary>
    
    
    
    <category term="应用" scheme="https://www.iszy.cc/categories/%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="Git" scheme="https://www.iszy.cc/tags/Git/"/>
    
    <category term="Github" scheme="https://www.iszy.cc/tags/Github/"/>
    
    <category term="Github Actions" scheme="https://www.iszy.cc/tags/Github-Actions/"/>
    
    <category term="自动化部署" scheme="https://www.iszy.cc/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    
    <category term="Webhooks" scheme="https://www.iszy.cc/tags/Webhooks/"/>
    
  </entry>
  
</feed>
